Search.setIndex({"docnames": ["api/modules", "api/tilelang", "api/tilelang.autotuner", "api/tilelang.autotuner.capture", "api/tilelang.autotuner.param", "api/tilelang.autotuner.tuner", "api/tilelang.cache", "api/tilelang.cache.kernel_cache", "api/tilelang.cache.tuner_cache", "api/tilelang.carver", "api/tilelang.carver.analysis", "api/tilelang.carver.arch", "api/tilelang.carver.arch.arch_base", "api/tilelang.carver.arch.cdna", "api/tilelang.carver.arch.cpu", "api/tilelang.carver.arch.cuda", "api/tilelang.carver.arch.driver", "api/tilelang.carver.arch.driver.cuda_driver", "api/tilelang.carver.common_schedules", "api/tilelang.carver.matmul_analysis", "api/tilelang.carver.roller", "api/tilelang.carver.roller.bestfit", "api/tilelang.carver.roller.hint", "api/tilelang.carver.roller.node", "api/tilelang.carver.roller.policy", "api/tilelang.carver.roller.policy.common", "api/tilelang.carver.roller.policy.default", "api/tilelang.carver.roller.policy.tensorcore", "api/tilelang.carver.roller.rasterization", "api/tilelang.carver.roller.shape_inference", "api/tilelang.carver.roller.shape_inference.common", "api/tilelang.carver.roller.shape_inference.tir", "api/tilelang.carver.template", "api/tilelang.carver.template.base", "api/tilelang.carver.template.conv", "api/tilelang.carver.template.elementwise", "api/tilelang.carver.template.flashattention", "api/tilelang.carver.template.gemv", "api/tilelang.carver.template.general_reduce", "api/tilelang.carver.template.matmul", "api/tilelang.carver.utils", "api/tilelang.common", "api/tilelang.common.transform_kind", "api/tilelang.contrib", "api/tilelang.contrib.cc", "api/tilelang.contrib.dlpack", "api/tilelang.contrib.hipcc", "api/tilelang.contrib.nvcc", "api/tilelang.contrib.nvrtc", "api/tilelang.contrib.rocm", "api/tilelang.engine", "api/tilelang.engine.callback", "api/tilelang.engine.lower", "api/tilelang.engine.param", "api/tilelang.engine.phase", "api/tilelang.env", "api/tilelang.intrinsics", "api/tilelang.intrinsics.mfma_layout", "api/tilelang.intrinsics.mfma_macro_generator", "api/tilelang.intrinsics.mma_layout", "api/tilelang.intrinsics.mma_macro_generator", "api/tilelang.intrinsics.utils", "api/tilelang.jit", "api/tilelang.jit.adapter", "api/tilelang.jit.adapter.base", "api/tilelang.jit.adapter.ctypes", "api/tilelang.jit.adapter.ctypes.adapter", "api/tilelang.jit.adapter.cython", "api/tilelang.jit.adapter.cython.adapter", "api/tilelang.jit.adapter.cython.cython_wrapper", "api/tilelang.jit.adapter.dlpack", "api/tilelang.jit.adapter.libgen", "api/tilelang.jit.adapter.nvrtc", "api/tilelang.jit.adapter.nvrtc.adapter", "api/tilelang.jit.adapter.utils", "api/tilelang.jit.adapter.wrapper", "api/tilelang.jit.env", "api/tilelang.jit.kernel", "api/tilelang.jit.param", "api/tilelang.language", "api/tilelang.language.allocate", "api/tilelang.language.builtin", "api/tilelang.language.copy", "api/tilelang.language.customize", "api/tilelang.language.experimental", "api/tilelang.language.experimental.gemm_sp", "api/tilelang.language.fill", "api/tilelang.language.frame", "api/tilelang.language.gemm", "api/tilelang.language.kernel", "api/tilelang.language.logical", "api/tilelang.language.memscope", "api/tilelang.language.parallel", "api/tilelang.language.persistent", "api/tilelang.language.pipeline", "api/tilelang.language.print", "api/tilelang.language.proxy", "api/tilelang.language.reduce", "api/tilelang.language.tir", "api/tilelang.language.tir.entry", "api/tilelang.language.tir.ir", "api/tilelang.language.tir.op", "api/tilelang.language.warpgroup", "api/tilelang.layout", "api/tilelang.layout.fragment", "api/tilelang.layout.gemm_sp", "api/tilelang.layout.layout", "api/tilelang.layout.swizzle", "api/tilelang.math", "api/tilelang.primitives", "api/tilelang.primitives.gemm", "api/tilelang.primitives.gemm.base", "api/tilelang.primitives.gemm.gemm_mma", "api/tilelang.profiler", "api/tilelang.profiler.bench", "api/tilelang.quantize", "api/tilelang.quantize.lop3", "api/tilelang.quantize.quantization", "api/tilelang.quantize.utils", "api/tilelang.testing", "api/tilelang.tools", "api/tilelang.tools.Analyzer", "api/tilelang.tools.plot_layout", "api/tilelang.transform", "api/tilelang.transform.pass_config", "api/tilelang.transform.simplify", "api/tilelang.utils", "api/tilelang.utils.deprecated", "api/tilelang.utils.language", "api/tilelang.utils.sparse", "api/tilelang.utils.target", "api/tilelang.utils.tensor", "deeplearning_operators/deepseek_mla", "deeplearning_operators/elementwise", "deeplearning_operators/gemv", "deeplearning_operators/matmul", "get_started/Installation", "get_started/overview", "index", "privacy", "tutorials/auto_tuning", "tutorials/debug_tools_for_tilelang"], "filenames": ["api/modules.rst", "api/tilelang.rst", "api/tilelang.autotuner.rst", "api/tilelang.autotuner.capture.rst", "api/tilelang.autotuner.param.rst", "api/tilelang.autotuner.tuner.rst", "api/tilelang.cache.rst", "api/tilelang.cache.kernel_cache.rst", "api/tilelang.cache.tuner_cache.rst", "api/tilelang.carver.rst", "api/tilelang.carver.analysis.rst", "api/tilelang.carver.arch.rst", "api/tilelang.carver.arch.arch_base.rst", "api/tilelang.carver.arch.cdna.rst", "api/tilelang.carver.arch.cpu.rst", "api/tilelang.carver.arch.cuda.rst", "api/tilelang.carver.arch.driver.rst", "api/tilelang.carver.arch.driver.cuda_driver.rst", "api/tilelang.carver.common_schedules.rst", "api/tilelang.carver.matmul_analysis.rst", "api/tilelang.carver.roller.rst", "api/tilelang.carver.roller.bestfit.rst", "api/tilelang.carver.roller.hint.rst", "api/tilelang.carver.roller.node.rst", "api/tilelang.carver.roller.policy.rst", "api/tilelang.carver.roller.policy.common.rst", "api/tilelang.carver.roller.policy.default.rst", "api/tilelang.carver.roller.policy.tensorcore.rst", "api/tilelang.carver.roller.rasterization.rst", "api/tilelang.carver.roller.shape_inference.rst", "api/tilelang.carver.roller.shape_inference.common.rst", "api/tilelang.carver.roller.shape_inference.tir.rst", "api/tilelang.carver.template.rst", "api/tilelang.carver.template.base.rst", "api/tilelang.carver.template.conv.rst", "api/tilelang.carver.template.elementwise.rst", "api/tilelang.carver.template.flashattention.rst", "api/tilelang.carver.template.gemv.rst", "api/tilelang.carver.template.general_reduce.rst", "api/tilelang.carver.template.matmul.rst", "api/tilelang.carver.utils.rst", "api/tilelang.common.rst", "api/tilelang.common.transform_kind.rst", "api/tilelang.contrib.rst", "api/tilelang.contrib.cc.rst", "api/tilelang.contrib.dlpack.rst", "api/tilelang.contrib.hipcc.rst", "api/tilelang.contrib.nvcc.rst", "api/tilelang.contrib.nvrtc.rst", "api/tilelang.contrib.rocm.rst", "api/tilelang.engine.rst", "api/tilelang.engine.callback.rst", "api/tilelang.engine.lower.rst", "api/tilelang.engine.param.rst", "api/tilelang.engine.phase.rst", "api/tilelang.env.rst", "api/tilelang.intrinsics.rst", "api/tilelang.intrinsics.mfma_layout.rst", "api/tilelang.intrinsics.mfma_macro_generator.rst", "api/tilelang.intrinsics.mma_layout.rst", "api/tilelang.intrinsics.mma_macro_generator.rst", "api/tilelang.intrinsics.utils.rst", "api/tilelang.jit.rst", "api/tilelang.jit.adapter.rst", "api/tilelang.jit.adapter.base.rst", "api/tilelang.jit.adapter.ctypes.rst", "api/tilelang.jit.adapter.ctypes.adapter.rst", "api/tilelang.jit.adapter.cython.rst", "api/tilelang.jit.adapter.cython.adapter.rst", "api/tilelang.jit.adapter.cython.cython_wrapper.rst", "api/tilelang.jit.adapter.dlpack.rst", "api/tilelang.jit.adapter.libgen.rst", "api/tilelang.jit.adapter.nvrtc.rst", "api/tilelang.jit.adapter.nvrtc.adapter.rst", "api/tilelang.jit.adapter.utils.rst", "api/tilelang.jit.adapter.wrapper.rst", "api/tilelang.jit.env.rst", "api/tilelang.jit.kernel.rst", "api/tilelang.jit.param.rst", "api/tilelang.language.rst", "api/tilelang.language.allocate.rst", "api/tilelang.language.builtin.rst", "api/tilelang.language.copy.rst", "api/tilelang.language.customize.rst", "api/tilelang.language.experimental.rst", "api/tilelang.language.experimental.gemm_sp.rst", "api/tilelang.language.fill.rst", "api/tilelang.language.frame.rst", "api/tilelang.language.gemm.rst", "api/tilelang.language.kernel.rst", "api/tilelang.language.logical.rst", "api/tilelang.language.memscope.rst", "api/tilelang.language.parallel.rst", "api/tilelang.language.persistent.rst", "api/tilelang.language.pipeline.rst", "api/tilelang.language.print.rst", "api/tilelang.language.proxy.rst", "api/tilelang.language.reduce.rst", "api/tilelang.language.tir.rst", "api/tilelang.language.tir.entry.rst", "api/tilelang.language.tir.ir.rst", "api/tilelang.language.tir.op.rst", "api/tilelang.language.warpgroup.rst", "api/tilelang.layout.rst", "api/tilelang.layout.fragment.rst", "api/tilelang.layout.gemm_sp.rst", "api/tilelang.layout.layout.rst", "api/tilelang.layout.swizzle.rst", "api/tilelang.math.rst", "api/tilelang.primitives.rst", "api/tilelang.primitives.gemm.rst", "api/tilelang.primitives.gemm.base.rst", "api/tilelang.primitives.gemm.gemm_mma.rst", "api/tilelang.profiler.rst", "api/tilelang.profiler.bench.rst", "api/tilelang.quantize.rst", "api/tilelang.quantize.lop3.rst", "api/tilelang.quantize.quantization.rst", "api/tilelang.quantize.utils.rst", "api/tilelang.testing.rst", "api/tilelang.tools.rst", "api/tilelang.tools.Analyzer.rst", "api/tilelang.tools.plot_layout.rst", "api/tilelang.transform.rst", "api/tilelang.transform.pass_config.rst", "api/tilelang.transform.simplify.rst", "api/tilelang.utils.rst", "api/tilelang.utils.deprecated.rst", "api/tilelang.utils.language.rst", "api/tilelang.utils.sparse.rst", "api/tilelang.utils.target.rst", "api/tilelang.utils.tensor.rst", "deeplearning_operators/deepseek_mla.md", "deeplearning_operators/elementwise.md", "deeplearning_operators/gemv.md", "deeplearning_operators/matmul.md", "get_started/Installation.md", "get_started/overview.md", "index.md", "privacy.md", "tutorials/auto_tuning.md", "tutorials/debug_tools_for_tilelang.md"], "titles": ["Python API", "tilelang package", "tilelang.autotuner package", "tilelang.autotuner.capture module", "tilelang.autotuner.param module", "tilelang.autotuner.tuner module", "tilelang.cache package", "tilelang.cache.kernel_cache module", "tilelang.cache.tuner_cache module", "tilelang.carver package", "tilelang.carver.analysis module", "tilelang.carver.arch package", "tilelang.carver.arch.arch_base module", "tilelang.carver.arch.cdna module", "tilelang.carver.arch.cpu module", "tilelang.carver.arch.cuda module", "tilelang.carver.arch.driver package", "tilelang.carver.arch.driver.cuda_driver module", "tilelang.carver.common_schedules module", "tilelang.carver.matmul_analysis module", "tilelang.carver.roller package", "tilelang.carver.roller.bestfit module", "tilelang.carver.roller.hint module", "tilelang.carver.roller.node module", "tilelang.carver.roller.policy package", "tilelang.carver.roller.policy.common module", "tilelang.carver.roller.policy.default module", "tilelang.carver.roller.policy.tensorcore module", "tilelang.carver.roller.rasterization module", "tilelang.carver.roller.shape_inference package", "tilelang.carver.roller.shape_inference.common module", "tilelang.carver.roller.shape_inference.tir module", "tilelang.carver.template package", "tilelang.carver.template.base module", "tilelang.carver.template.conv module", "tilelang.carver.template.elementwise module", "tilelang.carver.template.flashattention module", "tilelang.carver.template.gemv module", "tilelang.carver.template.general_reduce module", "tilelang.carver.template.matmul module", "tilelang.carver.utils module", "tilelang.common package", "tilelang.common.transform_kind module", "tilelang.contrib package", "tilelang.contrib.cc module", "tilelang.contrib.dlpack module", "tilelang.contrib.hipcc module", "tilelang.contrib.nvcc module", "tilelang.contrib.nvrtc module", "tilelang.contrib.rocm module", "tilelang.engine package", "tilelang.engine.callback module", "tilelang.engine.lower module", "tilelang.engine.param module", "tilelang.engine.phase module", "tilelang.env module", "tilelang.intrinsics package", "tilelang.intrinsics.mfma_layout module", "tilelang.intrinsics.mfma_macro_generator module", "tilelang.intrinsics.mma_layout module", "tilelang.intrinsics.mma_macro_generator module", "tilelang.intrinsics.utils module", "tilelang.jit package", "tilelang.jit.adapter package", "tilelang.jit.adapter.base module", "tilelang.jit.adapter.ctypes package", "tilelang.jit.adapter.ctypes.adapter module", "tilelang.jit.adapter.cython package", "tilelang.jit.adapter.cython.adapter module", "tilelang.jit.adapter.cython.cython_wrapper module", "tilelang.jit.adapter.dlpack module", "tilelang.jit.adapter.libgen module", "tilelang.jit.adapter.nvrtc package", "tilelang.jit.adapter.nvrtc.adapter module", "tilelang.jit.adapter.utils module", "tilelang.jit.adapter.wrapper module", "tilelang.jit.env module", "tilelang.jit.kernel module", "tilelang.jit.param module", "tilelang.language package", "tilelang.language.allocate module", "tilelang.language.builtin module", "tilelang.language.copy module", "tilelang.language.customize module", "tilelang.language.experimental package", "tilelang.language.experimental.gemm_sp module", "tilelang.language.fill module", "tilelang.language.frame module", "tilelang.language.gemm module", "tilelang.language.kernel module", "tilelang.language.logical module", "tilelang.language.memscope module", "tilelang.language.parallel module", "tilelang.language.persistent module", "tilelang.language.pipeline module", "tilelang.language.print module", "tilelang.language.proxy module", "tilelang.language.reduce module", "tilelang.language.tir package", "tilelang.language.tir.entry module", "tilelang.language.tir.ir module", "tilelang.language.tir.op module", "tilelang.language.warpgroup module", "tilelang.layout package", "tilelang.layout.fragment module", "tilelang.layout.gemm_sp module", "tilelang.layout.layout module", "tilelang.layout.swizzle module", "tilelang.math package", "tilelang.primitives package", "tilelang.primitives.gemm package", "tilelang.primitives.gemm.base module", "tilelang.primitives.gemm.gemm_mma module", "tilelang.profiler package", "tilelang.profiler.bench module", "tilelang.quantize package", "tilelang.quantize.lop3 module", "tilelang.quantize.quantization module", "tilelang.quantize.utils module", "tilelang.testing package", "tilelang.tools package", "tilelang.tools.Analyzer module", "tilelang.tools.plot_layout module", "tilelang.transform package", "tilelang.transform.pass_config module", "tilelang.transform.simplify module", "tilelang.utils package", "tilelang.utils.deprecated module", "tilelang.utils.language module", "tilelang.utils.sparse module", "tilelang.utils.target module", "tilelang.utils.tensor module", "\ud83d\ude80 Write High Performance FlashMLA with TileLang on Hopper", "ElementWise Operators", "General Matrix-Vector Multiplication (GEMV)", "General Matrix-Matrix Multiplication with Tile Library", "Installation Guide", "The Tile Language: A Brief Introduction", "\ud83d\udc4b Welcome to Tile Language", "Privacy", "Auto-Tuning Techniques for Performance Optimization", "Debugging Tile Language Programs"], "terms": {"tilelang": [0, 135, 136, 137, 138, 141], "packag": [0, 136], "subpackag": 0, "autotun": [0, 1, 140], "submodul": [0, 109], "modul": [0, 136], "content": [0, 86, 101, 141], "cach": [0, 1, 5, 28, 55, 68, 114, 132, 134, 135, 137], "carver": [0, 1], "common": [0, 1, 18, 20, 24, 29, 81, 124, 132, 133, 140], "contrib": [0, 1], "engin": [0, 1, 113, 141], "intrins": [0, 1, 22, 86, 90, 101, 116, 135, 137], "jit": [0, 1, 4, 5, 52, 113, 134, 135, 140], "languag": [0, 1, 109, 126, 132, 133, 134, 135, 140], "layout": [0, 1, 19, 60, 79, 101, 122, 123, 135, 137], "math": [0, 1, 101, 124], "primit": [0, 1, 95, 132, 134, 135, 137, 141], "profil": [0, 1, 4, 5, 53, 64, 66, 68, 70, 77, 101, 126, 135, 141], "quantiz": [0, 1], "test": [0, 1, 5, 101, 132, 133, 135, 136], "tool": [0, 1, 89, 92, 93, 94, 102, 134, 141], "transform": [0, 1, 19, 60, 82, 104, 106, 121, 132, 140, 141], "util": [0, 1, 4, 6, 7, 8, 9, 44, 46, 47, 49, 53, 56, 62, 63, 64, 66, 68, 70, 80, 95, 113, 114, 115, 117, 132, 133, 137], "env": [0, 1, 47, 62], "disable_cach": [0, 1, 55], "enable_cach": [0, 1, 55], "is_cache_en": [0, 1, 55], "tqdmlogginghandl": [0, 1], "emit": [0, 1], "set_log_level": [0, 1], "captur": [1, 2, 12, 137], "autotuneinputscaptur": [1, 2, 3], "capturestack": [1, 2, 3], "get_autotune_input": [1, 2, 3], "set_autotune_input": [1, 2, 3], "param": [1, 2, 7, 8, 50, 62, 64, 66, 68, 70, 73, 77, 101, 113, 121], "autotuneresult": [1, 2, 4, 5], "compilearg": [1, 2, 4, 5], "profilearg": [1, 2, 4, 5], "tuner": [1, 2, 4, 135], "timeoutexcept": [1, 2, 5], "get_available_cpu_count": [1, 2, 5], "run_with_timeout": [1, 2, 5], "timeout_handl": [1, 2, 5], "kernel_cach": [1, 6], "kernelcach": [1, 6, 7, 8], "tuner_cach": [1, 6], "autotunercach": [1, 6, 8], "clear_cach": [1, 6, 7, 8], "get_cache_dir": [1, 6, 7, 8, 63, 67, 68], "set_cache_dir": [1, 6, 7, 8], "arch": [1, 9, 24, 26, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 105, 140], "roller": [1, 9, 36], "templat": [1, 9, 132, 133, 140], "analysi": [1, 9, 19, 31, 120, 121, 123, 132, 141], "blockinfo": [1, 9, 10, 18, 23], "iterinfo": [1, 9, 10], "check_func_with_dynam": [1, 9, 10], "collect_block_iter_vars_used_in_access_region": [1, 9, 10], "collect_vars_used_in_prim_expr": [1, 9, 10], "detect_dominant_read": [1, 9, 10], "find_var_from_func": [1, 9, 10], "get_coalesced_veclen": [1, 9, 10], "get_max_shared_memory_per_block": [1, 9, 10], "get_max_threads_per_block": [1, 9, 10], "get_reduction_block": [1, 9, 10], "get_root_block": [1, 9, 10], "is_broadcast_epilogu": [1, 9, 10], "normalize_prim_func": [1, 9, 10], "common_schedul": [1, 9], "get_block": [1, 9, 18], "get_output_block": [1, 9, 18], "try_inlin": [1, 9, 18], "try_inline_contiguous_spati": [1, 9, 18], "matmul_analysi": [1, 9], "iterkind": [1, 9, 19], "itertrait": [1, 9, 19], "auto_inline_consumer_chain": [1, 9, 19], "auto_inline_consum": [1, 9, 19], "auto_inline_produc": [1, 9, 19], "collect_vars_from_expr": [1, 9, 19], "detect_iter_trait": [1, 9, 19], "find_arg_idx_from_buffer_chain": [1, 9, 19], "find_first_similar_buff": [1, 9, 19], "find_first_similar_region": [1, 9, 19], "find_last_producer_from_buff": [1, 9, 19], "get_dequantize_block": [1, 9, 19], "get_in_out_dtyp": [1, 9, 19], "get_index_map": [1, 9, 19], "get_ladder_stage3_map": [1, 9, 19], "get_propagate_map": [1, 9, 19], "get_tensorized_func_and_tag": [1, 9, 19], "inline_transpose_block": [1, 9, 19], "is_identity_block": [1, 9, 19], "is_identity_or_transpose_block": [1, 9, 19], "is_transpose_block": [1, 9, 19], "layout_propagate_chain": [1, 9, 19], "make_iter_fusion_index_map": [1, 9, 19], "normalize_to_matmul": [1, 9, 19], "get_rasterization_cod": [1, 9, 40], "get_roller_hints_from_func": [1, 9, 40], "get_roller_hints_from_output_nod": [1, 9, 40], "retrieve_func_from_modul": [1, 9, 40, 126, 128], "transform_kind": [1, 41], "transformkind": [1, 41, 42, 60], "cc": [1, 43, 141], "create_execut": [1, 43, 44], "create_shar": [1, 43, 44], "create_staticlib": [1, 43, 44], "cross_compil": [1, 43, 44], "get_cc": [1, 43, 44], "get_cplus_compil": [1, 43, 44], "get_global_symbol_section_map": [1, 43, 44], "get_target_by_dump_machin": [1, 43, 44], "dlpack": [1, 4, 5, 6, 7, 8, 43, 62, 63, 77], "convert_func": [1, 43, 45], "to_pytorch_func": [1, 43, 45], "hipcc": [1, 43], "compile_hip": [1, 43, 46], "nvcc": [1, 43, 141], "callback_libdevice_path": [1, 43, 47], "compile_cuda": [1, 43, 47], "find_cuda_path": [1, 43, 47], "get_cuda_vers": [1, 43, 47], "get_nvcc_compil": [1, 43, 47], "have_cudagraph": [1, 43, 47], "have_fp16": [1, 43, 47], "have_int8": [1, 43, 47], "have_tensorcor": [1, 43, 47], "parse_compute_vers": [1, 43, 47, 49], "nvrtc": [1, 6, 7, 43, 62, 63, 75, 77], "rocm": [1, 43, 130, 136], "find_lld": [1, 43, 49], "find_rocm_path": [1, 43, 49], "have_matrixcor": [1, 43, 49], "rocm_link": [1, 43, 49], "callback": [1, 50, 101], "register_cuda_postproc": [1, 50, 51], "register_cuda_postproc_callback": [1, 50, 51, 141], "register_hip_postproc": [1, 50, 51], "register_hip_postproc_callback": [1, 50, 51], "lower": [1, 50, 101, 104, 123, 124, 132, 135, 137, 141], "canon_target_host": [1, 50, 52], "device_codegen": [1, 50, 52], "device_codegen_without_compil": [1, 50, 52], "extrac_param": [1, 50, 52], "get_device_cal": [1, 50, 52], "get_host_cal": [1, 50, 52], "has_device_kernel_launch": [1, 50, 52], "host_codegen": [1, 50, 52], "is_cpu_device_backend": [1, 50, 52], "is_device_cal": [1, 50, 52, 141], "is_device_call_c_devic": [1, 50, 52], "compiledartifact": [1, 50, 52, 53, 77], "kernelparam": [1, 50, 52, 53, 64, 68, 70, 73, 77, 113], "phase": [1, 50, 134], "lowerandleg": [1, 50, 54], "optimizefortarget": [1, 50, 54], "allow_fence_proxi": [1, 50, 54], "allow_global_thread_synchron": [1, 50, 54], "allow_tma_and_warp_speci": [1, 50, 54], "allow_vector": [1, 50, 54], "allow_warp_speci": [1, 50, 54], "should_enable_aggressive_merg": [1, 50, 54], "mfma_layout": [1, 56], "make_mfma_swizzle_layout": [1, 56, 57], "shared_16x16_to_ldmatrix_64x4_layout": [1, 56, 57], "shared_16x16_to_local_64x4_layout_a": [1, 56, 57], "shared_16x16_to_local_64x4_layout_b": [1, 56, 57], "shared_16x16_to_local_64x4_layout_c": [1, 56, 57], "shared_16x16_to_local_64x4_layout_k_n": [1, 56, 57], "shared_16x16_to_local_64x4_layout_m_n": [1, 56, 57], "shared_16x16_to_local_64x4_layout_n_k": [1, 56, 57], "shared_16x16_to_local_64x4_layout_n_m": [1, 56, 57], "shared_16x32_to_local_64x8_layout_a": [1, 56, 57], "shared_16x32_to_local_64x8_layout_b": [1, 56, 57], "shared_16x4_to_local_64x1_layout_a": [1, 56, 57], "shared_16x64_to_local_64x16_layout_a": [1, 56, 57], "shared_16x64_to_local_64x16_layout_b": [1, 56, 57], "shared_4x16_to_local_64x1_layout_b": [1, 56, 57], "thread_id_shared_access_64x16_to_16x64_layout_a": [1, 56, 57], "thread_id_shared_access_64x16_to_16x64_layout_b": [1, 56, 57], "thread_id_shared_access_64x1_to_16x4_layout_a": [1, 56, 57], "thread_id_shared_access_64x1_to_4x16_layout_b": [1, 56, 57], "thread_id_shared_access_64x4_to_16x16_layout_a": [1, 56, 57], "thread_id_shared_access_64x4_to_16x16_layout_b": [1, 56, 57], "thread_id_shared_access_64x4_to_16x16_layout_c_m_n": [1, 56, 57], "thread_id_shared_access_64x4_to_16x16_layout_c_n_m": [1, 56, 57], "thread_id_shared_access_64x8_to_16x32_layout_a": [1, 56, 57], "thread_id_shared_access_64x8_to_16x32_layout_b": [1, 56, 57], "mfma_macro_gener": [1, 56], "matrixcoreintrinemitt": [1, 56, 58], "mma_layout": [1, 56], "get_swizzle_layout": [1, 56, 59], "ldmatrix_16x32_to_shared_16x32_layout_a": [1, 56, 59], "ldmatrix_16x32_to_shared_16x32_layout_b": [1, 56, 59], "ldmatrix_32x16_to_shared_16x32_layout_a": [1, 56, 59], "ldmatrix_32x16_to_shared_16x32_layout_b": [1, 56, 59], "ldmatrix_32x8_to_shared_16x16_layout": [1, 56, 59], "ldmatrix_trans_32x8_to_shared_16x16_layout": [1, 56, 59], "make_mma_swizzle_layout": [1, 56, 59, 135], "mma_32x8_to_shared_16x16_layout": [1, 56, 59], "mma_store_32x8_to_shared_16x16_layout": [1, 56, 59], "shared_16x16_to_mma_32x8_layout": [1, 56, 59, 61], "shared_16x16_to_mma_32x8_layout_r": [1, 56, 59], "shared_16x16_to_mma_32x8_layout_sr": [1, 56, 59], "shared_16x16_to_mma_32x8_layout_tran": [1, 56, 59], "shared_16x16_to_mma_32x8_smoothlayout": [1, 56, 59], "shared_16x32_to_mma_32x16_layout": [1, 56, 59, 61], "shared_16x32_to_mma_32x16_smoothlayout": [1, 56, 59], "shared_32x16_to_mma_32x16_layout": [1, 56, 59, 61], "shared_32x16_to_mma_32x16_smoothlayout": [1, 56, 59], "mma_macro_gener": [1, 56], "int4tensorcoreintrinemitt": [1, 56, 60], "int4tensorcoreintrinemitterwithladdertransform": [1, 56, 60], "tensorcoreintrinemitt": [1, 56, 60, 112], "tensorcoreintrinemitterwithladdertransform": [1, 56, 60], "get_ldmatrix_offset": [1, 56, 61], "get_mma_micro_s": [1, 56, 61], "index_to_coordin": [1, 56, 61], "mfma_store_index_map": [1, 56, 61], "mma_store_index_map": [1, 56, 61], "adapt": [1, 62, 77, 113, 134], "kernel": [1, 2, 4, 5, 6, 7, 8, 19, 34, 52, 53, 55, 62, 66, 68, 72, 73, 78, 79, 81, 82, 96, 102, 113, 124, 132, 133, 134, 135, 137, 138, 140, 141], "jitkernel": [1, 6, 7, 8, 62, 77], "program": [1, 4, 5, 19, 52, 62, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 102, 132, 133, 134, 135, 138, 140], "compil": [1, 4, 5, 6, 7, 8, 44, 46, 47, 49, 52, 53, 62, 66, 68, 77, 78, 124, 130, 132, 134, 135, 138, 141], "experiment": [1, 79, 132, 133, 134, 135], "tir": [1, 4, 10, 18, 19, 20, 29, 58, 60, 62, 66, 68, 73, 77, 79, 81, 82, 85, 87, 88, 90, 93, 95, 96, 97, 111, 112, 117, 124, 141], "alloc": [1, 79, 81, 101, 124, 132, 133, 135], "alloc_barri": [1, 79, 80], "alloc_frag": [1, 79, 80, 132, 133, 135, 137], "alloc_loc": [1, 79, 80, 134], "alloc_shar": [1, 79, 80, 132, 134, 135, 137], "alloc_var": [1, 79, 80], "builtin": [1, 79], "barrier_arr": [1, 79, 81], "barrier_wait": [1, 79, 81], "create_list_of_mbarri": [1, 79, 81], "create_tma_descriptor": [1, 79, 81], "dec_max_nreg": [1, 79, 81], "fence_proxy_async": [1, 79, 81, 134], "get_mbarri": [1, 79, 81], "inc_max_nreg": [1, 79, 81], "mbarrier_arr": [1, 79, 81, 134], "mbarrier_expect_tx": [1, 79, 81], "mbarrier_wait_par": [1, 79, 81], "no_set_max_nreg": [1, 79, 81], "set_max_nreg": [1, 79, 81], "shfl_down": [1, 79, 81], "shfl_up": [1, 79, 81], "shfl_xor": [1, 79, 81], "sync_glob": [1, 79, 81], "sync_grid": [1, 79, 81], "sync_thread_parti": [1, 79, 81], "sync_thread": [1, 79, 81], "tma_load": [1, 79, 81], "tma_store_arr": [1, 79, 81], "tma_store_wait": [1, 79, 81], "wait_wgmma": [1, 79, 81], "copi": [1, 79, 81, 97, 101, 123, 124, 132, 133, 135, 136, 137, 141], "buffer_load_to_tile_region": [1, 79, 82], "buffer_region_to_tile_region": [1, 79, 82], "buffer_to_tile_region": [1, 79, 82], "c2d_im2col": [1, 79, 82], "region": [1, 10, 19, 79, 82, 86, 90, 132], "custom": [1, 79, 89, 102, 131, 132], "atomic_add": [1, 79, 83, 134], "atomic_addx2": [1, 79, 83], "atomic_addx4": [1, 79, 83], "clamp": [1, 79, 83], "dp4a": [1, 79, 83], "reshap": [1, 79, 83], "view": [1, 79, 83, 134], "fill": [1, 79, 101, 137], "clear": [1, 6, 7, 8, 79, 85, 86, 88, 97, 114, 134, 135, 137], "frame": [1, 5, 79, 89, 92, 94, 100, 102], "framestack": [1, 79, 87, 89], "letfram": [1, 79, 87], "get_let_valu": [1, 79, 87], "has_let_valu": [1, 79, 87], "gemm": [1, 10, 19, 79, 81, 85, 109, 132, 134, 135, 137, 138, 140, 141], "kernellaunchfram": [1, 79, 89], "get_block_bind": [1, 79, 89], "get_block_ext": [1, 79, 89], "get_thread_bind": [1, 79, 89, 134], "get_thread_ext": [1, 79, 89], "logic": [1, 79, 116, 132, 133, 135, 137, 141], "all_of": [1, 79, 90], "any_of": [1, 79, 90], "memscop": [1, 79], "parallel": [1, 26, 79, 81, 98, 100, 101, 123, 132, 133, 135, 137, 140, 141], "persist": [1, 6, 7, 8, 79], "pipelin": [1, 79, 81, 135, 137], "print": [1, 79, 87, 122, 135, 136], "proxi": [1, 79, 81, 90], "basetensorproxi": [1, 79, 96], "bufferproxi": [1, 79, 96], "fragmentbufferproxi": [1, 79, 96], "localbufferproxi": [1, 79, 96], "sharedbufferproxi": [1, 79, 96], "tensorproxi": [1, 79, 90, 96], "make_tensor": [1, 79, 96, 133], "ptr": [1, 79, 96, 101], "reduc": [1, 38, 79, 101, 104, 128, 132, 133, 134, 137], "cumsum": [1, 79, 97], "reduce_absmax": [1, 79, 97], "reduce_abssum": [1, 79, 97], "reduce_max": [1, 79, 97], "reduce_min": [1, 79, 97], "reduce_sum": [1, 79, 97], "warpgroup": [1, 79, 132], "warpspeci": [1, 79, 102, 123], "warpspecializefram": [1, 79, 102], "w": [1, 32, 34, 79, 82, 101, 102, 133], "annotate_l2_hit_ratio": [1, 79], "annotate_layout": [1, 79, 132, 135], "annotate_pad": [1, 79], "import_sourc": [1, 79], "symbol": [1, 44, 79, 99, 101, 133], "use_swizzl": [1, 79, 132, 135], "fragment": [1, 60, 80, 96, 101, 103, 112, 123, 128, 135, 137, 141], "make_swizzled_layout": [1, 103, 104, 107, 132], "gemm_sp": [1, 79, 84, 103], "decompose_col_major": [1, 103, 105], "make_metadata_layout": [1, 103, 105], "swizzl": [1, 103, 135], "cdiv": [1, 108], "next_power_of_2": [1, 108], "bench": [1, 113], "do_bench": [1, 113, 114, 135], "result_idx": [1, 64, 66, 68, 70, 73, 113], "supply_typ": [1, 2, 4, 5, 113, 131, 134, 140], "assert_allclos": [1, 113], "assert_consist": [1, 113], "determine_profil": [1, 113], "func": [1, 2, 4, 5, 6, 7, 8, 10, 19, 22, 23, 24, 26, 33, 51, 52, 62, 63, 64, 77, 99, 113, 125, 135, 141], "manual_assert_clos": [1, 113], "run_onc": [1, 62, 77, 113], "with_default_adapt": [1, 113], "lop3": [1, 115], "get_lop3_intrin_group": [1, 115, 116], "gen_quant4": [1, 115, 118], "general_compress": [1, 115, 118], "interleave_weight": [1, 115, 118], "analyz": [1, 18, 19, 29, 31, 120, 133, 141], "analysisresult": [1, 120, 121], "plot_layout": [1, 120], "pass_config": [1, 2, 4, 5, 6, 7, 8, 62, 63, 65, 66, 67, 68, 71, 73, 75, 77, 123], "passconfigkei": [1, 123, 124], "simplifi": [1, 19, 123, 124, 134, 135, 136, 140, 141], "apply_simplifi": [1, 123, 125], "simplify_prim_func": [1, 123, 125], "aligndynamicsharedmemoryalloc": [1, 123], "annotatedeviceregion": [1, 123], "clusterplan": [1, 123], "configindexbitwidth": [1, 123], "eliminatestoragesyncformbarri": [1, 123], "flattenbuff": [1, 123], "frontendleg": [1, 123], "ifstmtbind": [1, 123], "injectfenceproxi": [1, 123], "injectptxasynccopi": [1, 123], "injectsoftwarepipelin": [1, 123], "injecttmabarri": [1, 123], "layoutinfer": [1, 123], "legalizesafememoryaccess": [1, 123], "legalizevectorizedloop": [1, 123], "loopvectorizedynam": [1, 123], "lowerdevicestorageaccessinfo": [1, 123], "lowerhopperintrin": [1, 123], "lowerl2persist": [1, 123], "lowersharedbarri": [1, 123], "lowertileop": [1, 123, 141], "makepackedapi": [1, 123], "mergeifstmt": [1, 123], "mergesharedmemoryalloc": [1, 123], "multiversionbuff": [1, 123], "persistthreadblock": [1, 123], "pipelineplan": [1, 123], "rewritewgmmasync": [1, 123], "threadpartialsync": [1, 123], "threadsync": [1, 123], "vectorizeloop": [1, 123], "warpspecializedpipelin": [1, 123], "get_pass_context": [1, 123], "deprec": [1, 126], "array_reduc": [1, 126, 128], "get_buffer_elem": [1, 126, 128], "is_frag": [1, 126, 128], "is_glob": [1, 126, 128], "is_loc": [1, 126, 128], "is_shar": [1, 126, 128], "is_shared_dynam": [1, 126, 128], "spars": [1, 85, 101, 126], "compress_sm90": [1, 126, 129], "target": [1, 2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 18, 19, 23, 31, 33, 34, 35, 36, 37, 38, 39, 44, 45, 46, 47, 51, 52, 54, 62, 63, 65, 66, 67, 68, 71, 73, 74, 75, 77, 101, 114, 118, 121, 123, 126, 133, 134, 135, 137, 140, 141], "check_cuda_avail": [1, 126, 130], "check_hip_avail": [1, 126, 130], "determine_target": [1, 126, 130], "tensor": [1, 2, 3, 4, 5, 22, 25, 26, 27, 31, 35, 45, 53, 62, 66, 68, 77, 79, 81, 92, 96, 101, 112, 113, 114, 124, 126, 129, 132, 133, 135, 141], "tensorsupplytyp": [1, 4, 5, 77, 113, 126, 131, 134, 140], "adapt_torch2tvm": [1, 126, 131], "get_tensor_suppli": [1, 126, 131], "map_torch_typ": [1, 126, 131], "torch_assert_clos": [1, 126, 131], "class": [1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 17, 19, 21, 22, 23, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 53, 58, 60, 64, 66, 68, 69, 70, 71, 73, 75, 77, 78, 87, 89, 96, 102, 104, 106, 111, 112, 113, 121, 124, 131, 137], "level": [1, 101, 133, 134, 135, 137, 138, 141], "0": [1, 4, 5, 17, 19, 22, 23, 42, 47, 49, 58, 60, 75, 79, 81, 85, 88, 89, 94, 95, 96, 97, 101, 102, 111, 112, 113, 114, 118, 131, 133, 134, 135, 136, 140, 141], "base": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 17, 19, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 42, 53, 58, 60, 62, 63, 66, 68, 69, 70, 71, 73, 75, 77, 78, 87, 89, 96, 101, 102, 104, 106, 109, 110, 112, 113, 121, 122, 124, 131, 132, 133, 135, 136, 138, 141], "handler": 1, "log": [1, 5, 62, 79, 98, 101], "direct": [1, 132, 137], "output": [1, 4, 5, 7, 8, 18, 20, 23, 26, 27, 30, 33, 34, 39, 44, 46, 47, 49, 62, 82, 85, 88, 97, 101, 106, 113, 116, 122, 124, 132, 134, 135, 136, 141], "tqdm": 1, "progress": [1, 137, 141], "bar": 1, "avoid": [1, 7, 8, 116], "interfer": 1, "record": 1, "messag": [1, 87, 95, 141], "ar": [1, 10, 19, 26, 27, 34, 36, 39, 44, 60, 87, 90, 99, 101, 111, 113, 122, 131, 132, 133, 134, 135, 136, 137, 141], "written": [1, 133, 135], "ensur": [1, 132, 133, 136], "isn": [1, 47], "t": [1, 5, 7, 8, 19, 47, 60, 79, 80, 81, 85, 88, 99, 101, 102, 122, 132, 133, 134, 135, 136, 137, 140], "corrupt": 1, "set": [1, 3, 5, 6, 7, 8, 10, 33, 34, 36, 37, 39, 44, 62, 80, 81, 86, 97, 101, 104, 106, 111, 116, 132, 133, 135, 136, 140], "": [1, 5, 10, 19, 26, 32, 34, 35, 36, 37, 39, 62, 80, 99, 101, 106, 121, 132, 133, 134, 135, 137, 141], "logger": 1, "paramet": [1, 3, 4, 5, 7, 8, 17, 18, 19, 22, 26, 27, 33, 34, 35, 36, 37, 38, 39, 44, 45, 46, 47, 49, 51, 53, 60, 62, 74, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 106, 111, 112, 113, 114, 116, 118, 122, 123, 127, 128, 130, 132, 133, 134], "str": [1, 4, 5, 6, 7, 8, 10, 11, 13, 15, 17, 18, 19, 22, 23, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 49, 51, 52, 53, 58, 59, 60, 62, 64, 66, 68, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 89, 95, 96, 97, 100, 101, 105, 112, 113, 116, 118, 122, 123, 124, 127, 130, 131, 132, 134], "int": [1, 3, 4, 5, 6, 7, 8, 10, 15, 17, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 47, 49, 53, 58, 60, 62, 64, 66, 68, 70, 73, 74, 77, 79, 80, 81, 82, 85, 88, 89, 92, 93, 94, 95, 97, 101, 102, 104, 105, 106, 108, 110, 111, 112, 113, 114, 116, 118, 121, 123, 128, 129, 132, 133, 134], "can": [1, 4, 5, 19, 44, 51, 62, 76, 77, 85, 88, 89, 92, 95, 101, 116, 132, 133, 134, 135, 136, 137, 140, 141], "string": [1, 4, 44, 47, 49, 62, 74, 101, 124, 130, 141], "name": [1, 9, 10, 15, 16, 17, 18, 23, 26, 27, 31, 49, 79, 99, 101, 116, 122, 127, 134, 141], "e": [1, 3, 5, 10, 19, 38, 47, 49, 62, 80, 85, 101, 111, 113, 128, 132, 133, 134, 135, 136, 137, 138, 140, 141], "g": [1, 3, 5, 19, 38, 44, 47, 49, 62, 80, 111, 113, 128, 132, 133, 134, 135, 136, 137, 138, 140, 141], "info": [1, 76, 101], "actual": [1, 44, 133], "option": [1, 3, 4, 5, 6, 7, 8, 10, 17, 19, 23, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 49, 51, 52, 53, 54, 58, 60, 62, 64, 66, 68, 71, 73, 74, 75, 77, 79, 80, 81, 82, 83, 85, 87, 88, 89, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 110, 111, 112, 113, 114, 116, 118, 122, 131, 132, 135, 136], "debug": [1, 5, 62, 95, 124, 138], "warn": 1, "error": [1, 49, 101, 141], "critic": [1, 134, 137], "pop": [2, 3, 79, 87, 89], "push": [2, 3, 79, 87, 89], "size": [2, 3, 17, 20, 21, 26, 27, 34, 79, 82, 89, 93, 101, 104, 132, 133, 135], "top": [2, 3, 26, 33, 34, 35, 36, 37, 38, 39, 79, 87, 89, 138, 140], "latenc": [2, 4, 62, 77, 132, 134, 135, 137], "config": [2, 4, 5, 62, 77, 123, 134, 136, 140], "ref_lat": [2, 4, 62, 77], "libcod": [2, 4], "load_from_disk": [2, 4], "save_to_disk": [2, 4], "execution_backend": [2, 4, 5, 6, 7, 8, 62, 77, 133], "target_host": [2, 4, 5, 6, 7, 8, 52, 62, 74, 77], "verbos": [2, 4, 5, 6, 7, 8, 46, 47, 62, 66, 68, 73, 77, 122, 124, 131], "compile_program": [2, 4], "out_idx": [2, 4, 5, 6, 7, 8, 62, 77, 78, 133, 134, 135, 140], "warmup": [2, 4, 5, 113, 114, 134, 140], "rep": [2, 4, 5, 113, 114, 134, 140], "timeout": [2, 4, 5, 71], "ref_prog": [2, 4, 5, 134, 140], "supply_prog": [2, 4, 5], "rtol": [2, 4, 5, 113, 131, 135], "atol": [2, 4, 5, 113, 131, 135], "max_mismatched_ratio": [2, 4, 5, 113, 131], "skip_check": [2, 4, 5, 134, 140], "manual_check_prog": [2, 4, 5, 113], "cache_input_tensor": [2, 4, 5], "cache_dir": [2, 5, 6, 7, 8], "compile_arg": [2, 4, 5], "from_kernel": [2, 5, 140], "generate_cache_kei": [2, 5], "profile_arg": [2, 5], "run": [2, 5, 89, 113, 114, 123, 135, 136, 137, 140, 141], "set_compile_arg": [2, 5, 140], "set_kernel_paramet": [2, 5], "set_profile_arg": [2, 5], "list": [3, 4, 5, 6, 7, 8, 10, 15, 18, 19, 22, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 49, 52, 53, 62, 64, 66, 68, 70, 73, 77, 81, 82, 83, 89, 93, 94, 99, 101, 102, 104, 105, 106, 111, 113, 114, 128, 134, 140], "ani": [3, 4, 5, 23, 62, 66, 68, 71, 73, 75, 77, 78, 79, 81, 87, 90, 95, 98, 100, 101, 111, 132, 136], "object": [3, 4, 5, 7, 8, 10, 12, 15, 19, 21, 22, 23, 26, 27, 28, 30, 31, 44, 49, 53, 58, 60, 62, 69, 71, 75, 77, 78, 80, 87, 89, 90, 95, 96, 101, 104, 106, 111, 112, 113, 121, 122, 130, 132, 137, 140], "A": [3, 5, 19, 26, 27, 33, 34, 35, 36, 37, 38, 39, 44, 51, 60, 61, 74, 75, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 95, 96, 99, 101, 102, 104, 106, 110, 111, 112, 113, 116, 121, 127, 129, 132, 133, 134, 135, 138, 140, 141], "simpl": [3, 35, 89, 134, 141], "stack": [3, 87, 89, 101], "implement": [3, 4, 26, 27, 33, 38, 52, 61, 81, 87, 96, 97, 113, 116, 133, 137, 141], "item": [3, 87, 89, 101], "thread": [3, 5, 58, 60, 79, 80, 81, 89, 95, 97, 100, 101, 103, 104, 111, 132, 133, 134, 135, 137, 141], "local": [3, 28, 60, 80, 96, 101, 116, 128, 135, 137], "context": [3, 5, 26, 27, 62, 79, 123, 135, 137], "us": [3, 4, 5, 6, 7, 8, 10, 18, 19, 22, 26, 27, 34, 35, 36, 37, 39, 44, 47, 49, 51, 53, 60, 62, 66, 68, 76, 77, 81, 87, 92, 94, 96, 99, 101, 104, 112, 113, 114, 116, 122, 127, 132, 133, 134, 135, 137, 141], "manag": [3, 22, 66, 68, 87, 89, 102, 132, 135, 137], "input": [3, 4, 5, 20, 23, 34, 35, 36, 37, 39, 44, 49, 51, 62, 77, 81, 82, 83, 85, 88, 95, 97, 101, 106, 112, 113, 116, 132, 135, 137], "auto": [3, 4, 5, 6, 7, 8, 19, 52, 62, 74, 77, 113, 126, 130, 131, 133, 134, 135, 138, 141], "tune": [3, 4, 5, 62, 77, 134, 135, 137, 138, 141], "return": [3, 5, 7, 8, 17, 18, 19, 26, 27, 31, 33, 34, 35, 36, 37, 38, 39, 44, 45, 46, 47, 49, 51, 53, 55, 60, 62, 66, 68, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 104, 106, 111, 112, 113, 114, 116, 118, 121, 122, 123, 125, 128, 130, 133, 134, 135, 140, 141], "from": [3, 4, 5, 7, 8, 18, 19, 26, 31, 44, 45, 47, 53, 66, 68, 73, 76, 77, 82, 87, 89, 96, 99, 101, 112, 121, 128, 132, 133, 134, 135, 137, 138, 141], "The": [3, 4, 5, 6, 7, 8, 10, 17, 18, 19, 22, 26, 27, 33, 34, 35, 36, 37, 38, 39, 44, 46, 47, 49, 51, 52, 53, 60, 62, 64, 66, 68, 70, 74, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 106, 111, 112, 113, 114, 116, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 140, 141], "rais": [3, 17, 26, 27, 33, 34, 36, 39, 49, 53, 60, 81, 82, 85, 86, 87, 88, 95, 111, 112, 128, 130, 132], "indexerror": [3, 87], "If": [3, 5, 17, 33, 34, 36, 39, 47, 53, 60, 62, 81, 82, 85, 86, 87, 88, 95, 97, 101, 104, 111, 112, 122, 128, 130, 131, 134, 136], "i": [3, 5, 10, 19, 22, 23, 26, 27, 28, 33, 35, 47, 49, 52, 53, 57, 58, 59, 60, 61, 62, 76, 79, 81, 87, 89, 90, 94, 95, 97, 99, 101, 102, 104, 111, 116, 122, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "empti": [3, 53, 87, 89, 124], "an": [3, 5, 33, 35, 42, 44, 53, 62, 77, 83, 86, 87, 89, 95, 99, 101, 104, 128, 131, 132, 133, 134, 135, 137, 138, 141], "onto": [3, 87, 89], "number": [3, 4, 5, 17, 26, 27, 33, 34, 35, 36, 37, 38, 39, 47, 49, 80, 81, 85, 88, 89, 94, 97, 101, 104, 111, 113, 114, 116, 128, 131, 132, 133, 134, 137], "type": [3, 4, 5, 7, 8, 17, 18, 19, 26, 27, 33, 34, 35, 36, 37, 38, 39, 44, 45, 46, 47, 49, 53, 60, 62, 68, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 104, 106, 111, 112, 113, 114, 116, 118, 121, 122, 123, 124, 125, 128, 130, 132], "without": [3, 5, 51, 62, 87, 89, 96, 99, 135, 137, 138], "remov": [3, 87, 89, 132], "get": [3, 5, 6, 7, 8, 17, 18, 19, 26, 44, 47, 68, 76, 77, 87, 101, 104, 106, 116, 123, 128, 134, 136, 141], "current": [3, 5, 33, 44, 55, 68, 79, 81, 87, 89, 101, 106, 123, 132, 136], "arg": [3, 5, 6, 7, 8, 19, 31, 75, 81, 82, 99, 101, 131], "thi": [3, 5, 22, 26, 27, 33, 34, 36, 37, 39, 44, 49, 60, 62, 66, 68, 76, 77, 80, 85, 87, 88, 92, 95, 96, 97, 101, 104, 114, 116, 123, 132, 133, 134, 135, 136, 137, 141], "function": [3, 4, 5, 7, 8, 10, 19, 26, 27, 33, 35, 37, 44, 45, 47, 49, 51, 60, 62, 66, 68, 73, 77, 78, 80, 85, 87, 88, 95, 96, 99, 101, 112, 113, 114, 116, 128, 131, 133, 135, 141], "creat": [3, 5, 44, 53, 60, 77, 81, 82, 92, 96, 97, 101, 112, 135, 136], "dure": [3, 5, 62, 97, 101, 132, 133, 134, 137, 141], "process": [3, 4, 5, 34, 51, 132, 133, 134, 136, 137], "It": [3, 26, 27, 33, 38, 62, 80, 87, 95, 96, 101, 116, 121, 132, 134, 135, 140], "support": [3, 45, 47, 49, 53, 81, 85, 88, 104, 132, 133, 135, 137], "both": [3, 7, 8, 53, 95, 112, 132, 133, 135], "b": [3, 19, 35, 39, 60, 61, 79, 83, 85, 88, 99, 101, 108, 110, 111, 112, 132, 133, 134, 135, 137, 140], "c": [3, 19, 32, 34, 39, 44, 66, 68, 75, 79, 83, 85, 88, 89, 101, 110, 111, 112, 133, 134, 135, 136, 137, 140, 141], "either": [3, 4, 5, 7, 8, 47, 49, 62, 81, 86, 90, 95, 116, 132], "singl": [3, 80, 81, 85, 88, 112, 128, 132, 133, 134, 135], "tupl": [3, 5, 19, 22, 23, 26, 27, 31, 58, 60, 66, 68, 74, 80, 89, 96, 101, 102, 111, 129], "multipl": [3, 36, 37, 39, 81, 85, 88, 97, 101, 113, 114, 128, 132, 137, 138], "argument": [3, 4, 5, 7, 8, 62, 77, 81, 82, 99, 101, 104, 135], "float": [4, 5, 26, 47, 71, 77, 101, 113, 114, 121, 131, 133, 134, 135, 140, 141], "none": [4, 5, 6, 7, 8, 19, 21, 23, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 49, 51, 52, 53, 54, 58, 59, 60, 62, 64, 66, 68, 71, 73, 74, 75, 77, 79, 81, 82, 83, 87, 89, 92, 94, 96, 97, 99, 100, 101, 104, 110, 111, 112, 113, 114, 118, 122, 124, 134, 136, 140], "dict": [4, 5, 6, 7, 8, 19, 22, 23, 26, 27, 30, 31, 34, 35, 36, 37, 39, 44, 62, 66, 68, 71, 73, 74, 75, 77, 79, 100, 116], "callabl": [4, 5, 44, 51, 52, 62, 64, 66, 68, 77, 99, 113, 114, 125], "result": [4, 5, 60, 77, 85, 88, 89, 97, 101, 102, 112, 114, 121, 123, 125, 133, 134, 135, 140, 141], "best": [4, 137, 140], "achiev": [4, 121, 132, 134, 135], "execut": [4, 5, 44, 53, 62, 81, 85, 88, 95, 101, 113, 121, 132, 133, 137, 141], "configur": [4, 5, 22, 26, 27, 33, 34, 35, 36, 37, 38, 39, 62, 77, 81, 96, 124, 132, 133, 134, 135, 136], "produc": [4, 81, 94, 101, 132, 133, 134, 141], "refer": [4, 5, 77, 79, 113, 116, 133, 135, 137, 141], "gener": [4, 5, 26, 27, 37, 51, 61, 85, 88, 89, 95, 101, 112, 113, 124, 132, 133, 136, 137, 138], "librari": [4, 7, 8, 44, 66, 68, 76, 77, 132, 137, 138, 141], "code": [4, 7, 8, 46, 47, 51, 53, 66, 68, 75, 77, 89, 101, 124, 132, 133, 134, 135, 136, 137, 140, 141], "optim": [4, 5, 26, 33, 34, 35, 36, 37, 39, 124, 133, 134, 135, 137, 138, 141], "classmethod": [4, 5, 22, 26, 53, 66, 68, 73, 77, 87, 89, 111, 121], "path": [4, 5, 6, 7, 8, 31, 44, 47, 49, 66, 68, 77, 130, 136], "union": [4, 5, 6, 7, 8, 10, 11, 13, 15, 17, 19, 38, 40, 44, 51, 52, 53, 59, 60, 62, 66, 68, 73, 74, 77, 81, 82, 83, 85, 86, 88, 89, 90, 99, 101, 114, 125, 130], "liter": [4, 5, 6, 7, 8, 10, 60, 61, 62, 74, 77, 101, 114, 116, 130], "ctype": [4, 5, 6, 7, 8, 62, 63, 68, 77], "cython": [4, 5, 6, 7, 8, 62, 63, 77, 133], "cuda": [4, 5, 9, 11, 17, 26, 47, 51, 62, 66, 68, 79, 81, 101, 118, 123, 124, 130, 132, 134, 135, 136, 137, 140, 141], "hip": [4, 5, 46, 51, 75, 130, 135, 137], "bool": [4, 5, 6, 7, 8, 10, 13, 14, 15, 19, 22, 26, 27, 31, 33, 34, 36, 37, 39, 40, 49, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 66, 68, 73, 74, 75, 77, 82, 85, 87, 88, 89, 96, 97, 99, 101, 104, 110, 111, 112, 114, 116, 122, 123, 125, 128, 129, 130, 131], "fals": [4, 5, 6, 7, 8, 10, 19, 23, 26, 27, 33, 34, 36, 37, 39, 40, 46, 47, 49, 51, 52, 53, 58, 59, 60, 61, 62, 66, 68, 73, 77, 82, 85, 87, 88, 89, 96, 97, 99, 101, 104, 110, 111, 112, 116, 122, 123, 124, 125, 128, 130, 131, 134, 140], "detail": [4, 79, 81, 132, 133, 135, 137], "descript": [4, 137], "found": [4, 44, 68, 87, 134], "attribut": [4, 34, 35, 36, 37, 39, 52, 79, 99, 121], "indic": [4, 5, 7, 8, 10, 52, 60, 66, 68, 89, 101, 102, 104, 106, 113, 116, 122, 124, 127, 132, 135, 141], "backend": [4, 5, 49, 62, 63, 75, 101, 105, 113, 135, 136, 137, 140], "default": [4, 5, 17, 20, 24, 33, 35, 38, 44, 47, 51, 52, 62, 77, 80, 82, 83, 85, 88, 96, 97, 101, 116, 118, 122, 124, 131, 135], "tvm": [4, 5, 19, 34, 35, 36, 37, 38, 39, 44, 45, 47, 49, 53, 62, 66, 68, 74, 77, 80, 81, 82, 86, 90, 96, 99, 101, 111, 112, 113, 121, 123, 125, 128, 135, 138, 141], "host": [4, 5, 7, 8, 52, 53, 62, 74, 77, 136], "cross": [4, 5, 44, 62], "whether": [4, 5, 10, 19, 33, 34, 39, 49, 51, 52, 62, 66, 68, 81, 85, 88, 89, 96, 97, 99, 101, 114, 116, 130], "enabl": [4, 5, 52, 55, 62, 79, 94, 124, 132, 133, 135, 136, 137], "addit": [4, 5, 34, 37, 39, 44, 46, 47, 62, 77, 83, 101, 104, 122, 124, 133, 137, 140], "keyword": [4, 5, 62, 77], "pass": [4, 5, 7, 8, 44, 47, 62, 77, 114, 123, 124, 125, 135, 137, 141], "passcontext": [4, 5, 54, 62], "avail": [4, 5, 62, 80, 111, 130, 135, 136], "disable_vector": [4, 62, 124], "tl": [4, 52, 62, 75, 79, 81, 82, 83, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 102, 124, 134, 140], "disable_tma_low": [4, 62, 124], "disable_warp_speci": [4, 62, 124], "config_index_bitwidth": [4, 62, 124], "disable_dynamic_tail_split": [4, 62, 124], "dynamic_vectorize_size_bit": [4, 62], "128": [4, 5, 10, 62, 79, 81, 99, 102, 132, 133, 134, 135, 140, 141], "disable_safe_memory_leg": [4, 62, 124], "primfunc": [4, 5, 6, 7, 8, 10, 19, 23, 26, 33, 40, 52, 62, 66, 68, 73, 74, 77, 99, 101, 121, 125, 128], "25": [4, 5, 113, 114], "100": [4, 5, 113, 114], "30": [4, 5], "01": [4, 5, 113, 131, 136], "true": [4, 5, 19, 23, 26, 27, 33, 37, 39, 49, 51, 53, 58, 60, 79, 87, 90, 97, 99, 101, 104, 111, 114, 122, 123, 124, 128, 130, 131, 132, 134, 135, 140], "iter": [4, 5, 9, 10, 19, 26, 81, 92, 94, 100, 104, 106, 113, 114, 132, 134], "repetit": [4, 5, 113, 114], "time": [4, 5, 62, 97, 99, 104, 113, 114, 121, 134, 135, 136], "maximum": [4, 5, 17, 26, 81, 83, 94, 100, 101, 113, 131, 137], "per": [4, 5, 121, 132, 133, 134], "suppli": [4, 5, 77, 113], "mechan": [4, 5, 132], "correct": [4, 112, 135], "valid": [4, 5, 26, 27, 101, 113, 130, 135, 141], "1": [4, 19, 22, 26, 27, 35, 36, 42, 47, 58, 60, 61, 66, 68, 81, 85, 88, 89, 97, 101, 102, 104, 110, 111, 112, 113, 118, 131, 132, 133, 134, 135, 137, 141], "1e": [4, 131, 135], "2": [4, 5, 19, 26, 27, 42, 58, 60, 61, 66, 68, 89, 101, 111, 131, 132, 133, 134, 135, 137, 141], "7": [4, 5, 47, 49, 131, 135, 136], "provid": [5, 33, 45, 47, 49, 62, 80, 87, 89, 95, 96, 101, 104, 106, 111, 112, 132, 133, 135, 137, 140, 141], "includ": [5, 7, 8, 62, 95, 132, 133, 135, 136, 137, 141], "perform": [5, 44, 81, 82, 83, 85, 86, 88, 90, 97, 101, 112, 114, 116, 121, 133, 134, 137, 138, 141], "through": [5, 132, 135, 140, 141], "search": [5, 49, 134, 140], "fn": [5, 114, 121], "handl": [5, 66, 68, 74, 81, 82, 83, 85, 88, 89, 95, 96, 97, 101, 102, 114, 132, 133, 134, 135], "differ": [5, 80, 96, 101, 113, 132, 133, 137, 140], "find": [5, 19, 31, 47, 49, 136], "try": [5, 18, 49, 68, 101, 123], "posixpath": [5, 6, 7, 8], "home": [5, 7, 8], "leiwang": [5, 7, 8], "instanc": [5, 33, 53, 62, 77, 121, 132, 133, 141], "new": [5, 83, 96, 101, 104, 106, 127, 133, 136], "kei": [5, 124, 132], "platform": [5, 7, 8, 132], "self": [5, 38, 121], "method": [5, 26, 33, 34, 36, 37, 38, 39, 87, 89, 99, 111, 127, 132, 133], "chain": 5, "ignor": [5, 101], "rel": [5, 26, 101, 113, 131], "toler": [5, 113, 131], "absolut": [5, 97, 101, 113, 131], "allow": [5, 99, 101, 113, 131, 132, 134, 135, 137, 138, 141], "mismatch": [5, 113, 131], "ratio": [5, 79, 113, 131, 132], "skip": [5, 89, 102], "manual": [5, 130, 132, 135, 137, 140], "check": [5, 10, 26, 27, 33, 52, 53, 87, 90, 101, 111, 113, 128, 130, 133, 141], "except": [5, 101, 132, 133], "_p": [5, 62], "_rprog": [5, 62], "just": [5, 62, 132, 133, 135], "In": [5, 19, 62, 132, 133, 134, 135, 137, 141], "decor": [5, 51, 62, 78, 99, 127], "appli": [5, 34, 36, 37, 39, 62, 116, 124, 125, 133], "tip": 5, "you": [5, 101, 132, 133, 134, 135, 136, 140, 141], "want": [5, 133, 135, 136], "overrid": [5, 51, 87, 114], "tunabl": [5, 135], "signatur": 5, "python": [5, 58, 60, 66, 68, 74, 101, 132, 135, 136, 137, 138, 141], "enable_autotun": 5, "flashattn": 5, "batch": [5, 19, 34, 82, 132], "head": [5, 101, 132], "seq_len": 5, "dim": [5, 89, 97, 132], "is_caus": [5, 32, 36], "els": [5, 134], "group": [5, 81, 85, 88, 93, 94, 95, 101, 102, 116, 132, 133], "block_m": [5, 79, 132, 133, 135, 137, 140, 141], "block_n": [5, 61, 79, 132, 133, 134, 135, 137, 140, 141], "num_stag": [5, 81, 94, 135, 140], "256": [5, 102, 133, 134, 140], "func_or_out_idx": [5, 62], "directli": [5, 62, 77, 81, 95, 97, 130, 133, 136, 137, 140, 141], "implicitli": [5, 62], "space": [5, 26, 34, 101, 104, 135, 137], "explor": [5, 133, 135, 140], "befor": [5, 39, 85, 88, 89, 97, 133, 136, 141], "measur": [5, 44, 77, 114, 135], "llvm": [5, 49, 62, 101, 136, 137, 141], "debug_root_path": [5, 62], "directori": [5, 6, 7, 8, 44, 62, 68, 122, 124, 136], "save": [5, 62, 122], "sourc": [5, 7, 8, 31, 44, 45, 62, 66, 68, 74, 75, 77, 78, 79, 82, 101, 132, 137, 138], "wrapper": [5, 23, 62, 63, 77, 89], "around": [5, 62, 89, 132, 134], "cpu": [5, 9, 11, 89, 135, 138, 140, 141], "core": [5, 26, 96, 101, 112, 132, 137], "kwarg": [5, 75, 77], "signum": 5, "databas": [6, 7, 8, 77], "init": [6, 75, 101], "file": [6, 7, 8, 44, 46, 47, 49, 76, 77, 122, 136, 137, 141], "reus": [6, 7, 8], "entir": [6, 7, 8, 82, 135, 137, 141], "rubric": 6, "exampl": [6, 10, 44, 79, 81, 99, 101, 102, 111, 118, 132, 133, 134, 137], "user": [6, 130, 132, 134, 135, 136, 137, 139, 140, 141], "usernam": 6, "redund": [7, 8, 26], "cu": [7, 8], "wrapped_kernel": [7, 8], "wrap": [7, 8, 45, 62, 63, 66, 68, 75, 77, 80, 103, 104, 105, 106, 107, 123], "kernel_lib": [7, 8], "so": [7, 8, 132, 133, 136], "pkl": [7, 8], "prepar": [7, 8, 135], "specifi": [7, 8, 33, 38, 47, 49, 81, 82, 83, 86, 97, 99, 101, 111, 113, 130, 131, 132, 133, 134, 135, 136], "which": [7, 8, 26, 27, 34, 58, 60, 81, 97, 101, 104, 112, 113, 132, 133, 134, 135, 136, 137, 140, 141], "freshli": [7, 8], "memori": [7, 8, 17, 26, 27, 80, 81, 82, 96, 101, 112, 121, 123, 124, 128, 133, 134, 135, 141], "disk": [7, 8], "driver": [9, 11], "arch_bas": [9, 11], "tiledevic": [9, 11, 12, 13, 14, 15, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40], "cdna": [9, 11, 33], "is_cdna_arch": [9, 11, 13, 32, 33], "is_cpu_arch": [9, 11, 14], "tensorinstruct": [9, 11, 15], "check_sm_vers": [9, 11, 15], "has_mma_support": [9, 11, 15], "is_ada_arch": [9, 11, 15], "is_ampere_arch": [9, 11, 15, 32, 33], "is_cuda_arch": [9, 11, 15], "is_hopper_arch": [9, 11, 15], "is_tensorcore_supported_precis": [9, 11, 15], "is_volta_arch": [9, 11, 15, 32, 33], "auto_infer_current_arch": [9, 11], "get_arch": [9, 11], "polici": [9, 20, 79, 85, 88, 110, 111, 112, 132], "shape_infer": [9, 20], "bestfit": [9, 20], "block": [9, 10, 18, 19, 20, 21, 23, 26, 31, 79, 81, 89, 111, 112, 133, 134, 135, 137, 140], "hint": [9, 20, 26, 33, 34, 35, 36, 37, 38, 39, 40, 133, 135, 140], "intrininfo": [9, 20, 22], "stride": [9, 20, 22, 26, 27, 61, 82, 101], "tensorcoreextraconfig": [9, 20, 22], "tiledict": [9, 20, 22, 26, 27], "node": [9, 20, 22, 24, 26, 27, 31, 33, 36, 101, 106], "blockanalyz": [9, 20, 23], "edg": [9, 20, 23], "outputnod": [9, 20, 23, 26, 33, 36, 40], "placeholdernod": [9, 20, 23], "primfuncnod": [9, 20, 22, 23, 26, 27], "find_topo_sort": [9, 20, 23], "find_topo_sort_prior": [9, 20, 23], "pre_order_travers": [9, 20, 23], "topo_ord": [9, 20, 23], "raster": [9, 20, 26, 27, 135], "noraster": [9, 20, 28, 140], "rasterization2dcolumn": [9, 20, 28], "rasterization2drow": [9, 20, 28], "basetempl": [9, 32, 33, 34, 35, 36, 37, 38, 39], "conv": [9, 32], "convtempl": [9, 32, 34], "elementwis": [9, 10, 32, 138, 140], "elementwisetempl": [9, 32, 35], "flashattent": [9, 32, 132, 138], "flashattentiontempl": [9, 32, 36], "gemv": [9, 10, 32, 138], "gemvtempl": [9, 32, 37], "general_reduc": [9, 32], "generalreductiontempl": [9, 32, 38], "matmul": [9, 19, 32, 135, 137, 140, 141], "matmultempl": [9, 32, 39, 140], "block_rv": [9, 10], "dom": [9, 10, 26, 27], "dom_kind": [9, 10], "is_elementwis": [9, 10], "is_gemm": [9, 10], "is_gemv": [9, 10], "is_inject": [9, 10], "is_reduct": [9, 10], "kind": [9, 10, 19], "loop_rv": [9, 10], "var": [9, 10, 53, 66, 68, 80, 81, 85, 86, 87, 88, 89, 96, 101], "kiter_i": [9, 19], "kiter_j": [9, 19], "kiter_k": [9, 19], "kiter_": [9, 19], "kiter_t": [9, 19], "extent": [9, 19, 26, 27, 82, 89, 92, 100, 101, 104], "infra": 9, "loop": [10, 92, 93, 94, 100, 112, 123, 133, 135, 137, 140], "blockrv": [10, 18, 19, 23, 31], "reduction_block": 10, "inform": [10, 22, 23, 53, 76, 121, 122, 123, 124], "about": [10, 101, 122, 137], "primexpr": [10, 19, 31, 58, 60, 74, 81, 82, 83, 86, 87, 89, 92, 93, 94, 95, 96, 97, 100, 101, 104, 106, 112], "domain": [10, 26, 27, 93, 135, 138], "ssss": 10, "sssr": 10, "sch": [10, 18, 19, 23], "schedul": [10, 18, 19, 21, 22, 26, 27, 132, 135, 140], "trivial": [10, 19], "map": [10, 19, 26, 27, 34, 44, 60, 87, 104, 106, 116, 122, 132, 133, 135, 137, 140], "between": [10, 34, 82, 83, 94, 101, 114, 123, 132, 133, 137], "read": [10, 19, 82, 101, 123, 137], "write": [10, 19, 82, 101, 123, 133, 134, 135, 137, 138, 141], "workload": [10, 111], "inject": [10, 89], "all": [10, 19, 26, 27, 53, 74, 79, 81, 89, 90, 96, 98, 99, 101, 111, 123, 132, 133, 134, 136, 139], "its": [10, 26, 95, 99, 132, 133], "reduct": [10, 19, 26, 27, 97, 101, 112, 140], "r": [10, 82, 101], "o": 10, "looprv": 10, "properti": [10, 17, 22, 23, 28, 33, 34, 35, 36, 37, 38, 39, 66, 68, 73, 75, 77, 89, 104, 106, 111, 112, 113], "rang": [10, 81, 83, 104, 132, 135], "collect": [10, 132, 139], "variabl": [10, 26, 27, 44, 53, 80, 81, 86, 87, 95, 96, 100, 101, 104, 106, 136, 141], "access": [10, 79, 81, 82, 101, 123, 124, 132, 133, 136, 137], "buffer": [10, 19, 23, 53, 60, 79, 80, 82, 83, 85, 86, 88, 90, 94, 95, 96, 97, 101, 104, 105, 107, 110, 111, 112, 122, 123, 128, 132, 134, 135, 137, 140, 141], "expr": [10, 19, 31, 74, 96, 101], "detect": [10, 19, 60, 113, 130], "domin": [10, 93], "block_stmt": [10, 19], "target_bit": 10, "func_nam": [10, 101], "main": [10, 79, 96, 133, 134, 135, 140, 141], "epilogu": 10, "broadcast": 10, "pattern": [10, 19, 101, 132, 135, 137, 141], "normal": [10, 126, 131], "form": [10, 34, 36, 37, 39, 58, 60, 132], "cuda_driv": [11, 16], "cudadeviceprop": [11, 16, 17], "get_cuda_device_properti": [11, 16, 17], "get_device_attribut": [11, 16, 17], "get_device_nam": [11, 16, 17], "get_max_dynamic_shared_size_byt": [11, 16, 17], "get_num_sm": [11, 16, 17], "get_persisting_l2_cache_max_s": [11, 16, 17], "get_registers_per_block": [11, 16, 17], "get_shared_memory_per_block": [11, 16, 17], "get_avaliable_tensorintrin_shap": [11, 12, 15], "repres": [12, 19, 26, 53, 58, 60, 89, 96, 102, 104, 106, 111, 112, 132, 137], "architectur": [12, 26, 33, 34, 35, 36, 37, 38, 39, 46, 47, 135, 137], "comput": [12, 19, 22, 26, 27, 31, 34, 35, 36, 37, 38, 39, 47, 49, 81, 85, 88, 96, 97, 101, 104, 106, 111, 114, 117, 132, 133, 134, 135, 137, 141], "devic": [12, 17, 52, 53, 68, 74, 101, 121, 123, 135, 137, 139], "variou": [12, 22, 26, 76, 85, 88, 133, 135, 137], "hardwar": [12, 33, 34, 35, 36, 37, 38, 39, 132, 135, 141], "specif": [12, 33, 96, 101, 113, 132, 133, 135, 136, 137, 138, 141], "shape": [15, 22, 23, 26, 27, 30, 31, 32, 35, 38, 50, 53, 61, 66, 68, 80, 83, 96, 97, 101, 104, 106, 111, 123, 124, 132, 137], "in_dtyp": [15, 22, 32, 34, 36, 37, 39, 110, 112, 116, 133, 140], "accum_dtyp": [15, 32, 34, 36, 37, 39, 58, 60, 110, 112, 134, 135, 140, 141], "eccen": [16, 17], "asyncenginecount": [16, 17], "canmaphostmemori": [16, 17], "clockrat": [16, 17], "computemod": [16, 17], "concurrentkernel": [16, 17], "deviceoverlap": [16, 17], "globall1cachesupport": [16, 17], "integr": [16, 17], "ismultigpuboard": [16, 17], "kernelexectimeouten": [16, 17], "l2caches": [16, 17], "locall1cachesupport": [16, 17], "luid": [16, 17], "luiddevicenodemask": [16, 17], "major": [16, 17, 47, 49, 101, 132], "managedmemori": [16, 17], "maxgrids": [16, 17], "maxsurface1d": [16, 17], "maxsurface1dlay": [16, 17], "maxsurface2d": [16, 17], "maxsurface2dlay": [16, 17], "maxsurface3d": [16, 17], "maxsurfacecubemap": [16, 17], "maxsurfacecubemaplay": [16, 17], "maxtexture1d": [16, 17], "maxtexture1dlay": [16, 17], "maxtexture1dlinear": [16, 17], "maxtexture1dmipmap": [16, 17], "maxtexture2d": [16, 17], "maxtexture2dgath": [16, 17], "maxtexture2dlay": [16, 17], "maxtexture2dlinear": [16, 17], "maxtexture2dmipmap": [16, 17], "maxtexture3d": [16, 17], "maxtexture3dalt": [16, 17], "maxtexturecubemap": [16, 17], "maxtexturecubemaplay": [16, 17], "maxthreadsdim": [16, 17], "maxthreadsperblock": [16, 17], "maxthreadspermultiprocessor": [16, 17], "mempitch": [16, 17], "memorybuswidth": [16, 17], "memoryclockr": [16, 17], "minor": [16, 17, 47, 49], "multigpuboardgroupid": [16, 17], "multiprocessorcount": [16, 17], "pcibusid": [16, 17], "pcideviceid": [16, 17], "pcidomainid": [16, 17], "persistingl2cachemaxs": [16, 17], "regsperblock": [16, 17], "regspermultiprocessor": [16, 17], "reserv": [16, 17], "reserved1": [16, 17], "reserved2": [16, 17], "sharedmemperblock": [16, 17], "sharedmempermultiprocessor": [16, 17], "streamprioritiessupport": [16, 17], "surfacealign": [16, 17], "tccdriver": [16, 17], "texturealign": [16, 17], "texturepitchalign": [16, 17], "totalconstmem": [16, 17], "totalglobalmem": [16, 17], "unifiedaddress": [16, 17], "uuid": [16, 17], "warpsiz": [16, 17], "structur": [17, 32, 33, 38, 87, 101], "member": 17, "device_id": [17, 101], "attr": [17, 52, 134], "format": [17, 44, 46, 47, 101], "byte": [17, 101, 121, 123], "dynam": [17, 66, 68, 96, 123, 124, 128], "share": [17, 26, 27, 44, 49, 77, 80, 96, 101, 112, 123, 124, 128, 135, 137], "kilobyt": 17, "megabyt": 17, "stream": [17, 132], "multiprocessor": [17, 132], "sm": [17, 26, 132], "id": [17, 23, 81, 95, 101], "runtimeerror": 17, "unabl": 17, "strategi": [18, 134, 140, 141], "target_block": 18, "output_block": 18, "inlin": [18, 135], "mani": [18, 134, 135], "possibl": [18, 26, 27, 49], "remain": [18, 132, 133], "cannot": [18, 82, 101, 132], "block_info": 18, "contigu": [18, 132], "spatial": [18, 19, 34, 38, 82], "rule": [19, 101, 132], "gpu": [19, 46, 47, 49, 89, 96, 132, 136, 137, 138, 140, 141], "oper": [19, 35, 45, 53, 66, 68, 74, 80, 81, 82, 83, 85, 86, 87, 88, 90, 95, 96, 97, 101, 104, 116, 121, 124, 128, 132, 134, 135, 136, 137, 140, 141], "valu": [19, 23, 34, 36, 37, 39, 42, 53, 79, 81, 83, 85, 86, 87, 89, 94, 95, 96, 97, 99, 100, 101, 102, 111, 124, 131, 132, 133, 141], "enum": [19, 124, 131], "like": [19, 79, 87, 89, 98, 99, 101, 132, 133, 134, 135, 137, 141], "we": [19, 49, 52, 81, 89, 101, 102, 132, 133, 134, 135, 136, 137, 141], "j": [19, 57, 59, 61, 79, 133, 135, 136], "k": [19, 23, 32, 34, 36, 37, 39, 85, 88, 101, 118, 132, 135, 140, 141], "where": [19, 35, 83, 85, 88, 101, 104, 122, 132, 133, 135, 141], "fundament": 19, "ax": [19, 20, 22, 26, 27, 38], "other": [19, 21, 26, 27, 45, 132, 133, 134, 137, 140, 141], "3": [19, 42, 61, 66, 68, 89, 131, 132, 134, 135], "4": [19, 28, 61, 83, 111, 116, 118, 131, 132, 134, 135, 136, 140, 141], "ir": [19, 66, 68, 73, 74, 79, 96, 98, 112, 121, 137, 141], "skip_block": 19, "prim_expr": 19, "trait": 19, "doe": [19, 26, 27, 101, 133, 135], "match": [19, 49, 85, 88, 99, 135], "main_block": 19, "travers": [19, 121, 133, 140], "index": [19, 61, 62, 93, 101, 102, 103, 104, 106, 123, 137, 141], "bufferregion": [19, 82, 86, 90], "out": [19, 44, 60, 68, 97, 101, 134, 135], "data": [19, 34, 35, 37, 39, 78, 80, 81, 82, 87, 96, 101, 104, 112, 116, 118, 121, 132, 133, 134, 135, 137, 139, 141], "given": [19, 22, 26, 27, 35, 62, 89, 96, 104, 106, 111, 113, 121, 140], "indexmap": [19, 60], "n": [19, 25, 26, 32, 34, 36, 37, 39, 58, 60, 75, 79, 101, 111, 118, 133, 134, 135, 140, 141], "infer": [19, 26, 27, 29, 30, 31, 111, 112, 123, 134, 135, 137], "last": [19, 101, 134], "axi": [19, 22, 26, 27, 101, 134], "index_map": 19, "dtype": [19, 23, 32, 35, 38, 50, 53, 59, 61, 66, 68, 79, 80, 83, 96, 97, 101, 112, 118, 131, 132, 133, 134, 135, 140, 141], "float16": [19, 34, 35, 36, 37, 38, 39, 58, 60, 61, 105, 116, 118, 132, 134, 135, 140, 141], "index_dtyp": 19, "int32": [19, 58, 60, 79, 80, 116], "tran": [19, 101], "matrix_nam": 19, "skip_norm": 19, "allow_gemv": [19, 40], "necessari": [19, 53, 112, 134, 136, 137, 138], "conv2d": 19, "im2col": [19, 82], "start_block": 19, "start_buff": 19, "end_block": 19, "kind_ord": 19, "coalesced_factor": [20, 24, 25], "coalesced_tensor_shap": [20, 24, 25], "factor": [20, 24, 25, 26, 27, 96, 104, 111], "get_all_factor": [20, 24, 25], "defaultpolici": [20, 24, 26, 27], "tensorcor": [20, 22, 24, 47], "tensorcorepolici": [20, 24, 27], "inputshapeinfer": [20, 29, 30, 31], "statement": [20, 29, 30, 31, 95, 100, 101, 141], "dependencyanalysi": [20, 29, 31], "tensordepnod": [20, 29, 31], "get_analyzer_by_tir": [20, 29, 31], "region_exist_in_list": [20, 29, 31], "walk_indic": [20, 29, 31], "free": [20, 21, 101], "malloc": [20, 21], "merg": [20, 21, 124, 132], "complete_config": [20, 22], "from_dict": [20, 22], "raxis_ord": [20, 22], "step": [20, 22, 26, 27, 34, 82, 97, 112, 134, 136], "tensorcore_leg": [20, 22], "to_dict": [20, 22], "inter_transform_a": [20, 22], "inter_transform_b": [20, 22], "is_input_8bit": [20, 22], "smooth_a": [20, 22], "smooth_b": [20, 22], "compute_elements_from_shap": [20, 22], "compute_strides_from_shap": [20, 22], "is_valid": [20, 22], "get_rstep": [20, 22], "get_til": [20, 22], "get_block_info": [20, 23], "get_block_nam": [20, 23], "get_buff": [20, 23], "get_consumer_block": [20, 23], "get_input_buff": [20, 23], "get_output_buff": [20, 23], "get_producer_block": [20, 23], "get_reduce_axi": [20, 23], "get_spatial_axi": [20, 23], "dst_id": [20, 23], "dst_node": [20, 23], "src_id": [20, 23], "src_node": [20, 23], "add_tag": [20, 23], "get_dtyp": [20, 23], "get_ir": [20, 23], "get_shap": [20, 23], "get_tag": [20, 23], "is_output": [20, 23], "is_placehold": [20, 23], "num_output": [20, 23], "set_dtyp": [20, 23], "set_input": [20, 23], "set_output": [20, 23], "set_shap": [20, 23], "set_tag": [20, 23], "update_tag": [20, 23], "extent_wrapp": [20, 23], "footprint": [20, 23], "get_buffer_dtyp": [20, 23], "get_opt_shap": [20, 23], "get_reduce_inputs_dtyp": [20, 23], "get_space_dim": [20, 23], "infer_tensorcore_axi": [20, 23], "propag": [20, 23], "propagate_input": [20, 23], "propagate_inputs_on_reduct": [20, 23], "propagate_output": [20, 23], "propagate_reduction_input": [20, 23], "get_cod": [20, 28], "panel_width": [20, 28], "panel_width_": [20, 28], "get_device_funct": [20, 28], "benefit": 21, "For": [21, 26, 27, 28, 31, 100, 101, 132, 133, 135, 136, 137, 141], "align": [21, 96, 123, 124, 133], "32": [21, 60, 101, 124, 133, 134, 135, 140, 141], "start": [21, 31, 94, 100, 101, 134], "end": [21, 101, 133], "is_fre": 21, "definit": [22, 38, 99], "central": 22, "task": [22, 132, 133], "dic": 22, "out_dtyp": [22, 32, 34, 36, 37, 39, 116, 133, 140], "trans_b": [22, 32, 37, 39], "input_transform_kind": 22, "weight_transform_kind": 22, "relat": [22, 26, 121], "as_shap": 22, "bs_shape": 22, "af_shap": 22, "bf_shape": 22, "tc_axi": 22, "store": [22, 33, 38, 53, 60, 81, 97, 101, 121, 132, 134], "extra": [22, 26, 27, 101], "output_til": [22, 26], "tile": [22, 23, 26, 27, 80, 82, 93, 109, 132, 133, 134, 136, 140], "analaysi": 23, "itervar": [23, 104, 106], "tag": [23, 24, 26, 27], "v": [23, 132, 141], "datatyp": [23, 59, 134], "overwrit": 23, "prim_func": [23, 62, 63, 65, 66, 67, 68, 72, 73, 75, 77, 79, 98, 99, 133, 134, 135, 140, 141], "rstep": [23, 30, 31, 140], "stride_map": 23, "output_node_list": 23, "block_analyz": [23, 31], "list_of_nod": 23, "assign_block_s": [24, 26], "check_tile_shape_isvalid": [24, 26, 27], "compute_node_stride_map": [24, 26, 27], "compute_tile_dict": [24, 26], "compute_workload_per_item": [24, 26], "dfs_smem_til": [24, 26], "emit_config": [24, 26], "from_output_nod": [24, 26], "from_prim_func": [24, 26], "get_base_til": [24, 26], "get_block_s": [24, 26], "get_node_reduce_step_candid": [24, 26, 27], "infer_node_smem_usag": [24, 26, 27], "plan_raster": [24, 26, 27], "recommend_block_s": [24, 26], "score_block_s": [24, 26], "block_reduction_depth": [24, 27], "pipeline_stag": [24, 27, 140], "use_async_copi": [24, 27, 124], "wmma_k": [24, 27], "subtensor": 25, "transaction_s": 25, "fastdlight": 26, "heurist": 26, "plan": [26, 27, 28, 132], "tri": 26, "minim": [26, 133, 137], "traffic": 26, "maxim": 26, "bitbla": [26, 135], "td": [26, 27], "topk": [26, 33, 34, 35, 36, 37, 38, 39, 40, 140], "assign": [26, 132, 133, 134, 135, 137], "recommend": [26, 33, 38, 133, 136, 140], "consid": [26, 34, 35, 36, 37, 39, 135, 141], "yield": [26, 141], "primari": [26, 66, 68, 73], "contain": [26, 27, 34, 35, 36, 37, 39, 53, 77, 86, 87, 128, 136, 137, 140], "otherwis": [26, 27, 33, 49, 53, 58, 60, 87, 111, 128, 130], "dictionari": [26, 27, 34, 35, 36, 37, 39, 77, 79, 116], "rstep_map": 26, "cost": [26, 133], "grid": [26, 79, 81, 98, 100, 132, 133, 135], "init_til": 26, "minimum": [26, 83, 94, 100, 101, 132], "satisfi": [26, 101], "equal": 26, "length": 26, "dimens": [26, 34, 53, 82, 85, 88, 89, 97, 101, 104, 111, 112, 132, 133, 135, 141], "determin": [26, 34, 47, 111, 113, 130, 132, 137], "constraint": [26, 101, 132], "score": 26, "chosen": 26, "constrain": 26, "1024": [26, 133, 134, 135, 141], "calcul": [26, 27, 101, 114, 120, 121, 132, 141], "candid": [26, 27], "each": [26, 27, 28, 34, 44, 80, 132, 133, 134, 135, 137], "idea": [26, 27, 135], "first": [26, 27, 49, 83, 85, 88, 95, 97, 101, 104, 131, 132, 133, 134, 137, 141], "sinc": [26, 27, 132, 133, 135], "requir": [26, 27, 49, 111, 124, 132, 133, 134, 135, 136, 141], "boundari": [26, 27], "larg": [26, 27, 132, 134], "prime": [26, 27, 111], "rare": [26, 27], "case": [26, 27, 132, 133, 134, 141], "power": [26, 27, 79, 98, 101, 132, 134], "raxi": [26, 27], "usag": [26, 27, 66, 68, 81, 133, 135, 137], "estim": [26, 27, 121], "amount": [26, 27], "yet": [26, 27, 135, 136, 137], "rasterrationplan": [26, 27], "sort": 26, "effici": [26, 132, 133, 135, 137, 140], "fit": [26, 133], "warp": [26, 81, 85, 88, 95, 97, 101, 102, 111, 116, 124, 137], "partit": [26, 111, 112, 132], "two": [26, 101, 131, 132, 133, 141], "respect": [26, 101, 132, 133, 141], "16": [27, 58, 60, 123, 124, 134, 136, 141], "l2": [28, 79, 114, 132], "column": [28, 39, 82, 101, 111, 132], "line": [28, 132, 135, 141], "width": [28, 34, 82, 83, 92, 101, 132], "_": [28, 141], "row": [28, 39, 79, 101, 111, 132], "_________": 28, "__________": 28, "get_input_expr": [29, 30, 31], "find_path_from_sourc": [29, 31], "get_or_create_nod": [29, 31], "print_depend": [29, 31], "traverse_depend": [29, 31], "construct_dependency_target": [29, 31], "make_revers": [29, 31], "add_next": [29, 31], "add_prev": [29, 31], "dedupl": [29, 31], "dep": [30, 31], "output_expr": [30, 31], "dependent_region": 30, "var_map": 30, "ordereddict": 30, "range_map": 30, "start_nam": 31, "target_nam": 31, "exist": [31, 51, 89, 97, 104, 136, 140, 141], "constintbound": 31, "input_nam": 31, "input_it": 31, "depend": [31, 135, 136, 137], "lst": 31, "equivalent_funct": [32, 33], "get_hardware_aware_config": [32, 33, 34, 35, 36, 37, 38, 39], "has_arch": [32, 33], "initialize_funct": [32, 33, 34, 35, 36, 37, 38, 39], "output_nod": [32, 33, 40], "recommend_hint": [32, 33, 140], "set_funct": [32, 33], "set_output_nod": [32, 33], "with_arch": [32, 33, 140], "h": [32, 34, 141], "f": [32, 34, 101, 135, 136, 141], "d": [32, 34], "p": [32, 34, 133], "with_bia": [32, 34, 37, 39], "class_attribut": [32, 34, 35, 36, 37, 38, 39, 110, 111], "params_as_dict": [32, 34, 35, 36, 37, 38, 39, 110, 111], "batch_siz": [32, 36], "head_dim": [32, 36], "num_head": [32, 36], "seq_kv_length": [32, 36], "seq_length": [32, 36], "m": [32, 36, 39, 58, 60, 79, 101, 111, 132, 133, 134, 135, 140, 141], "trans_a": [32, 39], "abc": [33, 64, 75], "awar": [33, 34, 35, 36, 37, 38, 39, 135, 137], "serv": [33, 96, 132, 133], "abstract": [33, 38, 75, 135, 137], "defin": [33, 34, 35, 36, 37, 39, 44, 81, 82, 106, 113, 133, 135, 137, 140, 141], "subclass": [33, 38], "associ": [33, 87, 106, 133], "10": [33, 34, 35, 36, 37, 38, 39, 40, 79, 101, 113, 118, 135, 136, 140], "must": [33, 38, 111, 133], "should": [33, 38, 99, 101, 114, 116, 128, 132, 134], "placehold": [33, 34, 36, 37, 39, 78, 101], "respons": [33, 112, 133], "initi": [33, 34, 35, 36, 37, 39, 79, 97, 101, 133, 135, 137], "notimplementederror": 33, "amper": 33, "volta": 33, "itself": 33, "updat": [33, 77, 87, 136], "convolut": [34, 82, 132], "matrix": [34, 36, 37, 39, 60, 61, 81, 85, 88, 101, 112, 128, 132, 137, 138], "transposit": [34, 37, 39, 112, 132], "bia": [34, 36, 37, 39], "sampl": 34, "simultan": [34, 132], "featur": [34, 134, 136], "height": 34, "filter": [34, 141], "depth": [34, 135, 137], "slide": 34, "across": [34, 104, 113, 132, 134, 135], "element": [34, 35, 80, 83, 90, 92, 101, 113, 128, 131, 132, 133, 134], "control": [34, 104, 132, 134, 135, 137], "recept": 34, "field": [34, 101], "expans": 34, "pixel": 34, "ad": [34, 83, 141], "border": 34, "matric": [34, 36, 37, 39, 85, 88, 101, 132, 137], "accumul": [34, 39, 81, 83, 85, 88, 97, 101, 112, 134, 135, 137], "add": [34, 39, 97, 132], "term": [34, 39, 124], "retriev": [34, 35, 36, 37, 39, 81, 87, 106, 116, 128, 133], "acceler": [34, 36, 37, 39, 133, 137, 140], "up": [34, 36, 37, 39, 81, 87, 101, 135], "api": [34, 36, 37, 39], "cast": [34, 36, 37, 39, 96, 101, 134], "assertionerror": [34, 36, 39, 60, 85, 88, 111, 112, 128, 130, 131], "posit": [34, 36, 39, 101], "integ": [34, 36, 39, 53, 89, 101, 102, 126, 128, 131, 134, 140], "wise": [35, 92, 101, 132], "represent": [35, 74, 137, 141], "graph": [35, 47], "built": [35, 45, 49, 135, 136, 140, 141], "express": [35, 74, 82, 92, 95, 96, 101, 104, 106, 112, 135], "_output_nod": 36, "vector": [37, 79, 98, 100, 101, 123, 124, 133, 138, 141], "pars": [38, 47, 49, 99], "ssr": [38, 112], "build": [38, 62, 101, 132, 138], "appropri": [38, 80, 130, 135], "_func": 38, "transpos": [39, 61, 85, 88, 129], "pannel_width": 40, "8": [40, 57, 58, 60, 93, 133, 134, 136, 141], "func_or_modul": 40, "irmodul": [40, 52, 53, 54, 66, 68, 73, 74, 75, 101, 121, 125, 128, 137], "tensorcore_onli": 40, "extra_tag": 40, "ir_modul": [40, 65, 66, 67, 68, 128], "interwarptransform": [41, 42], "intrawarptransform": [41, 42], "ldmatrixtransform": [41, 42], "nontransform": [41, 42], "is_inter_warp_transform": [41, 42], "is_intra_warp_transform": [41, 42], "is_ld_matrix_transform": [41, 42], "is_non_transform": [41, 42], "intenum": [42, 111], "enumer": [42, 111, 131], "invok": [44, 46, 47, 77, 110, 112, 135], "system": [44, 46, 47, 49, 130, 136, 137], "cwd": 44, "ccache_env": 44, "binari": [44, 101], "command": [44, 136], "urrent": 44, "work": [44, 132, 133, 137], "environ": [44, 136], "ccach": 44, "disabl": [44, 55, 81, 124], "static": [44, 71, 87, 111, 124], "tarbal": 44, "compile_func": 44, "output_format": 44, "get_target_tripl": 44, "add_fil": 44, "special": [44, 80, 124, 134, 137, 141], "construct": [44, 89, 92, 93, 94, 96, 102, 137], "autotvm": 44, "export_librari": [44, 62, 77], "tripl": 44, "accord": [44, 101], "dumpmachin": 44, "part": [44, 132, 135], "fcompil": 44, "import": [44, 89, 99, 133, 135, 136, 140, 141], "ndk": 44, "export": [44, 77, 136], "arm": 44, "gcc": [44, 136], "mod": [44, 54, 64, 70, 141], "build_runtime_modul": 44, "path_dso": 44, "linux": [44, 136], "gnueabihf": 44, "specialized_ndk": 44, "sysroot": 44, "fpic": 44, "lm": 44, "wa": [44, 68, 104, 132, 133, 141], "nm": 44, "global": [44, 55, 87, 96, 99, 101, 121, 123, 128, 135, 137], "via": [44, 101, 109, 134, 136, 137], "symbol_section_map": 44, "section": [44, 101, 133, 137], "functor": 44, "bridg": 45, "framework": [45, 132, 136, 140], "tvm_func": 45, "tensor_typ": 45, "to_dlpack_func": 45, "convert": [45, 53, 64, 66, 68, 70, 74, 82, 113, 114, 126], "one": [45, 93, 128, 132, 133, 141], "accept": [45, 101], "anoth": [45, 101, 132], "arrai": [45, 101, 128], "pytorch": [45, 53, 66, 68, 77, 114, 132, 135, 136], "wrapped_func": 45, "target_format": [46, 47], "hsaco": 46, "path_target": [46, 47], "amd": [46, 101, 135, 137], "bytearrai": [46, 47], "ptx": [47, 101, 135], "cubin": 47, "root": [47, 49, 101, 141], "cuda_path": 47, "version": [47, 49, 68, 101, 133, 134, 138, 141], "compute_vers": [47, 49], "fp16": [47, 58, 60, 135], "capabl": [47, 49, 132, 135], "6": [47, 49, 131, 135], "int8": [47, 58, 60, 61, 116, 118], "divid": [47, 49, 101, 132], "ld": 49, "lld": 49, "runtim": [49, 53, 77, 101, 114, 135, 136, 137], "valid_list": 49, "matrixcor": 49, "in_fil": 49, "out_fil": 49, "link": [49, 136], "relocat": 49, "elf": 49, "linker": 49, "guess": 49, "clang": 49, "device_mod": [50, 52, 53, 63, 66, 68, 73, 75, 141], "host_mod": [50, 52, 53, 63, 66, 68, 73, 75], "kernel_sourc": [50, 53, 62, 77, 141], "rt_mod": [50, 53], "from_buff": [50, 53], "from_var": [50, 53], "is_boolean": [50, 53], "is_float8": [50, 53], "is_scalar": [50, 53], "is_unsign": [50, 53], "regist": [51, 81, 101, 132, 133, 135, 137, 141], "post": 51, "take": [51, 80, 101, 116, 135, 136, 141], "parenthes": 51, "def": [51, 79, 99, 133, 134, 135, 140, 141], "boolean": [51, 53, 79, 101, 116], "flag": [51, 112, 136], "is_device_c": 52, "launch": [52, 89, 102, 133], "func_or_mod": [52, 66, 68, 73, 74], "runtime_onli": 52, "enable_host_codegen": 52, "enable_device_compil": 52, "codegen": [52, 141], "have": [52, 99, 101, 111, 112, 132, 133, 134, 136, 137], "our": [52, 132, 134, 137], "own": [52, 132, 137], "torch": [53, 64, 66, 68, 70, 113, 114, 118, 126, 129, 131, 132, 134, 135, 141], "artifact": [53, 62, 77], "compon": 53, "describ": [53, 60, 122], "scalar": [53, 101, 141], "interop": 53, "valueerror": [53, 86, 95, 111, 128, 130, 141], "intimm": [53, 101], "float8": 53, "ha": [53, 87, 99, 132, 134, 135, 140], "unsign": 53, "pass_ctx": 54, "state": [55, 138], "m_dim": [56, 58, 60], "n_dim": [56, 58, 60], "warp_siz": [56, 58, 60, 101], "dtype_abbrv": [56, 58, 60], "extract_thread_bind": [56, 58, 60], "get_ldmatrix_index_map": [56, 58], "is_m_first": [56, 58, 60], "k_pack": [56, 58, 85, 88, 110, 111, 112], "ldmatrix_a": [56, 58, 60], "ldmatrix_b": [56, 58, 60], "mfma": [56, 58, 101], "stmatrix": [56, 58, 60], "mma": [56, 60, 101, 112, 132, 135], "get_store_index_map": [56, 60], "make_mma_load_layout": [56, 60], "make_mma_store_layout": [56, 60], "shared_buf": [57, 59], "vecsiz": 57, "ind": 57, "thread_id": [57, 58, 59, 60, 61], "local_id": [57, 59, 61], "a_dtyp": [58, 60, 101], "b_dtype": [58, 60, 101], "a_transpos": [58, 60], "b_transpos": [58, 60], "block_row_warp": [58, 60, 110, 111, 112], "block_col_warp": [58, 60, 110, 111, 112], "warp_row_til": [58, 60, 110, 111, 112], "warp_col_til": [58, 60, 110, 111, 112], "chunk": [58, 60, 110, 111, 112, 137], "reduce_k": [58, 60], "num_elems_per_byt": [58, 60, 61], "To": [58, 60, 133, 134, 136], "elimin": [58, 60, 124, 132], "syntax": [58, 60, 81, 137, 138], "within": [58, 60, 81, 133, 134, 137, 141], "macro": [58, 60, 79, 95, 98, 99, 112], "64": [58, 101, 132, 134, 140], "bfloat16": [58, 60, 133], "bf16": [58, 60], "e4m3_float8": [58, 60], "e4m3": [58, 60], "e5m2_float8": [58, 60], "e5m2": [58, 60], "float32": [58, 60, 80, 96], "fp32": [58, 60], "float8_e4m3fnuz": 58, "e4m3fnuz": 58, "bind": [58, 60, 87, 89, 99, 100, 102], "tx": [58, 60, 95, 101, 102], "warp_n": [58, 60], "warp_m": [58, 60], "split": [58, 60, 101, 124], "is_b": 58, "a_local_buf": [58, 60], "a_shared_buf": [58, 60], "ki": [58, 60], "rk": [58, 60], "b_local_buf": [58, 60], "b_shared_buf": [58, 60], "c_local_buf": [58, 60], "c_buf": [58, 60], "pid_m": [58, 60], "pid_n": [58, 60], "row_idx": [59, 61], "col_idx": [59, 61], "row_siz": 59, "swizzle_byt": 59, "is_smooth": 59, "transform_kind_a": 60, "transform_kind_b": 60, "invers": [60, 103, 106], "local_buf": 60, "conjunct": 60, "inverse_mma_store_layout": 60, "how": [60, 114, 122, 132, 134, 135, 137, 141], "laid": 60, "k_inner": 60, "With": [60, 132, 134, 135, 137], "ladder": 60, "plugin": 60, "vjj": 61, "micro_size_k": 61, "coordin": 61, "vii": 61, "micro_size_i": 61, "vj": 61, "block_k": [61, 129, 134, 135, 137, 140, 141], "vi": 61, "basekerneladapt": [62, 63, 64, 66, 68, 70, 73, 77, 113], "torchdlpackkerneladapt": [62, 63, 70], "libgen": [62, 63], "librarygener": [62, 63, 71], "pylibrarygener": [62, 63, 71], "get_annotated_mod": [62, 63, 74], "is_cpu_target": [62, 63, 74], "is_cuda_target": [62, 63, 74], "is_hip_target": [62, 63, 74], "match_declare_kernel": [62, 63, 74], "match_declare_kernel_cpu": [62, 63, 74], "match_global_kernel": [62, 63, 74], "pythonic_expr": [62, 63, 74], "basewrapp": [62, 63, 75], "tlcpusourcewrapp": [62, 63, 75], "tlcudasourcewrapp": [62, 63, 75], "tlhipsourcewrapp": [62, 63, 75], "tlnvrtcsourcewrapp": [62, 63, 75], "tlpywrapp": [62, 63, 75], "tlwrapper": [62, 63, 75], "torch_funct": [62, 77], "from_databas": [62, 65, 66, 67, 68, 72, 73, 77], "from_tilelang_funct": [62, 77], "get_host_sourc": [62, 77], "get_kernel_sourc": [62, 63, 64, 65, 66, 67, 68, 72, 73, 77, 78, 133, 135, 141], "get_profil": [62, 77, 135], "get_tuner_result": [62, 77], "host_sourc": [62, 77], "update_tuner_result": [62, 77], "infrastructur": [62, 138], "runnabl": 62, "ctypeskerneladapt": [63, 65, 66], "cythonkerneladapt": [63, 67, 68], "get_cached_lib": [63, 67, 68], "get_cython_compil": [63, 67, 68], "cython_wrapp": [63, 67], "cythonkernelwrapp": [63, 67, 69], "nvrtckerneladapt": [63, 72, 73], "assign_pass_config": [63, 71, 75], "compile_lib": [63, 71], "get_lib_path": [63, 71], "get_source_path": [63, 71], "lib_cod": [63, 65, 66, 67, 68, 71], "libpath": [63, 65, 66, 67, 68, 71], "load_lib": [63, 71], "remove_lib": [63, 71], "set_lib_path": [63, 71], "set_src_path": [63, 71], "srcpath": [63, 65, 66, 67, 68, 71], "update_lib_cod": [63, 71, 75], "culib": [63, 71], "host_func": [63, 71], "import_from_fil": [63, 71], "pymodul": [63, 71, 72, 73], "update_host_func": [63, 71], "call_prefix": [63, 75], "init_func": [63, 75], "create_call_func": [63, 75], "get_cpu_init_func": [63, 75], "get_dynamic_symbolic_set": [63, 75], "parse_source_inform": [63, 75], "create_dispatch_func": [63, 75], "generate_l2_persistent_map": [63, 75], "generate_tma_descriptor_arg": [63, 75], "get_init_func": [63, 75], "get_stream_typ": [63, 75], "is_tma_descriptor_arg": [63, 75], "assign_device_modul": [63, 75], "assign_host_modul": [63, 75], "assign_optimized_modul": [63, 75], "lib": [63, 65, 66, 67, 68, 75], "dynamic_symbolic_map": [65, 66, 67, 68], "is_dynam": [65, 66, 67, 68], "kernel_global_sourc": [65, 66, 67, 68, 73, 77], "param_dtyp": [65, 66], "param_shap": [65, 66], "wrapped_sourc": [65, 66, 67, 68], "tensortyp": [66, 68], "kernel_lib_path": [66, 68, 73, 77], "kernel_onli": [66, 68], "cdll": [66, 68], "buffer_device_map": [67, 68], "buffer_dtype_map": [67, 68], "ptr_map": [67, 68], "static_shape_map": [67, 68], "forward": [67, 69, 106, 132], "set_buffer_device_map": [67, 69], "set_buffer_dtype_map": [67, 69], "set_dynamic_symbolic_map": [67, 69], "set_ptr_map": [67, 69], "set_static_shape_map": [67, 69], "source_cod": 68, "load": [68, 81, 82, 101, 112, 133, 134, 135, 137], "lib_path": 71, "module_nam": 71, "file_path": 71, "model_typ": 74, "annot": [74, 79, 100, 101, 132, 135], "__global__": [74, 133, 134], "int32_t": 74, "dtype_map": 74, "style": [74, 133], "correctli": 74, "preced": 74, "scheduled_ir_modul": 75, "ifdef": 75, "__cplusplu": 75, "nextern": 75, "endif": 75, "nint32_t": 75, "call": [75, 81, 82, 85, 86, 88, 90, 97, 101, 133, 135, 137, 141], "function_inform": 75, "function_nam": 75, "desc_name_map": 75, "arg_nam": 75, "c_sourc": 75, "standalon": 76, "modifi": [76, 83, 141], "flashinf": [76, 132], "compat": [77, 136], "kernel_fil": 77, "altern": [77, 132, 136], "constructor": 77, "torchfunct": 77, "tilelang_func": 77, "tensor_supply_typ": 77, "benchmark": [77, 113, 114, 135], "comparison": [77, 113, 131, 132], "compar": [77, 113, 131, 132, 133, 134, 135], "against": [77, 101, 113, 135], "origin": [78, 116, 132, 133, 137], "entri": [79, 89, 98, 102, 112], "serial": [79, 98, 100, 132, 134], "thread_bind": [79, 98, 100], "unrol": [79, 98, 100, 133], "op": [79, 98], "tvmbackendallocworkspac": [79, 98, 101], "tvmbackendfreeworkspac": [79, 98, 101], "ab": [79, 98, 101], "aco": [79, 98, 101], "acosh": [79, 98, 101], "address_of": [79, 98, 101], "anylist_getitem": [79, 98, 101], "anylist_resetitem": [79, 98, 101], "anylist_setitem_call_cpack": [79, 98, 101], "anylist_setitem_call_pack": [79, 98, 101], "asin": [79, 98, 101], "asinh": [79, 98, 101], "assum": [79, 98, 101, 112, 134], "atan": [79, 98, 101], "atan2": [79, 98, 101], "atanh": [79, 98, 101], "bitwise_and": [79, 98, 101], "bitwise_not": [79, 98, 101], "bitwise_or": [79, 98, 101], "bitwise_xor": [79, 98, 101], "call_cpack": [79, 98, 101], "call_cpacked_low": [79, 98, 101], "call_extern": [79, 98, 101], "call_intrin": [79, 98, 101], "call_llvm_intrin": [79, 98, 101], "call_llvm_pure_intrin": [79, 98, 101], "call_pack": [79, 98, 101], "call_packed_low": [79, 98, 101], "call_pure_extern": [79, 98, 101], "call_tir": [79, 98, 101], "ceil": [79, 98, 101], "ceildiv": [79, 98, 101, 133, 134, 135], "clz": [79, 98, 101], "comm_reduc": [79, 98, 101, 134], "copysign": [79, 98, 101], "co": [79, 98, 101], "cosh": [79, 98, 101], "create_barri": [79, 98, 101], "div": [79, 98, 101], "end_profile_intrins": [79, 98, 101], "erf": [79, 98, 101], "exp": [79, 98, 101, 132], "exp10": [79, 98, 101], "exp2": [79, 98, 101], "floor": [79, 98, 101], "floordiv": [79, 98, 101], "floormod": [79, 98, 101], "fmod": [79, 98, 101], "hypot": [79, 98, 101], "if_then_els": [79, 98, 101], "indexdiv": [79, 98, 101], "indexmod": [79, 98, 101], "infin": [79, 98, 101], "isfinit": [79, 98, 101], "isinf": [79, 98, 101], "isnan": [79, 98, 101], "isnullptr": [79, 98, 101], "ldexp": [79, 98, 101], "log10": [79, 98, 101], "log1p": [79, 98, 101], "log2": [79, 98, 101], "lookup_param": [79, 98, 101], "max_valu": [79, 98, 101], "min_valu": [79, 98, 101], "mma_fil": [79, 98, 101], "mma_stor": [79, 98, 101], "nearbyint": [79, 98, 101], "nextaft": [79, 98, 101], "popcount": [79, 98, 101], "pow": [79, 98, 101], "pow_of_int": [79, 98, 101], "ptx_arrive_barri": [79, 98, 101], "ptx_arrive_barrier_expect_tx": [79, 98, 101], "ptx_commit_group": [79, 98, 101], "ptx_cp_async": [79, 98, 101], "ptx_cp_async_barri": [79, 98, 101], "ptx_cp_async_bulk": [79, 98, 101], "ptx_init_barrier_thread_count": [79, 98, 101], "ptx_ldmatrix": [79, 98, 101], "ptx_mma": [79, 98, 101], "ptx_mma_sp": [79, 98, 101], "ptx_wait_barri": [79, 98, 101], "ptx_wait_group": [79, 98, 101], "q_multiply_shift": [79, 98, 101], "q_multiply_shift_per_axi": [79, 98, 101], "reinterpret": [79, 98, 101, 134], "ret": [79, 98, 101], "round": [79, 98, 101], "rsqrt": [79, 98, 101], "shift_left": [79, 98, 101], "shift_right": [79, 98, 101], "sigmoid": [79, 98, 101], "sin": [79, 98, 101], "sinh": [79, 98, 101], "sqrt": [79, 98, 101], "start_profile_intrins": [79, 98, 101], "tan": [79, 98, 101], "tanh": [79, 98, 101], "trace": [79, 98, 101], "trunc": [79, 98, 101], "truncdiv": [79, 98, 101], "truncmod": [79, 98, 101], "tvm_access_ptr": [79, 98, 101], "tvm_bmma_sync": [79, 98, 101], "tvm_check_return": [79, 98, 101], "tvm_fill_frag": [79, 98, 101], "tvm_load_matrix_sync": [79, 98, 101], "tvm_mfma": [79, 98, 101], "tvm_mfma_stor": [79, 98, 101], "tvm_mma_sync": [79, 98, 101], "tvm_rdna_wmma": [79, 98, 101], "tvm_rdna_wmma_stor": [79, 98, 101], "tvm_stack_alloca": [79, 98, 101], "tvm_stack_make_arrai": [79, 98, 101], "tvm_stack_make_shap": [79, 98, 101], "tvm_storage_sync": [79, 98, 101], "tvm_store_matrix_sync": [79, 98, 101], "tvm_struct_get": [79, 98, 101], "tvm_struct_set": [79, 98, 101], "tvm_thread_allreduc": [79, 98, 101], "tvm_thread_invari": [79, 98, 101], "tvm_throw_last_error": [79, 98, 101], "tvm_tupl": [79, 98, 101], "tvm_warp_activemask": [79, 98, 101], "tvm_warp_shuffl": [79, 98, 101], "tvm_warp_shuffle_down": [79, 98, 101], "tvm_warp_shuffle_up": [79, 98, 101], "type_annot": [79, 98, 101], "undef": [79, 98, 101], "vectorcombin": [79, 98, 101], "vectorhigh": [79, 98, 101], "vectorlow": [79, 98, 101], "vscale": [79, 98, 101], "get_valu": [79, 87], "has_valu": [79, 87], "get_num_thread": [79, 89], "num_thread": [79, 89], "default_align": [79, 96], "default_offset_factor": [79, 96], "default_scop": [79, 96], "from_ptr": [79, 96], "interfac": [79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 102, 113, 138], "l2_hit_ratio_map": 79, "hit": [79, 132], "explan": 79, "pleas": [79, 133, 134, 135, 136], "http": [79, 81, 101, 133, 136], "doc": [79, 81, 101], "nvidia": [79, 81, 101, 132, 135, 136, 137, 141], "com": [79, 81, 101, 133, 136], "guid": [79, 133, 138], "5": [79, 101, 131, 135, 140], "layout_map": 79, "block_attr": 79, "bx": [79, 133, 135, 137], "a_shar": [79, 81, 134, 135], "padding_map": 79, "pad": [79, 82], "pad_valu": 79, "panel_s": [79, 132, 135], "order": [79, 94, 132], "ai": [80, 132, 136], "conveni": [80, 89, 132], "scope": [80, 87, 89, 96, 101, 102, 116, 123, 128, 133], "inter": 80, "commun": [80, 101, 141], "privat": [80, 99], "storag": [80, 96, 101, 116, 123, 124, 137], "arrive_count": 80, "barrier": [80, 81, 101, 132], "need": [80, 101, 104, 132, 135, 136, 137, 141], "arriv": [80, 81, 101], "dyn": [80, 96], "barrier_id": [81, 101], "pariti": [81, 132], "wait": [81, 85, 88, 101], "complet": [81, 101, 132, 140, 141], "sugar": 81, "onli": [81, 95, 101, 132, 133, 134], "typeerror": [81, 82], "variad": 81, "tma": [81, 124, 132], "descriptor": [81, 82], "reg_count": 81, "decrement": 81, "fenc": 81, "asynchron": [81, 123, 124, 135], "request": [81, 101, 132], "increment": 81, "mbarrier": [81, 101, 132], "expect": [81, 101, 141], "transact": [81, 101], "count": [81, 85, 88, 101, 114], "condit": [81, 101, 133, 141], "ko": [81, 135], "consum": [81, 94, 132, 134], "finish": [81, 123, 134, 141], "previou": [81, 132, 133], "a_glob": 81, "signal": 81, "readi": [81, 137], "b_share": [81, 134, 135], "c_local": [81, 135], "limit": [81, 137, 141], "is_inc": 81, "document": [81, 133, 134, 135, 141], "miscellan": 81, "instruct": [81, 101, 112, 132, 135, 136], "setmaxnreg": 81, "offset": [81, 96, 101, 133], "shuffl": [81, 101], "down": [81, 135], "xor": [81, 101, 132], "synchron": [81, 101, 132, 134, 137, 141], "wgmma": [81, 132], "multipli": [81, 112, 135], "bufferload": [82, 101], "access_typ": 82, "rw": 82, "area": 82, "buffer_region": 82, "cover": [82, 133, 141], "img": 82, "col": [82, 101, 132], "nhw_step": 82, "c_step": 82, "dilat": 82, "2d": 82, "imag": [82, 122], "channel": 82, "rate": [82, 132], "src": [82, 83, 97, 141], "dst": [82, 83, 97], "coalesced_width": [82, 92], "disable_tma": 82, "destin": [82, 83, 101], "coalesc": [82, 92, 133, 137], "deduc": [82, 132], "atom": 83, "doubl": 83, "operand": [83, 101], "min_val": 83, "max_val": 83, "dot": [83, 134], "product": [83, 134, 138, 140], "second": [83, 85, 88, 101, 121, 131], "a_spars": 85, "transpose_a": [85, 88, 110, 111, 112], "transpose_b": [85, 88, 110, 111, 112, 132], "gemmwarppolici": [85, 88, 109, 110, 111, 112], "squar": [85, 88, 101, 110, 111, 112], "clear_accum": [85, 88], "wg_wait": [85, 88], "sp": 85, "mode": [85, 88, 101, 114, 116, 135, 136], "dens": 85, "metadata": [85, 101], "pack": [85, 88, 101], "don": [85, 88, 132], "zero": [86, 101, 113, 116, 126, 131], "invalid": [86, 111, 130], "when": [87, 97, 101, 132, 133, 134, 135, 137, 141], "enter": 87, "dequ": [87, 89], "maintain": 87, "lookup": 87, "look": [87, 134], "applic": 87, "tirfram": [87, 89, 102], "let": [87, 132, 133, 135, 137], "track": [87, 101], "extend": [87, 133, 137], "activ": [87, 101, 133], "topmost": [87, 89], "bound": [87, 101], "is_cpu": 89, "prelud": 89, "quickli": [89, 132, 141], "griddim": 89, "x": [89, 101, 102, 108, 133, 134, 135], "y": [89, 101, 102, 133, 134, 136], "z": [89, 101, 102, 133], "blockdim": [89, 102, 133], "Or": [89, 102], "threadidx": [89, 102, 133, 134, 141], "thu": [89, 135], "blockidx": [89, 133, 134, 141], "re": [89, 92, 94, 96, 99, 100, 101, 102, 136], "launchthreadfram": [89, 102], "exit": [89, 102], "correspond": [89, 101, 106, 111, 116, 132, 133, 134, 137], "three": [89, 116, 135, 136, 137, 140, 141], "total": [89, 111, 121, 131], "0x7fb095cc66b0": 90, "stmt": [90, 125], "nest": 92, "forfram": [92, 94, 100], "wave_s": 93, "group_siz": 93, "wave": 93, "stop": [94, 100], "stage": [94, 132, 135, 141], "sync": [94, 123], "max": [94, 97, 114, 132], "condition": 95, "obj": 95, "msg": [95, 141], "warp_group_id": 95, "warp_id": [95, 101], "ty": 95, "tz": 95, "warp_group_s": 95, "unsupport": [95, 141], "foundat": 96, "customiz": 96, "pointer_var": 96, "pointer": [96, 101, 124], "0x7fb095cc6680": 96, "typic": [96, 132, 133], "temporari": 96, "commonli": [96, 132], "inherit": [96, 112], "modif": 96, "storage_scop": [96, 101, 116, 123], "is_size_var": 96, "sizevar": 96, "instead": [96, 101, 127, 132, 141], "revers": 97, "cumul": 97, "sum": [97, 134, 137], "reduce_typ": 97, "along": [97, 132, 134, 135], "min": [97, 114], "abssum": 97, "inf": 97, "note": [97, 132, 133, 136, 137], "becaus": [97, 137], "same": [97, 101, 112, 132, 133, 137], "would": [97, 132], "therefor": [97, 132], "follow": [97, 101, 112, 132, 133, 136, 137, 140], "temp": 97, "hygien": 99, "bodi": 99, "resolv": [99, 141], "locat": [99, 101, 130], "non": [99, 101, 124, 132], "script": [99, 132], "x_valu": 99, "static_captur": 99, "dynamic_captur": 99, "check_well_form": 99, "prim": 99, "treat": 99, "device_typ": 101, "nbyte": 101, "dtype_code_hint": 101, "dtype_bits_hint": 101, "tempor": 101, "workspac": [101, 136], "certain": [101, 132, 136], "opengl": 101, "bit": [101, 116, 132, 134], "span": 101, "buffer_load": 101, "address": [101, 132, 141], "intersect": 101, "list_handl": 101, "anylist": 101, "reset": 101, "cond": 101, "simplif": [101, 124], "x1": 101, "x2": 101, "arctan2": 101, "bitwis": 101, "left": [101, 132], "right": [101, 132, 141], "extern": [101, 133, 134], "resourc": [101, 132], "te": 101, "overload": 101, "translat": [101, 141], "pure": [101, 135, 137], "pod": 101, "present": [101, 132, 133], "packedfunc": 101, "receiv": 101, "tvmarrayhandl": 101, "whose": [101, 114], "period": 101, "ndarrai": 101, "global_var": 101, "globalvar": 101, "lh": [101, 131], "rh": [101, 131], "lead": [101, 132, 133], "undefin": 101, "fcombin": 101, "fident": 101, "commut": 101, "const": [101, 133, 141], "over": [101, 104, 135], "There": 101, "wai": [101, 134, 136], "simpli": [101, 133], "mysum": 101, "lambda": [101, 134], "reduce_axi": 101, "chang": [101, 136], "sign": 101, "barrier_count": 101, "semant": [101, 133], "hand": [101, 132, 135, 137], "known": [101, 132, 140], "neg": 101, "gauss": 101, "exponenti": 101, "primexprwithop": 101, "remaind": 101, "equival": [101, 124, 137], "select": [101, 130, 132], "unlik": [101, 133], "branch": 101, "guard": 101, "some": [101, 135, 136, 141], "lane": [101, 141], "mai": [101, 104, 132, 133, 134, 135, 136, 137, 141], "advantag": [101, 132], "finit": 101, "infinit": 101, "nan": 101, "nullptr": 101, "mark": [101, 135], "param_nam": 101, "local_s": 101, "local_ptr": 101, "dst_ptr": 101, "src_ptr": 101, "src_offset": 101, "dst_stride": 101, "nearest": 101, "faster": [101, 114, 134, 137], "notabl": [101, 132], "wherea": [101, 137], "see": [101, 132, 135, 140, 141], "en": 101, "cpprefer": 101, "cpp": 101, "numer": 101, "next": [101, 133], "point": [101, 112, 121, 132], "after": [101, 123, 133, 134, 135, 136, 137, 141], "toward": 101, "expon": 101, "fast": [101, 116, 124, 137], "than": [101, 128, 134, 135, 136, 137, 141], "html": 101, "byte_count": 101, "expect_tx": 101, "increas": [101, 134], "async": 101, "commit": 101, "movement": [101, 132, 133, 137], "convers": 101, "cp": [101, 136], "shared_ptr": 101, "shared_offset": 101, "global_ptr": 101, "global_offset": 101, "bulk": 101, "thread_count": 101, "num": [101, 111], "local_offset": 101, "smem_ptr": 101, "smem_offset": 101, "ldmatrix": [101, 112], "b16": 101, "memort": 101, "a_layout": 101, "b_layout": 101, "c_dtype": 101, "multiplicand_a": 101, "a_index": 101, "multiplicand_b": 101, "b_index": 101, "c_index": 101, "satur": 101, "multiplicand": 101, "meta_index": 101, "sparse_selector": 101, "selector": 101, "try_wait": 101, "most": [101, 132, 136], "recent": [101, 136], "uncommit": 101, "pend": 101, "q": [101, 132, 141], "shift": 101, "mathemat": [101, 132], "more": [101, 128, 132, 133, 135, 137, 141], "here": [101, 132, 134, 137, 141], "wikipedia": 101, "org": 101, "wiki": 101, "q_": 101, "number_format": 101, "half": [101, 132], "fraction": 101, "l": 101, "is_lshift_requir": 101, "is_rshift_requir": 101, "do": [101, 112, 135, 141], "val": 101, "void": [101, 133, 134], "reciproc": 101, "quick": 101, "hyperbol": 101, "trace_act": 101, "default_trace_act": 101, "come": [101, 133], "action": 101, "truncat": 101, "closer": 101, "divis": [101, 111], "behavior": [101, 133, 135, 137, 141], "ptype": 101, "rw_mask": 101, "mask": [101, 134], "fragment_d": 101, "index_d": 101, "fragment_a": 101, "index_a": 101, "fragment_b": 101, "index_b": 101, "fragment_c": 101, "index_c": 101, "bmma_sync": 101, "bwmma": 101, "return_unexpect": 101, "nested_cal": 101, "unexpect": 101, "fill_frag": 101, "wmma": [101, 135], "uintimm": 101, "buffer_ptr": 101, "row_major": 101, "column_major": 101, "mma_sync": 101, "dtype_str": 101, "ndim": 101, "arr_dtyp": 101, "elem_offset": 101, "dltensor": 101, "elem_offs": 101, "arr": 101, "struct": 101, "date": 101, "structtyp": 101, "freduce_arg": 101, "allreduc": 101, "insid": [101, 133, 137, 141], "threadblock": 101, "invari": 101, "throw": 101, "tvmgetlasterror": 101, "attrstmt": 101, "exchang": 101, "fetch": [101, 136], "sub": 101, "higher": [101, 132], "caller": 101, "src_lane_idx": 101, "dst_lane_idx": 101, "arbitrari": 101, "vec1": 101, "vec2": 101, "concat": 101, "vec": 101, "high": [101, 133, 134, 135, 137, 138], "low": [101, 132, 134, 135, 137, 138], "langref": 101, "rtype": [101, 112, 121, 130], "warp_group_idx": 102, "condense_rep_var": [103, 104], "get_thread_s": [103, 104], "map_forward_thread": [103, 104], "repeat": [103, 104, 113, 114], "replic": [103, 104], "get_forward_var": [103, 106], "get_input_shap": [103, 106], "get_output_shap": [103, 106], "map_forward_index": [103, 106], "forward_fn": [104, 106], "forward_thread_fn": 104, "forward_index_fn": 104, "encapsul": [104, 137], "forward_var": 104, "forward_thread": 104, "forward_index": 104, "thread_repl": 104, "fine": [104, 134, 135, 137], "grain": [104, 134, 135, 137], "multi": [104, 132, 137], "dimension": [104, 133], "condens": 104, "fold": 104, "longer": [104, 135], "separ": [104, 135], "reflect": 104, "repeat_on_thread": 104, "lower_dim_first": 104, "happen": [104, 133], "index_1d": 105, "basi": 105, "mma_dtyp": 105, "sm90": 105, "cutlass": [105, 132, 135], "extra_arg": 105, "gemmbaseparam": [109, 110, 111, 112], "gemm_mma": [109, 110], "gemmprimitivemma": [109, 110, 112], "bootstrap": 109, "get_warp_s": [110, 111], "infer_block_partit": [110, 111], "fullcol": [110, 111, 132], "fullrow": [110, 111], "compute_warp_partit": [110, 111], "from_warp_partit": [110, 111], "is_full_col": [110, 111], "is_full_row": [110, 111], "is_squar": [110, 111], "to_prime_factor": [110, 111], "gemm_rrr": [110, 112], "gemm_rsr": [110, 112], "gemm_srr": [110, 112], "gemm_ssr": [110, 112], "alreadi": [111, 136], "attempt": 111, "them": [111, 112, 133, 141], "automat": [111, 113, 114, 130, 132, 133, 134, 135, 137], "miss": 111, "inconsist": 111, "num_warp": 111, "m_warp": 111, "n_warp": 111, "fail": [111, 141], "from_block_row_col": 111, "balanc": [111, 135], "distribut": [111, 132], "full": [111, 121, 135], "basic": [112, 134, 137], "mma_emitt": 112, "helper": 112, "etc": [112, 113, 132, 135, 141], "final": [112, 133, 134, 137, 141], "random": 113, "reference_program": 113, "input_tensor": 113, "pre": [113, 136, 140], "consist": [113, 114, 132], "explicitli": [113, 133, 135, 137], "n_warmup": 113, "n_repeat": 113, "millisecond": [113, 114], "averag": 113, "_n_warmup": 114, "_n_repeat": 114, "grad_to_non": 114, "quantil": 114, "fast_flush": 114, "return_mod": 114, "mean": [114, 132], "median": 114, "flush": 114, "gradient": 114, "backward": 114, "percentil": 114, "aggreg": 114, "int4": 116, "source_format": 116, "uint": 116, "source_bit": [116, 118], "storage_dtyp": [116, 118], "with_scal": 116, "with_zero": 116, "zeros_mod": 116, "rescal": 116, "overhead": 116, "decod": 116, "storage_nbit": 116, "By": [116, 133, 134, 135, 137, 138, 141], "scale": [116, 135], "groupsiz": 118, "lowprecision_weight": 118, "qweight": 118, "nbit": 118, "target_dtyp": 118, "interleav": [118, 132], "weight": 118, "_type_": 118, "_description_": 118, "randint": 118, "127": 118, "total_global_byt": [120, 121], "estimated_tim": [120, 121], "tflop": [120, 121], "bandwidth_gbp": [120, 121], "expected_bandwidth_gbp": [120, 121], "expected_tflop": [120, 121], "total_flop": [120, 121], "ir_pass": [120, 121], "transfer": [121, 137], "trillion": 121, "flop": 121, "bandwidth": [121, 137, 141], "gb": 121, "metric": 121, "extract": [121, 128], "save_directori": 122, "tmp": 122, "colormap": 122, "rdpu": 122, "plot": 122, "visual": 122, "cuda_kernels_output_dir": [123, 124], "tir_add_lower_pass": [123, 124], "tir_disable_cs": [123, 124], "tir_disable_storage_rewrit": [123, 124], "tir_disable_vector": [123, 124], "tir_enable_debug": [123, 124], "tir_enable_equiv_terms_in_cs": [123, 124], "tir_merge_static_smem": [123, 124], "tir_noalia": [123, 124], "tir_simplifi": [123, 124], "tir_use_async_copi": [123, 124], "tl_config_index_bitwidth": [123, 124], "tl_debug_merge_shared_memory_alloc": [123, 124], "tl_disable_dynamic_tail_split": [123, 124], "tl_disable_fast_math": [123, 124], "tl_disable_safe_memory_access": [123, 124], "tl_disable_tma_low": [123, 124], "tl_disable_warp_speci": [123, 124], "tl_dynamic_align": [123, 124], "tl_enable_aggressive_shared_memory_merg": [123, 124], "tl_enable_ptxas_verbose_output": [123, 124], "tl_simplifi": [123, 124], "align_byt": 123, "fpass": [123, 125], "bitwidth": [123, 124], "rewrit": [123, 124], "legalizeloopvector": 123, "attach": 123, "enable_aggressive_merg": 123, "insert": [123, 134], "partial": [123, 134, 135, 137], "enable_vector": 123, "kernels_output_dir": 124, "add_lower_pass": 124, "disable_cse_tir": 124, "subexpress": 124, "disable_storage_rewrit": 124, "enable_debug": 124, "enable_equiv_terms_in_cse_tir": 124, "merge_static_smem": 124, "noalia": 124, "alias": 124, "assumpt": 124, "debug_merge_shared_memory_alloc": 124, "tail": [124, 133], "disable_fast_math": 124, "safe": 124, "dynamic_align": 124, "enable_aggressive_shared_memory_merg": 124, "aggress": 124, "enable_ptxas_verbose_output": 124, "ptxa": 124, "simplify_argu": 125, "One": [126, 131, 132, 134], "randn": [126, 131, 135], "uniform": [126, 131], "method_nam": 127, "new_method_nam": 127, "allow_dynam": 128, "exactli": 128, "return_object": 130, "intyp": 131, "tensor_a": 131, "tensor_b": 131, "001": 131, "equal_nan": 131, "check_devic": 131, "check_dtyp": 131, "check_layout": 131, "check_strid": 131, "base_nam": 131, "ref_nam": 131, "assert": 131, "close": [131, 133, 134], "enough": [131, 135], "percentag": 131, "exce": 131, "author": [132, 133, 135, 140, 141], "yu": 132, "cheng": 132, "lei": [132, 135, 141], "wang": [132, 133, 135, 141], "friendli": [132, 135, 137], "significantli": [132, 133, 137, 141], "help": [132, 133, 137, 140, 141], "howev": [132, 133, 134, 135], "still": [132, 133, 134, 135], "master": 132, "techniqu": [132, 133, 138], "better": [132, 135], "leverag": [132, 137, 141], "ll": 132, "demonstr": [132, 133, 134, 135, 137, 140, 141], "deepseek": 132, "latent": 132, "attent": [132, 133, 135], "novel": 132, "signific": 132, "improv": [132, 133, 134, 135, 136, 137], "model": [132, 134, 135, 138], "speed": 132, "sever": [132, 133, 141], "deep": [132, 133, 134], "learn": [132, 133, 134], "triton": [132, 135], "develop": [132, 133, 136, 137, 138], "februari": 132, "2025": 132, "open": 132, "github": [132, 135, 136, 138], "incorpor": [132, 133, 137], "impress": 132, "under": [132, 135], "shown": [132, 135], "figur": [132, 135, 137], "below": [132, 133, 134, 135, 137, 141], "As": 132, "outperform": 132, "accomplish": 132, "80": 132, "eas": 132, "dive": [132, 137, 141], "review": [132, 133], "tradit": 132, "acc_": 132, "scores_max": 132, "scores_scal": 132, "acc_o": 132, "loop_rang": 132, "scores_max_prev": 132, "while": [132, 133, 135, 140], "mha": 132, "gqa": 132, "queri": 132, "challeng": 132, "576": 132, "512": 132, "issu": 132, "becom": 132, "too": 132, "insuffici": 132, "spill": 132, "occur": [132, 141], "impact": 132, "question": 132, "mma_async": 132, "organ": 132, "introduc": [132, 133, 134, 135, 141], "solut": 132, "obtain": 132, "abov": [132, 133], "seem": [132, 137], "complex": [132, 133, 135], "worri": [132, 137], "intricaci": 132, "illustr": [132, 133, 137, 141], "frontend": 132, "vertic": 132, "concret": [132, 133], "acc_s_0": 132, "blockm": 132, "blockn": 132, "consequ": 132, "continu": 132, "s_share": 132, "worth": 132, "approach": [132, 133, 134, 135, 137, 141], "scheme": [132, 140], "nevertheless": [132, 133], "among": 132, "remap": 132, "therebi": 132, "natur": [132, 134], "adjac": 132, "ineffici": [132, 133], "emploi": [132, 137, 138], "diagon": 132, "adjust": 132, "consecut": 132, "overlap": [132, 135], "bank": 132, "servic": 132, "clock": 132, "cycl": 132, "conflict": 132, "forc": 132, "degrad": 132, "rearrang": 132, "fall": 132, "manipul": [132, 137], "alter": 132, "evenli": 132, "particularli": 132, "crucial": 132, "overal": [132, 137], "similarli": 132, "also": [132, 133, 135, 137, 140], "desir": [132, 136, 137, 141], "design": [132, 133, 134, 135, 137, 138], "shield": 132, "intens": [132, 134], "similar": [132, 133, 135], "flashdecod": 132, "small": 132, "fulli": [132, 137], "due": 132, "kv_ctx": 132, "combin": [132, 134], "num_split": 132, "examin": [132, 133, 135, 141], "variat": 132, "explicit": [132, 135], "ident": 132, "manifest": 132, "64kb": 132, "228kb": 132, "care": [132, 133], "softwar": [132, 135], "q_share": 132, "block_h": 132, "q_pe_shar": 132, "pe_dim": 132, "q_local": 132, "q_pe_loc": 132, "flexibl": [132, 135, 137], "absenc": 132, "permit": 132, "visibl": 132, "conduct": 132, "precis": 132, "throughput": [132, 134], "assembli": [132, 135], "aiter": 132, "asm": 132, "98": 132, "76": 132, "concis": [132, 135, 137, 138], "programm": 132, "mitig": 132, "primarili": 132, "nt": 132, "further": [132, 133, 134, 137, 141], "investig": 132, "research": 132, "propos": 132, "pressur": 132, "enhanc": 132, "chenghua": 133, "incomplet": [133, 134, 135], "suggest": [133, 134, 135], "highli": [133, 134, 135, 137], "encourag": [133, 134, 135], "submit": [133, 134, 135], "pr": [133, 134, 135], "wide": 133, "often": [133, 141], "encount": [133, 141], "those": [133, 141], "begin": 133, "tutori": [133, 134, 135, 141], "delv": 133, "deepli": 133, "principl": 133, "broader": 133, "understand": [133, 134, 137], "consult": 133, "overview": [133, 135, 137], "elementwise_add": 133, "b_x": 133, "familiar": 133, "might": [133, 134, 137, 141], "wonder": 133, "your": [133, 134, 135], "focu": [133, 137, 138], "sole": 133, "carefulli": [133, 141], "handcraft": 133, "subsequ": [133, 137], "discuss": [133, 137], "straightforward": [133, 134], "practic": 133, "reader": 133, "start_x": 133, "start_i": 133, "local_i": 133, "local_x": 133, "fix": 133, "replac": 133, "make": [133, 134, 136, 137], "bfloat16_t": 133, "__restrict__": [133, 134], "These": [133, 135, 137], "prevent": 133, "advanc": [133, 135, 141], "involv": [133, 140], "paragraph": 133, "clearer": 133, "2047": 133, "num_per_thread": 133, "__launch_bounds__": [133, 134], "main_kernel": [133, 134], "pragma": 133, "observ": 133, "did": 133, "fact": 133, "could": 133, "simplic": 133, "breviti": 133, "idx": 133, "evid": 133, "beginn": [133, 137], "addition": [133, 137], "transpar": 133, "uint4": [133, 134], "__1": 133, "v_": 133, "v__1": 133, "nv_bfloat162": 133, "aforement": 133, "sometim": [133, 141], "appear": 133, "counterintuit": [133, 137], "effect": [133, 134], "interestingli": 133, "retain": [133, 135], "scenario": 133, "intend": [133, 137, 141], "aha": 133, "convent": 133, "intuit": 133, "But": 133, "what": 133, "num_ele_per_thread": 133, "a_regist": 133, "b_regist": 133, "c_regist": 133, "s_start": 133, "s_end": 133, "ldg": 133, "tid": 133, "stg": 133, "individu": 133, "reson": 133, "u": 133, "now": [133, 134], "8192": 133, "2048": [133, 134], "emerg": [133, 135], "reassign": 133, "evalu": [133, 134], "nv_bfloat16": 133, "namespac": 133, "t_c": 133, "make_gmem_ptr": 133, "make_shap": 133, "t_a": 133, "t_b": 133, "t_c_tile": 133, "local_til": 133, "make_coord": 133, "t_a_til": 133, "t_b_tile": 133, "reg_buffer_a": 133, "make_tensor_lik": 133, "reg_buffer_b": 133, "reg_buffer_c": 133, "reg_c_vector": 133, "recast": 133, "reg_a_vector": 133, "reg_b_vector": 133, "vec_idx": 133, "reg_c_flat": 133, "showcas": [133, 137], "demand": [133, 135, 137], "essenti": [133, 136, 141], "thoroughli": 133, "draw": 133, "inspir": 133, "blog": 133, "zhuanlan": 133, "zhihu": 133, "690703999": 133, "contributor": 134, "botbw": 134, "example_gemv": 134, "py": [134, 140, 141], "plai": 134, "role": 134, "especi": 134, "perspect": 134, "_gemv_naiv": 134, "x_ptr": 134, "a_ptr": 134, "y_ptr": 134, "block_size_k": 134, "constexpr": 134, "program_id": 134, "offs_k": 134, "arang": 134, "a_val": 134, "x_val": 134, "expos": [134, 137], "think": 134, "naive_gemv": 134, "bn": 134, "tn": 134, "c_reg": 134, "bk": 134, "tk": 134, "astyp": 134, "And": 134, "half_t": 134, "__shared__": 134, "__align__": 134, "uchar": 134, "buf_dyn_shmem": 134, "uint64_t": 134, "_mbarrier": 134, "mbarrier_init": 134, "__syncthread": 134, "warpgroup_reg_dealloc": 134, "24": 134, "mbarrier_wait": 134, "16256": 134, "131072": 134, "mbarrier_cp_async_arr": 134, "warpgroup_reg_alloc": 134, "240": 134, "000000e": 134, "00f": 134, "bk_1": 134, "tk_1": 134, "act": 134, "1d": [134, 141], "At": [134, 137], "gain": 134, "veri": [134, 135], "littl": 134, "17": 134, "cubla": [134, 135], "008": 134, "20x": 134, "slower": 134, "exploit": 134, "finer": [134, 135], "naive_splitk_gemv": 134, "a_loc": 134, "b_local": 134, "c_accum": 134, "c_share": 134, "024": 134, "par": [134, 135], "reduce_thread": 134, "splitk_gemv": 134, "tile_k": 134, "less": [134, 136], "bottleneck": 134, "float2": 134, "float4": 134, "splitk_gemv_vector": 134, "max_transaction_size_in_bit": 134, "0084": 134, "outperfrom": 134, "plain": 134, "smem": 134, "atomidadd": 134, "splitk_gemv_vectorized_tvm": 134, "c_reduc": 134, "reduce_scop": 134, "uint64": 134, "uint32": 134, "0069": 134, "hyperparamet": 134, "get_best_config": 134, "get_config": [134, 140], "_config": [134, 140], "itertool": [134, 140], "20": [134, 136, 140], "ref_program": [134, 140], "0067": 134, "red_buf0": 134, "00784": 134, "00773": 134, "16607": 134, "02419": 134, "00809": 134, "00675": 134, "0077344514429569244": 134, "knowledg": 135, "concern": 135, "conceptu": 135, "behind": 135, "necessarili": [135, 141], "drop": 135, "lowest": 135, "somewhat": 135, "almost": 135, "expert": [135, 137], "who": [135, 136, 137], "everi": 135, "flow": [135, 138], "walk": 135, "show": [135, 141], "divers": 135, "comfort": 135, "incur": 135, "fusion": 135, "flash": 135, "easili": 135, "give": 135, "effort": 135, "raw": 135, "strike": 135, "portabl": 135, "reason": [135, 137], "snippet": [135, 137, 141], "comment": 135, "jit_kernel": 135, "ref_c": 135, "assert_clos": 135, "inspect": [135, 141], "cuda_sourc": 135, "though": 135, "slice": 135, "arrang": 135, "arithmet": 135, "hood": 135, "cute": 135, "On": 135, "compos": [135, 137], "back": 135, "mix": [135, 137], "keep": [135, 137], "rest": 135, "vendor": [135, 141], "intern": 135, "4090": 135, "a100": 135, "h100": 135, "mi300x": 135, "1x": 135, "speedup": 135, "rtx": 135, "97x": 135, "0x": 135, "04x": 135, "08x": 135, "25x": 135, "vari": 135, "few": 135, "dispatch": 135, "verifi": [135, 136], "abil": [135, 137], "experi": 135, "meanwhil": 135, "pycuda": 135, "prerequisit": 136, "wheel": 136, "pypi": 136, "ubuntu": 136, "04": 136, "later": 136, "11": 136, "easiest": 136, "lang": [136, 138], "latest": 136, "termin": 136, "choos": [136, 137], "prebuilt": 136, "releas": 136, "page": 136, "dev0": 136, "cu120": 136, "py3": 136, "whl": 136, "repositori": 136, "git": 136, "__version__": 136, "docker": 136, "rm": 136, "ipc": 136, "nvcr": 136, "io": 136, "23": 136, "requisit": 136, "apach": 136, "debian": 136, "apt": 136, "python3": 136, "dev": 136, "setuptool": 136, "zlib1g": 136, "cmake": 136, "libedit": 136, "clone": 136, "recurs": 136, "cd": 136, "patient": 136, "mkdir": 136, "dtvm_prebuild_path": 136, "pythonpath": 136, "tvm_import_python_path": 136, "3rd": 136, "parti": 136, "prefer": 136, "3rdparti": 136, "echo": 136, "use_llvm": 136, "ON": 136, "use_cuda": 136, "use_rocm": 136, "libtilelang": 136, "libtvm": 136, "libtvm_runtim": 136, "bash": 136, "install_cuda": 136, "sh": 136, "install_amd": 136, "offici": 136, "cu121": 136, "stabl": 136, "thei": [136, 137], "ideal": [136, 137], "bugfix": 136, "hasn": 136, "been": [136, 140], "depict": 137, "resid": 137, "whichev": 137, "suit": 137, "unawar": 137, "independ": 137, "goal": 137, "hierarchi": 137, "consider": 137, "predefin": 137, "made": 137, "experienc": 137, "characterist": 137, "offer": 137, "grant": 137, "tailor": 137, "expertis": 137, "expand": [137, 141], "intermedi": [137, 141], "placement": 137, "particular": 137, "heart": 137, "notion": 137, "portion": 137, "unit": 137, "easier": 137, "hallmark": 137, "place": 137, "rather": 137, "leav": 137, "opaqu": 137, "face": 137, "physic": 137, "chip": 137, "abund": 137, "deriv": 137, "furthermor": 137, "streamlin": 138, "dequant": 138, "linearattent": 138, "underli": [138, 141], "sacrif": 138, "art": 138, "instal": 138, "pip": 138, "nightli": 138, "brief": 138, "introduct": 138, "flashmla": 138, "hopper": 138, "stai": 139, "app": 139, "yyttt6": 140, "identifi": 140, "readabl": 140, "example_gemm": 140, "thread_num": 140, "enable_raster": 140, "combinatori": 140, "with_rol": 140, "out_c": 140, "lightweight": 140, "rank": 140, "orient": 140, "carve_templ": 140, "roller_hint": 140, "block_row": 140, "block_col": 140, "rasterization_plan": 140, "hereaft": 141, "undergo": 141, "roughli": 141, "categori": 141, "incorrect": 141, "theoret": 141, "focus": 141, "problem": 141, "nsight": 141, "rocprof": 141, "futur": 141, "materi": 141, "again": 141, "eventu": 141, "jump": 141, "caus": 141, "35": 141, "shape_q": 141, "codegen_cuda": 141, "1257": 141, "ramp": 141, "somewher": 141, "rt_mod_cuda": 141, "std": 141, "cg": 141, "registri": 141, "tilelang_callback_cuda_postproc": 141, "henc": 141, "intercept": 141, "cuda_runtim": 141, "Be": 141, "mind": 141, "concurr": 141, "debug_print_buff": 141, "debug_print_buffer_condit": 141, "debug_print_value_condit": 141, "debug_print_register_fil": 141, "prefix": 141, "debug_print_msg": 141, "someth": 141, "hello": 141, "world": 141, "diagnos": 141, "deviat": 141, "prong": 141, "suffici": 141, "occup": 141, "aspect": 141}, "objects": {"": [[1, 0, 0, "-", "tilelang"]], "tilelang": [[1, 1, 1, "", "TqdmLoggingHandler"], [2, 0, 0, "-", "autotuner"], [6, 0, 0, "-", "cache"], [9, 0, 0, "-", "carver"], [41, 0, 0, "-", "common"], [43, 0, 0, "-", "contrib"], [50, 0, 0, "-", "engine"], [55, 0, 0, "-", "env"], [56, 0, 0, "-", "intrinsics"], [62, 0, 0, "-", "jit"], [79, 0, 0, "-", "language"], [103, 0, 0, "-", "layout"], [108, 0, 0, "-", "math"], [109, 0, 0, "-", "primitives"], [113, 0, 0, "-", "profiler"], [115, 0, 0, "-", "quantize"], [1, 4, 1, "", "set_log_level"], [120, 0, 0, "-", "tools"], [123, 0, 0, "-", "transform"], [126, 0, 0, "-", "utils"]], "tilelang.TqdmLoggingHandler": [[1, 2, 1, "", "emit"]], "tilelang.autotuner": [[3, 0, 0, "-", "capture"], [4, 0, 0, "-", "param"], [5, 0, 0, "-", "tuner"]], "tilelang.autotuner.capture": [[3, 1, 1, "", "AutotuneInputsCapture"], [3, 1, 1, "", "CaptureStack"], [3, 4, 1, "", "get_autotune_inputs"], [3, 4, 1, "", "set_autotune_inputs"]], "tilelang.autotuner.capture.AutotuneInputsCapture": [[3, 3, 1, "", "tensors"]], "tilelang.autotuner.capture.CaptureStack": [[3, 2, 1, "", "pop"], [3, 2, 1, "", "push"], [3, 2, 1, "", "size"], [3, 2, 1, "", "top"]], "tilelang.autotuner.param": [[4, 1, 1, "", "AutotuneResult"], [4, 1, 1, "", "CompileArgs"], [4, 1, 1, "", "ProfileArgs"]], "tilelang.autotuner.param.AutotuneResult": [[4, 3, 1, "id0", "config"], [4, 3, 1, "id1", "func"], [4, 3, 1, "id2", "kernel"], [4, 3, 1, "id3", "latency"], [4, 3, 1, "id4", "libcode"], [4, 2, 1, "", "load_from_disk"], [4, 3, 1, "id5", "ref_latency"], [4, 2, 1, "", "save_to_disk"]], "tilelang.autotuner.param.CompileArgs": [[4, 2, 1, "", "compile_program"], [4, 3, 1, "id6", "execution_backend"], [4, 3, 1, "", "out_idx"], [4, 3, 1, "id7", "pass_configs"], [4, 3, 1, "id8", "target"], [4, 3, 1, "id9", "target_host"], [4, 3, 1, "id10", "verbose"]], "tilelang.autotuner.param.ProfileArgs": [[4, 3, 1, "id14", "atol"], [4, 3, 1, "id15", "cache_input_tensors"], [4, 3, 1, "id16", "manual_check_prog"], [4, 3, 1, "id17", "max_mismatched_ratio"], [4, 3, 1, "", "out_idx"], [4, 3, 1, "id18", "ref_prog"], [4, 3, 1, "id19", "rep"], [4, 3, 1, "id20", "rtol"], [4, 3, 1, "id21", "skip_check"], [4, 3, 1, "id22", "supply_prog"], [4, 3, 1, "id23", "supply_type"], [4, 3, 1, "id24", "timeout"], [4, 3, 1, "id25", "warmup"]], "tilelang.autotuner.tuner": [[5, 1, 1, "", "AutoTuner"], [5, 5, 1, "", "TimeoutException"], [5, 4, 1, "", "autotune"], [5, 4, 1, "", "get_available_cpu_count"], [5, 4, 1, "", "run_with_timeout"], [5, 4, 1, "", "timeout_handler"]], "tilelang.autotuner.tuner.AutoTuner": [[5, 3, 1, "", "cache_dir"], [5, 3, 1, "", "compile_args"], [5, 2, 1, "", "from_kernel"], [5, 2, 1, "", "generate_cache_key"], [5, 3, 1, "", "profile_args"], [5, 2, 1, "", "run"], [5, 2, 1, "", "set_compile_args"], [5, 2, 1, "", "set_kernel_parameters"], [5, 2, 1, "", "set_profile_args"]], "tilelang.cache": [[6, 4, 1, "", "cached"], [6, 4, 1, "", "clear_cache"], [6, 4, 1, "", "get_cache_dir"], [7, 0, 0, "-", "kernel_cache"], [6, 4, 1, "", "set_cache_dir"], [8, 0, 0, "-", "tuner_cache"]], "tilelang.cache.kernel_cache": [[7, 1, 1, "", "KernelCache"]], "tilelang.cache.kernel_cache.KernelCache": [[7, 3, 1, "", "cache_dir"], [7, 2, 1, "", "cached"], [7, 2, 1, "", "clear_cache"], [7, 3, 1, "", "execution_backend"], [7, 2, 1, "", "get_cache_dir"], [7, 2, 1, "", "set_cache_dir"]], "tilelang.cache.tuner_cache": [[8, 1, 1, "", "AutoTunerCache"]], "tilelang.cache.tuner_cache.AutoTunerCache": [[8, 3, 1, "", "cache_dir"], [8, 2, 1, "", "cached"], [8, 2, 1, "", "clear_cache"], [8, 2, 1, "", "get_cache_dir"], [8, 2, 1, "", "set_cache_dir"]], "tilelang.carver": [[10, 0, 0, "-", "analysis"], [11, 0, 0, "-", "arch"], [18, 0, 0, "-", "common_schedules"], [19, 0, 0, "-", "matmul_analysis"], [20, 0, 0, "-", "roller"], [32, 0, 0, "-", "template"], [40, 0, 0, "-", "utils"]], "tilelang.carver.analysis": [[10, 1, 1, "", "BlockInfo"], [10, 1, 1, "", "IterInfo"], [10, 4, 1, "", "check_func_with_dynamic"], [10, 4, 1, "", "collect_block_iter_vars_used_in_access_region"], [10, 4, 1, "", "collect_vars_used_in_prim_expr"], [10, 4, 1, "", "detect_dominant_read"], [10, 4, 1, "", "find_var_from_func"], [10, 4, 1, "", "get_coalesced_veclen"], [10, 4, 1, "", "get_max_shared_memory_per_block"], [10, 4, 1, "", "get_max_threads_per_block"], [10, 4, 1, "", "get_reduction_blocks"], [10, 4, 1, "", "get_root_block"], [10, 4, 1, "", "is_broadcast_epilogue"], [10, 4, 1, "", "normalize_prim_func"]], "tilelang.carver.analysis.BlockInfo": [[10, 3, 1, "", "block_rv"], [10, 2, 1, "", "dom"], [10, 2, 1, "", "dom_kind"], [10, 2, 1, "", "is_elementwise"], [10, 2, 1, "", "is_gemm"], [10, 2, 1, "", "is_gemv"], [10, 2, 1, "", "is_injective"], [10, 2, 1, "", "is_reduction"], [10, 3, 1, "", "iters"], [10, 3, 1, "", "name"]], "tilelang.carver.analysis.IterInfo": [[10, 6, 1, "", "dom"], [10, 3, 1, "", "kind"], [10, 3, 1, "", "loop_rv"], [10, 3, 1, "", "var"]], "tilelang.carver.arch": [[12, 0, 0, "-", "arch_base"], [11, 4, 1, "", "auto_infer_current_arch"], [13, 0, 0, "-", "cdna"], [14, 0, 0, "-", "cpu"], [15, 0, 0, "-", "cuda"], [16, 0, 0, "-", "driver"], [11, 4, 1, "", "get_arch"]], "tilelang.carver.arch.arch_base": [[12, 1, 1, "", "TileDevice"]], "tilelang.carver.arch.arch_base.TileDevice": [[12, 2, 1, "", "get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.cdna": [[13, 1, 1, "", "CDNA"], [13, 4, 1, "", "is_cdna_arch"]], "tilelang.carver.arch.cpu": [[14, 1, 1, "", "CPU"], [14, 4, 1, "", "is_cpu_arch"]], "tilelang.carver.arch.cuda": [[15, 1, 1, "", "CUDA"], [15, 1, 1, "", "TensorInstruction"], [15, 4, 1, "", "check_sm_version"], [15, 4, 1, "", "has_mma_support"], [15, 4, 1, "", "is_ada_arch"], [15, 4, 1, "", "is_ampere_arch"], [15, 4, 1, "", "is_cuda_arch"], [15, 4, 1, "", "is_hopper_arch"], [15, 4, 1, "", "is_tensorcore_supported_precision"], [15, 4, 1, "", "is_volta_arch"]], "tilelang.carver.arch.cuda.CUDA": [[15, 2, 1, "", "get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.driver": [[17, 0, 0, "-", "cuda_driver"]], "tilelang.carver.arch.driver.cuda_driver": [[17, 1, 1, "", "cudaDeviceProp"], [17, 4, 1, "", "get_cuda_device_properties"], [17, 4, 1, "", "get_device_attribute"], [17, 4, 1, "", "get_device_name"], [17, 4, 1, "", "get_max_dynamic_shared_size_bytes"], [17, 4, 1, "", "get_num_sms"], [17, 4, 1, "", "get_persisting_l2_cache_max_size"], [17, 4, 1, "", "get_registers_per_block"], [17, 4, 1, "", "get_shared_memory_per_block"]], "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp": [[17, 3, 1, "", "ECCEnabled"], [17, 3, 1, "", "asyncEngineCount"], [17, 3, 1, "", "canMapHostMemory"], [17, 3, 1, "", "clockRate"], [17, 3, 1, "", "computeMode"], [17, 3, 1, "", "concurrentKernels"], [17, 3, 1, "", "deviceOverlap"], [17, 3, 1, "", "globalL1CacheSupported"], [17, 3, 1, "", "integrated"], [17, 3, 1, "", "isMultiGpuBoard"], [17, 3, 1, "", "kernelExecTimeoutEnabled"], [17, 3, 1, "", "l2CacheSize"], [17, 3, 1, "", "localL1CacheSupported"], [17, 3, 1, "", "luid"], [17, 3, 1, "", "luidDeviceNodeMask"], [17, 3, 1, "", "major"], [17, 3, 1, "", "managedMemory"], [17, 3, 1, "", "maxGridSize"], [17, 3, 1, "", "maxSurface1D"], [17, 3, 1, "", "maxSurface1DLayered"], [17, 3, 1, "", "maxSurface2D"], [17, 3, 1, "", "maxSurface2DLayered"], [17, 3, 1, "", "maxSurface3D"], [17, 3, 1, "", "maxSurfaceCubemap"], [17, 3, 1, "", "maxSurfaceCubemapLayered"], [17, 3, 1, "", "maxTexture1D"], [17, 3, 1, "", "maxTexture1DLayered"], [17, 3, 1, "", "maxTexture1DLinear"], [17, 3, 1, "", "maxTexture1DMipmap"], [17, 3, 1, "", "maxTexture2D"], [17, 3, 1, "", "maxTexture2DGather"], [17, 3, 1, "", "maxTexture2DLayered"], [17, 3, 1, "", "maxTexture2DLinear"], [17, 3, 1, "", "maxTexture2DMipmap"], [17, 3, 1, "", "maxTexture3D"], [17, 3, 1, "", "maxTexture3DAlt"], [17, 3, 1, "", "maxTextureCubemap"], [17, 3, 1, "", "maxTextureCubemapLayered"], [17, 3, 1, "", "maxThreadsDim"], [17, 3, 1, "", "maxThreadsPerBlock"], [17, 3, 1, "", "maxThreadsPerMultiProcessor"], [17, 3, 1, "", "memPitch"], [17, 3, 1, "", "memoryBusWidth"], [17, 3, 1, "", "memoryClockRate"], [17, 3, 1, "", "minor"], [17, 3, 1, "", "multiGpuBoardGroupID"], [17, 3, 1, "", "multiProcessorCount"], [17, 3, 1, "", "name"], [17, 3, 1, "", "pciBusID"], [17, 3, 1, "", "pciDeviceID"], [17, 3, 1, "", "pciDomainID"], [17, 3, 1, "", "persistingL2CacheMaxSize"], [17, 3, 1, "", "regsPerBlock"], [17, 3, 1, "", "regsPerMultiprocessor"], [17, 3, 1, "", "reserved"], [17, 3, 1, "", "reserved1"], [17, 3, 1, "", "reserved2"], [17, 3, 1, "", "sharedMemPerBlock"], [17, 3, 1, "", "sharedMemPerMultiprocessor"], [17, 3, 1, "", "streamPrioritiesSupported"], [17, 3, 1, "", "surfaceAlignment"], [17, 3, 1, "", "tccDriver"], [17, 3, 1, "", "textureAlignment"], [17, 3, 1, "", "texturePitchAlignment"], [17, 3, 1, "", "totalConstMem"], [17, 3, 1, "", "totalGlobalMem"], [17, 3, 1, "", "unifiedAddressing"], [17, 3, 1, "", "uuid"], [17, 3, 1, "", "warpSize"]], "tilelang.carver.common_schedules": [[18, 4, 1, "", "get_block"], [18, 4, 1, "", "get_output_blocks"], [18, 4, 1, "", "try_inline"], [18, 4, 1, "", "try_inline_contiguous_spatial"]], "tilelang.carver.matmul_analysis": [[19, 1, 1, "", "IterKind"], [19, 1, 1, "", "IterTrait"], [19, 4, 1, "", "auto_inline_consumer_chain"], [19, 4, 1, "", "auto_inline_consumers"], [19, 4, 1, "", "auto_inline_producers"], [19, 4, 1, "", "collect_vars_from_expr"], [19, 4, 1, "", "detect_iter_traits"], [19, 4, 1, "", "find_arg_idx_from_buffer_chain"], [19, 4, 1, "", "find_first_similar_buffer"], [19, 4, 1, "", "find_first_similar_region"], [19, 4, 1, "", "find_last_producer_from_buffer"], [19, 4, 1, "", "get_dequantize_block"], [19, 4, 1, "", "get_in_out_dtypes"], [19, 4, 1, "", "get_index_map"], [19, 4, 1, "", "get_ladder_stage3_map"], [19, 4, 1, "", "get_propagate_map"], [19, 4, 1, "", "get_tensorized_func_and_tags"], [19, 4, 1, "", "inline_transpose_block"], [19, 4, 1, "", "is_identity_block"], [19, 4, 1, "", "is_identity_or_transpose_block"], [19, 4, 1, "", "is_transpose_block"], [19, 4, 1, "", "layout_propagate_chain"], [19, 4, 1, "", "make_iter_fusion_index_map"], [19, 4, 1, "", "normalize_to_matmul"]], "tilelang.carver.matmul_analysis.IterKind": [[19, 3, 1, "", "kIter_I"], [19, 3, 1, "", "kIter_J"], [19, 3, 1, "", "kIter_K"], [19, 3, 1, "", "kIter_S"], [19, 3, 1, "", "kIter_T"]], "tilelang.carver.matmul_analysis.IterTrait": [[19, 3, 1, "", "extent"], [19, 3, 1, "", "kind"]], "tilelang.carver.roller": [[21, 0, 0, "-", "bestfit"], [22, 0, 0, "-", "hint"], [23, 0, 0, "-", "node"], [24, 0, 0, "-", "policy"], [28, 0, 0, "-", "rasterization"], [29, 0, 0, "-", "shape_inference"]], "tilelang.carver.roller.bestfit": [[21, 1, 1, "", "BestFit"], [21, 1, 1, "", "Block"]], "tilelang.carver.roller.bestfit.BestFit": [[21, 2, 1, "", "free"], [21, 2, 1, "", "malloc"]], "tilelang.carver.roller.bestfit.Block": [[21, 2, 1, "", "merge"], [21, 2, 1, "", "size"]], "tilelang.carver.roller.hint": [[22, 1, 1, "", "Hint"], [22, 1, 1, "", "IntrinInfo"], [22, 1, 1, "", "Stride"], [22, 1, 1, "", "TensorCoreExtraConfig"], [22, 1, 1, "", "TileDict"]], "tilelang.carver.roller.hint.Hint": [[22, 2, 1, "", "complete_config"], [22, 2, 1, "", "from_dict"], [22, 6, 1, "", "raxis_order"], [22, 6, 1, "", "step"], [22, 2, 1, "", "tensorcore_legalization"], [22, 2, 1, "", "to_dict"]], "tilelang.carver.roller.hint.IntrinInfo": [[22, 6, 1, "", "inter_transform_a"], [22, 6, 1, "", "inter_transform_b"], [22, 2, 1, "", "is_input_8bit"], [22, 6, 1, "", "smooth_a"], [22, 6, 1, "", "smooth_b"]], "tilelang.carver.roller.hint.Stride": [[22, 6, 1, "", "ax"], [22, 2, 1, "", "compute_elements_from_shape"], [22, 2, 1, "", "compute_strides_from_shape"], [22, 2, 1, "", "is_valid"], [22, 6, 1, "", "stride"]], "tilelang.carver.roller.hint.TileDict": [[22, 2, 1, "", "get_rstep"], [22, 2, 1, "", "get_tile"]], "tilelang.carver.roller.node": [[23, 1, 1, "", "BlockAnalyzer"], [23, 1, 1, "", "Edge"], [23, 1, 1, "", "Node"], [23, 1, 1, "", "OutputNode"], [23, 1, 1, "", "PlaceHolderNode"], [23, 1, 1, "", "PrimFuncNode"], [23, 4, 1, "", "find_topo_sort"], [23, 4, 1, "", "find_topo_sort_priority"], [23, 4, 1, "", "pre_order_traverse"], [23, 4, 1, "", "topo_order"]], "tilelang.carver.roller.node.BlockAnalyzer": [[23, 2, 1, "", "get_block_info"], [23, 2, 1, "", "get_block_name"], [23, 2, 1, "", "get_buffers"], [23, 2, 1, "", "get_consumer_blocks"], [23, 2, 1, "", "get_input_buffers"], [23, 2, 1, "", "get_output_buffers"], [23, 2, 1, "", "get_producer_blocks"], [23, 2, 1, "", "get_reduce_axis"], [23, 2, 1, "", "get_spatial_axis"]], "tilelang.carver.roller.node.Edge": [[23, 3, 1, "", "dst_id"], [23, 3, 1, "", "dst_node"], [23, 3, 1, "", "src_id"], [23, 3, 1, "", "src_node"]], "tilelang.carver.roller.node.Node": [[23, 2, 1, "", "add_tag"], [23, 2, 1, "", "get_dtype"], [23, 2, 1, "", "get_ir"], [23, 2, 1, "", "get_shape"], [23, 2, 1, "", "get_tag"], [23, 6, 1, "", "inputs"], [23, 2, 1, "", "is_output"], [23, 2, 1, "", "is_placeholder"], [23, 2, 1, "", "num_outputs"], [23, 6, 1, "", "outputs"], [23, 2, 1, "", "set_dtype"], [23, 2, 1, "", "set_inputs"], [23, 2, 1, "", "set_outputs"], [23, 2, 1, "", "set_shape"], [23, 2, 1, "", "set_tag"], [23, 2, 1, "", "update_tags"]], "tilelang.carver.roller.node.OutputNode": [[23, 2, 1, "", "get_ir"], [23, 2, 1, "", "is_output"]], "tilelang.carver.roller.node.PlaceHolderNode": [[23, 2, 1, "", "get_ir"], [23, 2, 1, "", "is_placeholder"]], "tilelang.carver.roller.node.PrimFuncNode": [[23, 2, 1, "", "extent_wrapper"], [23, 2, 1, "", "footprint"], [23, 2, 1, "", "get_buffer_dtype"], [23, 2, 1, "", "get_input_buffers"], [23, 2, 1, "", "get_opt_shape"], [23, 2, 1, "", "get_reduce_inputs_dtype"], [23, 2, 1, "", "get_space_dim"], [23, 2, 1, "", "infer_tensorcore_axis"], [23, 2, 1, "", "propagate"], [23, 2, 1, "", "propagate_inputs"], [23, 2, 1, "", "propagate_inputs_on_reduction"], [23, 2, 1, "", "propagate_outputs"], [23, 2, 1, "", "propagate_reduction_inputs"], [23, 2, 1, "", "set_dtype"]], "tilelang.carver.roller.policy": [[25, 0, 0, "-", "common"], [26, 0, 0, "-", "default"], [27, 0, 0, "-", "tensorcore"]], "tilelang.carver.roller.policy.common": [[25, 4, 1, "", "coalesced_factor"], [25, 4, 1, "", "coalesced_tensor_shape"], [25, 4, 1, "", "factorize"], [25, 4, 1, "", "get_all_factors"]], "tilelang.carver.roller.policy.default": [[26, 1, 1, "", "DefaultPolicy"]], "tilelang.carver.roller.policy.default.DefaultPolicy": [[26, 3, 1, "", "arch"], [26, 2, 1, "", "assign_block_size"], [26, 2, 1, "", "check_tile_shape_isvalid"], [26, 2, 1, "", "compute_node_stride_map"], [26, 2, 1, "", "compute_tile_dict"], [26, 2, 1, "", "compute_workload_per_item"], [26, 2, 1, "", "dfs_smem_tile"], [26, 2, 1, "", "emit_config"], [26, 2, 1, "", "from_output_nodes"], [26, 2, 1, "", "from_prim_func"], [26, 3, 1, "", "func"], [26, 2, 1, "", "get_base_tile"], [26, 2, 1, "", "get_block_size"], [26, 2, 1, "", "get_node_reduce_step_candidates"], [26, 2, 1, "", "infer_node_smem_usage"], [26, 3, 1, "", "nodes"], [26, 2, 1, "", "plan_rasterization"], [26, 2, 1, "", "recommend_block_size"], [26, 2, 1, "", "score_block_size"], [26, 3, 1, "", "tags"]], "tilelang.carver.roller.policy.tensorcore": [[27, 1, 1, "", "TensorCorePolicy"]], "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy": [[27, 3, 1, "", "block_reduction_depth"], [27, 2, 1, "", "check_tile_shape_isvalid"], [27, 2, 1, "", "compute_node_stride_map"], [27, 2, 1, "", "get_node_reduce_step_candidates"], [27, 2, 1, "", "infer_node_smem_usage"], [27, 3, 1, "", "pipeline_stage"], [27, 2, 1, "", "plan_rasterization"], [27, 3, 1, "", "use_async_copy"], [27, 3, 1, "", "wmma_k"]], "tilelang.carver.roller.rasterization": [[28, 1, 1, "", "NoRasterization"], [28, 1, 1, "", "Rasterization"], [28, 1, 1, "", "Rasterization2DColumn"], [28, 1, 1, "", "Rasterization2DRow"]], "tilelang.carver.roller.rasterization.NoRasterization": [[28, 2, 1, "", "get_code"]], "tilelang.carver.roller.rasterization.Rasterization": [[28, 2, 1, "", "get_code"], [28, 6, 1, "", "panel_width"], [28, 3, 1, "", "panel_width_"]], "tilelang.carver.roller.rasterization.Rasterization2DColumn": [[28, 2, 1, "", "get_code"], [28, 2, 1, "", "get_device_function"]], "tilelang.carver.roller.rasterization.Rasterization2DRow": [[28, 2, 1, "", "get_code"]], "tilelang.carver.roller.shape_inference": [[30, 0, 0, "-", "common"], [31, 0, 0, "-", "tir"]], "tilelang.carver.roller.shape_inference.common": [[30, 1, 1, "", "InputShapeInference"], [30, 1, 1, "", "Statement"]], "tilelang.carver.roller.shape_inference.common.InputShapeInference": [[30, 2, 1, "", "get_input_exprs"], [30, 2, 1, "", "infer"]], "tilelang.carver.roller.shape_inference.tir": [[31, 1, 1, "", "DependencyAnalysis"], [31, 1, 1, "", "InputShapeInference"], [31, 1, 1, "", "Statement"], [31, 1, 1, "", "TensorDepNode"], [31, 4, 1, "", "get_analyzer_by_tir"], [31, 4, 1, "", "region_exist_in_list"], [31, 4, 1, "", "walk_indice"]], "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis": [[31, 2, 1, "", "analyze"], [31, 2, 1, "", "find_path_from_source"], [31, 2, 1, "", "get_or_create_node"], [31, 2, 1, "", "print_dependencies"], [31, 2, 1, "", "traverse_dependencies"]], "tilelang.carver.roller.shape_inference.tir.InputShapeInference": [[31, 2, 1, "", "construct_dependency_target"], [31, 2, 1, "", "get_input_exprs"], [31, 2, 1, "", "infer"]], "tilelang.carver.roller.shape_inference.tir.Statement": [[31, 2, 1, "", "make_reverse"]], "tilelang.carver.roller.shape_inference.tir.TensorDepNode": [[31, 2, 1, "", "add_next"], [31, 2, 1, "", "add_prev"], [31, 2, 1, "", "deduplicate"]], "tilelang.carver.template": [[33, 0, 0, "-", "base"], [34, 0, 0, "-", "conv"], [35, 0, 0, "-", "elementwise"], [36, 0, 0, "-", "flashattention"], [37, 0, 0, "-", "gemv"], [38, 0, 0, "-", "general_reduce"], [39, 0, 0, "-", "matmul"]], "tilelang.carver.template.base": [[33, 1, 1, "", "BaseTemplate"]], "tilelang.carver.template.base.BaseTemplate": [[33, 6, 1, "", "arch"], [33, 2, 1, "", "equivalent_function"], [33, 2, 1, "", "get_hardware_aware_configs"], [33, 2, 1, "", "has_arch"], [33, 2, 1, "", "initialize_function"], [33, 2, 1, "", "is_ampere_arch"], [33, 2, 1, "", "is_cdna_arch"], [33, 2, 1, "", "is_volta_arch"], [33, 6, 1, "", "output_nodes"], [33, 2, 1, "", "recommend_hints"], [33, 2, 1, "", "set_function"], [33, 2, 1, "", "set_output_nodes"], [33, 2, 1, "", "with_arch"]], "tilelang.carver.template.conv": [[34, 1, 1, "", "ConvTemplate"]], "tilelang.carver.template.conv.ConvTemplate": [[34, 3, 1, "id0", "C"], [34, 3, 1, "id1", "D"], [34, 3, 1, "id2", "F"], [34, 3, 1, "id3", "H"], [34, 3, 1, "id4", "K"], [34, 3, 1, "id5", "N"], [34, 3, 1, "id6", "P"], [34, 3, 1, "id7", "S"], [34, 3, 1, "id8", "W"], [34, 3, 1, "id9", "accum_dtype"], [34, 6, 1, "", "class_attributes"], [34, 2, 1, "", "get_hardware_aware_configs"], [34, 3, 1, "id10", "in_dtype"], [34, 2, 1, "", "initialize_function"], [34, 3, 1, "id11", "out_dtype"], [34, 2, 1, "", "params_as_dict"], [34, 3, 1, "id12", "with_bias"]], "tilelang.carver.template.elementwise": [[35, 1, 1, "", "ElementwiseTemplate"]], "tilelang.carver.template.elementwise.ElementwiseTemplate": [[35, 6, 1, "", "class_attributes"], [35, 3, 1, "id0", "dtype"], [35, 2, 1, "", "get_hardware_aware_configs"], [35, 2, 1, "", "initialize_function"], [35, 2, 1, "", "params_as_dict"], [35, 3, 1, "id1", "shape"]], "tilelang.carver.template.flashattention": [[36, 1, 1, "", "FlashAttentionTemplate"]], "tilelang.carver.template.flashattention.FlashAttentionTemplate": [[36, 3, 1, "", "accum_dtype"], [36, 3, 1, "", "batch_size"], [36, 6, 1, "", "class_attributes"], [36, 2, 1, "", "get_hardware_aware_configs"], [36, 3, 1, "", "head_dim"], [36, 3, 1, "", "in_dtype"], [36, 2, 1, "", "initialize_function"], [36, 3, 1, "", "is_causal"], [36, 3, 1, "", "num_heads"], [36, 3, 1, "", "out_dtype"], [36, 2, 1, "", "params_as_dict"], [36, 3, 1, "", "seq_kv_length"], [36, 3, 1, "", "seq_length"]], "tilelang.carver.template.gemv": [[37, 1, 1, "", "GEMVTemplate"]], "tilelang.carver.template.gemv.GEMVTemplate": [[37, 3, 1, "", "K"], [37, 3, 1, "", "N"], [37, 3, 1, "", "accum_dtype"], [37, 6, 1, "", "class_attributes"], [37, 2, 1, "", "get_hardware_aware_configs"], [37, 3, 1, "", "in_dtype"], [37, 2, 1, "", "initialize_function"], [37, 3, 1, "", "out_dtype"], [37, 2, 1, "", "params_as_dict"], [37, 3, 1, "", "trans_B"], [37, 3, 1, "", "with_bias"]], "tilelang.carver.template.general_reduce": [[38, 1, 1, "", "GeneralReductionTemplate"]], "tilelang.carver.template.general_reduce.GeneralReductionTemplate": [[38, 6, 1, "", "class_attributes"], [38, 3, 1, "", "dtype"], [38, 2, 1, "", "get_hardware_aware_configs"], [38, 2, 1, "", "initialize_function"], [38, 2, 1, "", "params_as_dict"], [38, 3, 1, "", "shape"], [38, 3, 1, "", "structure"]], "tilelang.carver.template.matmul": [[39, 1, 1, "", "MatmulTemplate"]], "tilelang.carver.template.matmul.MatmulTemplate": [[39, 3, 1, "id0", "K"], [39, 3, 1, "id1", "M"], [39, 3, 1, "id2", "N"], [39, 3, 1, "id3", "accum_dtype"], [39, 6, 1, "", "class_attributes"], [39, 2, 1, "", "get_hardware_aware_configs"], [39, 3, 1, "id4", "in_dtype"], [39, 2, 1, "", "initialize_function"], [39, 3, 1, "id5", "out_dtype"], [39, 2, 1, "", "params_as_dict"], [39, 3, 1, "id6", "trans_A"], [39, 3, 1, "id7", "trans_B"], [39, 3, 1, "id8", "with_bias"]], "tilelang.carver.utils": [[40, 4, 1, "", "get_rasterization_code"], [40, 4, 1, "", "get_roller_hints_from_func"], [40, 4, 1, "", "get_roller_hints_from_output_nodes"], [40, 4, 1, "", "retrieve_func_from_module"]], "tilelang.common": [[42, 0, 0, "-", "transform_kind"]], "tilelang.common.transform_kind": [[42, 1, 1, "", "TransformKind"]], "tilelang.common.transform_kind.TransformKind": [[42, 3, 1, "", "InterWarpTransform"], [42, 3, 1, "", "IntraWarpTransform"], [42, 3, 1, "", "LDMatrixTransform"], [42, 3, 1, "", "NonTransform"], [42, 2, 1, "", "is_inter_warp_transform"], [42, 2, 1, "", "is_intra_warp_transform"], [42, 2, 1, "", "is_ld_matrix_transform"], [42, 2, 1, "", "is_non_transform"]], "tilelang.contrib": [[44, 0, 0, "-", "cc"], [45, 0, 0, "-", "dlpack"], [46, 0, 0, "-", "hipcc"], [47, 0, 0, "-", "nvcc"], [49, 0, 0, "-", "rocm"]], "tilelang.contrib.cc": [[44, 4, 1, "", "create_executable"], [44, 4, 1, "", "create_shared"], [44, 4, 1, "", "create_staticlib"], [44, 4, 1, "", "cross_compiler"], [44, 4, 1, "", "get_cc"], [44, 4, 1, "", "get_cplus_compiler"], [44, 4, 1, "", "get_global_symbol_section_map"], [44, 4, 1, "", "get_target_by_dump_machine"]], "tilelang.contrib.dlpack": [[45, 4, 1, "", "convert_func"], [45, 4, 1, "", "to_pytorch_func"]], "tilelang.contrib.hipcc": [[46, 4, 1, "", "compile_hip"]], "tilelang.contrib.nvcc": [[47, 4, 1, "", "callback_libdevice_path"], [47, 4, 1, "", "compile_cuda"], [47, 4, 1, "", "find_cuda_path"], [47, 4, 1, "", "get_cuda_version"], [47, 4, 1, "", "get_nvcc_compiler"], [47, 4, 1, "", "have_cudagraph"], [47, 4, 1, "", "have_fp16"], [47, 4, 1, "", "have_int8"], [47, 4, 1, "", "have_tensorcore"], [47, 4, 1, "", "parse_compute_version"]], "tilelang.contrib.rocm": [[49, 4, 1, "", "find_lld"], [49, 4, 1, "", "find_rocm_path"], [49, 4, 1, "", "have_matrixcore"], [49, 4, 1, "", "parse_compute_version"], [49, 4, 1, "", "rocm_link"]], "tilelang.engine": [[51, 0, 0, "-", "callback"], [52, 0, 0, "-", "lower"], [53, 0, 0, "-", "param"], [54, 0, 0, "-", "phase"]], "tilelang.engine.callback": [[51, 4, 1, "", "register_cuda_postproc"], [51, 4, 1, "", "register_cuda_postproc_callback"], [51, 4, 1, "", "register_hip_postproc"], [51, 4, 1, "", "register_hip_postproc_callback"]], "tilelang.engine.lower": [[52, 4, 1, "", "canon_target_host"], [52, 4, 1, "", "device_codegen"], [52, 4, 1, "", "device_codegen_without_compile"], [52, 4, 1, "", "extrac_params"], [52, 4, 1, "", "get_device_call"], [52, 4, 1, "", "get_host_call"], [52, 4, 1, "", "has_device_kernel_launch"], [52, 4, 1, "", "host_codegen"], [52, 4, 1, "", "is_cpu_device_backend"], [52, 4, 1, "", "is_device_call"], [52, 4, 1, "", "is_device_call_c_device"], [52, 4, 1, "", "lower"]], "tilelang.engine.param": [[53, 1, 1, "", "CompiledArtifact"], [53, 1, 1, "", "KernelParam"]], "tilelang.engine.param.CompiledArtifact": [[53, 3, 1, "", "device_mod"], [53, 3, 1, "", "host_mod"], [53, 3, 1, "", "kernel_source"], [53, 3, 1, "", "params"], [53, 3, 1, "", "rt_mod"]], "tilelang.engine.param.KernelParam": [[53, 3, 1, "", "dtype"], [53, 2, 1, "", "from_buffer"], [53, 2, 1, "", "from_var"], [53, 2, 1, "", "is_boolean"], [53, 2, 1, "", "is_float8"], [53, 2, 1, "", "is_scalar"], [53, 2, 1, "", "is_unsigned"], [53, 3, 1, "", "shape"]], "tilelang.engine.phase": [[54, 4, 1, "", "LowerAndLegalize"], [54, 4, 1, "", "OptimizeForTarget"], [54, 4, 1, "", "allow_fence_proxy"], [54, 4, 1, "", "allow_global_thread_synchronization"], [54, 4, 1, "", "allow_tma_and_warp_specialized"], [54, 4, 1, "", "allow_vectorize"], [54, 4, 1, "", "allow_warp_specialized"], [54, 4, 1, "", "should_enable_aggressive_merge"]], "tilelang.env": [[55, 4, 1, "", "disable_cache"], [55, 4, 1, "", "enable_cache"], [55, 4, 1, "", "is_cache_enabled"]], "tilelang.intrinsics": [[57, 0, 0, "-", "mfma_layout"], [58, 0, 0, "-", "mfma_macro_generator"], [59, 0, 0, "-", "mma_layout"], [60, 0, 0, "-", "mma_macro_generator"], [61, 0, 0, "-", "utils"]], "tilelang.intrinsics.mfma_layout": [[57, 4, 1, "", "make_mfma_swizzle_layout"], [57, 4, 1, "", "shared_16x16_to_ldmatrix_64x4_layout"], [57, 4, 1, "", "shared_16x16_to_local_64x4_layout_A"], [57, 4, 1, "", "shared_16x16_to_local_64x4_layout_B"], [57, 4, 1, "", "shared_16x16_to_local_64x4_layout_C"], [57, 4, 1, "", "shared_16x16_to_local_64x4_layout_k_n"], [57, 4, 1, "", "shared_16x16_to_local_64x4_layout_m_n"], [57, 4, 1, "", "shared_16x16_to_local_64x4_layout_n_k"], [57, 4, 1, "", "shared_16x16_to_local_64x4_layout_n_m"], [57, 4, 1, "", "shared_16x32_to_local_64x8_layout_A"], [57, 4, 1, "", "shared_16x32_to_local_64x8_layout_B"], [57, 4, 1, "", "shared_16x4_to_local_64x1_layout_A"], [57, 4, 1, "", "shared_16x64_to_local_64x16_layout_A"], [57, 4, 1, "", "shared_16x64_to_local_64x16_layout_B"], [57, 4, 1, "", "shared_4x16_to_local_64x1_layout_B"], [57, 4, 1, "", "thread_id_shared_access_64x16_to_16x64_layout_A"], [57, 4, 1, "", "thread_id_shared_access_64x16_to_16x64_layout_B"], [57, 4, 1, "", "thread_id_shared_access_64x1_to_16x4_layout_A"], [57, 4, 1, "", "thread_id_shared_access_64x1_to_4x16_layout_B"], [57, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_A"], [57, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_B"], [57, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_C_m_n"], [57, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_C_n_m"], [57, 4, 1, "", "thread_id_shared_access_64x8_to_16x32_layout_A"], [57, 4, 1, "", "thread_id_shared_access_64x8_to_16x32_layout_B"]], "tilelang.intrinsics.mfma_macro_generator": [[58, 1, 1, "", "MatrixCoreIntrinEmitter"]], "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter": [[58, 3, 1, "", "M_DIM"], [58, 3, 1, "", "N_DIM"], [58, 3, 1, "", "WARP_SIZE"], [58, 3, 1, "", "dtype_abbrv"], [58, 2, 1, "", "extract_thread_binding"], [58, 2, 1, "", "get_ldmatrix_index_map"], [58, 3, 1, "", "is_m_first"], [58, 3, 1, "", "k_pack"], [58, 2, 1, "", "ldmatrix_a"], [58, 2, 1, "", "ldmatrix_b"], [58, 2, 1, "", "mfma"], [58, 2, 1, "", "stmatrix"]], "tilelang.intrinsics.mma_layout": [[59, 4, 1, "", "get_swizzle_layout"], [59, 4, 1, "", "ldmatrix_16x32_to_shared_16x32_layout_a"], [59, 4, 1, "", "ldmatrix_16x32_to_shared_16x32_layout_b"], [59, 4, 1, "", "ldmatrix_32x16_to_shared_16x32_layout_a"], [59, 4, 1, "", "ldmatrix_32x16_to_shared_16x32_layout_b"], [59, 4, 1, "", "ldmatrix_32x8_to_shared_16x16_layout"], [59, 4, 1, "", "ldmatrix_trans_32x8_to_shared_16x16_layout"], [59, 4, 1, "", "make_mma_swizzle_layout"], [59, 4, 1, "", "mma_32x8_to_shared_16x16_layout"], [59, 4, 1, "", "mma_store_32x8_to_shared_16x16_layout"], [59, 4, 1, "", "shared_16x16_to_mma_32x8_layout"], [59, 4, 1, "", "shared_16x16_to_mma_32x8_layout_rs"], [59, 4, 1, "", "shared_16x16_to_mma_32x8_layout_sr"], [59, 4, 1, "", "shared_16x16_to_mma_32x8_layout_trans"], [59, 4, 1, "", "shared_16x16_to_mma_32x8_smoothlayout"], [59, 4, 1, "", "shared_16x32_to_mma_32x16_layout"], [59, 4, 1, "", "shared_16x32_to_mma_32x16_smoothlayout"], [59, 4, 1, "", "shared_32x16_to_mma_32x16_layout"], [59, 4, 1, "", "shared_32x16_to_mma_32x16_smoothlayout"]], "tilelang.intrinsics.mma_macro_generator": [[60, 1, 1, "", "INT4TensorCoreIntrinEmitter"], [60, 1, 1, "", "INT4TensorCoreIntrinEmitterWithLadderTransform"], [60, 1, 1, "", "TensorCoreIntrinEmitter"], [60, 1, 1, "", "TensorCoreIntrinEmitterWithLadderTransform"]], "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter": [[60, 2, 1, "", "mma"]], "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform": [[60, 2, 1, "", "mma"]], "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter": [[60, 3, 1, "", "M_DIM"], [60, 3, 1, "", "N_DIM"], [60, 3, 1, "", "WARP_SIZE"], [60, 3, 1, "", "dtype_abbrv"], [60, 2, 1, "", "extract_thread_binding"], [60, 2, 1, "", "get_store_index_map"], [60, 3, 1, "", "is_m_first"], [60, 2, 1, "", "ldmatrix_a"], [60, 2, 1, "", "ldmatrix_b"], [60, 2, 1, "", "make_mma_load_layout"], [60, 2, 1, "", "make_mma_store_layout"], [60, 2, 1, "", "mma"], [60, 2, 1, "", "stmatrix"]], "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform": [[60, 2, 1, "", "ldmatrix_a"], [60, 2, 1, "", "ldmatrix_b"], [60, 2, 1, "", "mma"]], "tilelang.intrinsics.utils": [[61, 4, 1, "", "get_ldmatrix_offset"], [61, 4, 1, "", "get_mma_micro_size"], [61, 4, 1, "", "index_to_coordinates"], [61, 4, 1, "", "mfma_store_index_map"], [61, 4, 1, "", "mma_store_index_map"], [61, 4, 1, "", "shared_16x16_to_mma_32x8_layout"], [61, 4, 1, "", "shared_16x32_to_mma_32x16_layout"], [61, 4, 1, "", "shared_32x16_to_mma_32x16_layout"]], "tilelang.jit": [[63, 0, 0, "-", "adapter"], [62, 4, 1, "", "compile"], [76, 0, 0, "-", "env"], [62, 4, 1, "", "jit"], [77, 0, 0, "-", "kernel"], [78, 0, 0, "-", "param"]], "tilelang.jit.adapter": [[64, 0, 0, "-", "base"], [65, 0, 0, "-", "ctypes"], [67, 0, 0, "-", "cython"], [70, 0, 0, "-", "dlpack"], [71, 0, 0, "-", "libgen"], [72, 0, 0, "-", "nvrtc"], [74, 0, 0, "-", "utils"], [75, 0, 0, "-", "wrapper"]], "tilelang.jit.adapter.base": [[64, 1, 1, "", "BaseKernelAdapter"]], "tilelang.jit.adapter.base.BaseKernelAdapter": [[64, 3, 1, "", "func"], [64, 2, 1, "", "get_kernel_source"]], "tilelang.jit.adapter.ctypes": [[66, 0, 0, "-", "adapter"]], "tilelang.jit.adapter.ctypes.adapter": [[66, 1, 1, "", "CtypesKernelAdapter"]], "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter": [[66, 3, 1, "", "dynamic_symbolic_map"], [66, 2, 1, "", "from_database"], [66, 2, 1, "", "get_kernel_source"], [66, 3, 1, "", "ir_module"], [66, 6, 1, "", "is_dynamic"], [66, 3, 1, "", "kernel_global_source"], [66, 3, 1, "", "lib"], [66, 6, 1, "", "lib_code"], [66, 6, 1, "", "libpath"], [66, 3, 1, "", "param_dtypes"], [66, 3, 1, "", "param_shapes"], [66, 3, 1, "", "pass_configs"], [66, 6, 1, "", "prim_func"], [66, 6, 1, "", "srcpath"], [66, 3, 1, "", "target"], [66, 3, 1, "", "wrapped_source"]], "tilelang.jit.adapter.cython": [[68, 0, 0, "-", "adapter"], [69, 0, 0, "-", "cython_wrapper"]], "tilelang.jit.adapter.cython.adapter": [[68, 1, 1, "", "CythonKernelAdapter"], [68, 4, 1, "", "get_cache_dir"], [68, 4, 1, "", "get_cached_lib"], [68, 4, 1, "", "get_cython_compiler"]], "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter": [[68, 3, 1, "", "buffer_device_map"], [68, 3, 1, "", "buffer_dtype_map"], [68, 3, 1, "", "dynamic_symbolic_map"], [68, 2, 1, "", "from_database"], [68, 2, 1, "", "get_kernel_source"], [68, 3, 1, "", "ir_module"], [68, 6, 1, "", "is_dynamic"], [68, 3, 1, "", "kernel_global_source"], [68, 3, 1, "", "lib"], [68, 6, 1, "", "lib_code"], [68, 6, 1, "", "libpath"], [68, 3, 1, "", "pass_configs"], [68, 6, 1, "", "prim_func"], [68, 3, 1, "", "ptr_map"], [68, 6, 1, "", "srcpath"], [68, 3, 1, "", "static_shape_map"], [68, 3, 1, "", "target"], [68, 3, 1, "", "wrapped_source"]], "tilelang.jit.adapter.cython.cython_wrapper": [[69, 1, 1, "", "CythonKernelWrapper"]], "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper": [[69, 2, 1, "", "forward"], [69, 2, 1, "", "set_buffer_device_map"], [69, 2, 1, "", "set_buffer_dtype_map"], [69, 2, 1, "", "set_dynamic_symbolic_map"], [69, 2, 1, "", "set_ptr_map"], [69, 2, 1, "", "set_static_shape_map"]], "tilelang.jit.adapter.dlpack": [[70, 1, 1, "", "TorchDLPackKernelAdapter"]], "tilelang.jit.adapter.libgen": [[71, 1, 1, "", "LibraryGenerator"], [71, 1, 1, "", "PyLibraryGenerator"]], "tilelang.jit.adapter.libgen.LibraryGenerator": [[71, 2, 1, "", "assign_pass_configs"], [71, 2, 1, "", "compile_lib"], [71, 2, 1, "", "get_lib_path"], [71, 2, 1, "", "get_source_path"], [71, 3, 1, "", "lib_code"], [71, 3, 1, "", "libpath"], [71, 2, 1, "", "load_lib"], [71, 3, 1, "", "pass_configs"], [71, 2, 1, "", "remove_lib"], [71, 2, 1, "", "set_lib_path"], [71, 2, 1, "", "set_src_path"], [71, 3, 1, "", "srcpath"], [71, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.libgen.PyLibraryGenerator": [[71, 2, 1, "", "compile_lib"], [71, 3, 1, "", "culib"], [71, 3, 1, "", "host_func"], [71, 2, 1, "", "import_from_file"], [71, 2, 1, "", "load_lib"], [71, 3, 1, "", "pymodule"], [71, 2, 1, "", "update_host_func"]], "tilelang.jit.adapter.nvrtc": [[73, 0, 0, "-", "adapter"]], "tilelang.jit.adapter.nvrtc.adapter": [[73, 1, 1, "", "NVRTCKernelAdapter"]], "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter": [[73, 2, 1, "", "from_database"], [73, 2, 1, "", "get_kernel_source"], [73, 3, 1, "", "kernels"], [73, 6, 1, "", "prim_func"], [73, 3, 1, "", "pymodule"]], "tilelang.jit.adapter.utils": [[74, 4, 1, "", "get_annotated_mod"], [74, 4, 1, "", "is_cpu_target"], [74, 4, 1, "", "is_cuda_target"], [74, 4, 1, "", "is_hip_target"], [74, 4, 1, "", "match_declare_kernel"], [74, 4, 1, "", "match_declare_kernel_cpu"], [74, 4, 1, "", "match_global_kernel"], [74, 4, 1, "", "pythonic_expr"]], "tilelang.jit.adapter.wrapper": [[75, 1, 1, "", "BaseWrapper"], [75, 1, 1, "", "TLCPUSourceWrapper"], [75, 1, 1, "", "TLCUDASourceWrapper"], [75, 1, 1, "", "TLHIPSourceWrapper"], [75, 1, 1, "", "TLNVRTCSourceWrapper"], [75, 1, 1, "", "TLPyWrapper"], [75, 1, 1, "", "TLWrapper"]], "tilelang.jit.adapter.wrapper.BaseWrapper": [[75, 2, 1, "", "wrap"]], "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper": [[75, 3, 1, "", "CALL_PREFIX"], [75, 3, 1, "", "INIT_FUNC"], [75, 3, 1, "", "backend"], [75, 2, 1, "", "create_call_func"], [75, 3, 1, "", "device_mod"], [75, 2, 1, "", "get_cpu_init_func"], [75, 2, 1, "", "get_dynamic_symbolic_set"], [75, 3, 1, "", "host_mod"], [75, 2, 1, "", "parse_source_information"], [75, 3, 1, "", "pass_configs"], [75, 6, 1, "", "prim_func"], [75, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper": [[75, 3, 1, "", "backend"], [75, 2, 1, "", "create_dispatch_func"], [75, 3, 1, "", "device_mod"], [75, 2, 1, "", "generate_l2_persistent_map"], [75, 2, 1, "", "generate_tma_descriptor_args"], [75, 2, 1, "", "get_dynamic_symbolic_set"], [75, 2, 1, "", "get_init_func"], [75, 2, 1, "", "get_stream_type"], [75, 3, 1, "", "host_mod"], [75, 2, 1, "", "is_tma_descriptor_arg"], [75, 2, 1, "", "parse_source_information"], [75, 3, 1, "", "pass_configs"], [75, 6, 1, "", "prim_func"], [75, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper": [[75, 2, 1, "", "get_init_func"], [75, 2, 1, "", "get_stream_type"]], "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper": [[75, 2, 1, "", "create_dispatch_func"], [75, 2, 1, "", "generate_tma_descriptor_args"], [75, 2, 1, "", "get_stream_type"], [75, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLPyWrapper": [[75, 2, 1, "", "wrap"]], "tilelang.jit.adapter.wrapper.TLWrapper": [[75, 2, 1, "", "assign_device_module"], [75, 2, 1, "", "assign_host_module"], [75, 2, 1, "", "assign_optimized_module"], [75, 2, 1, "", "assign_pass_configs"], [75, 3, 1, "", "device_mod"], [75, 3, 1, "", "host_mod"], [75, 3, 1, "", "lib"], [75, 3, 1, "", "pass_configs"], [75, 3, 1, "", "target"], [75, 2, 1, "", "wrap"]], "tilelang.jit.kernel": [[77, 1, 1, "", "JITKernel"]], "tilelang.jit.kernel.JITKernel": [[77, 3, 1, "id0", "adapter"], [77, 3, 1, "id1", "artifact"], [77, 3, 1, "", "config"], [77, 2, 1, "", "export_library"], [77, 2, 1, "", "from_database"], [77, 2, 1, "", "from_tilelang_function"], [77, 2, 1, "", "get_host_source"], [77, 2, 1, "", "get_kernel_source"], [77, 2, 1, "", "get_profiler"], [77, 2, 1, "", "get_tuner_result"], [77, 6, 1, "", "host_source"], [77, 6, 1, "", "kernel_source"], [77, 3, 1, "", "latency"], [77, 6, 1, "", "out_idx"], [77, 6, 1, "", "params"], [77, 3, 1, "", "prim_func"], [77, 3, 1, "", "ref_latency"], [77, 2, 1, "", "run_once"], [77, 3, 1, "id2", "torch_function"], [77, 2, 1, "", "update_tuner_result"]], "tilelang.jit.param": [[78, 1, 1, "", "Kernel"], [78, 1, 1, "", "Program"]], "tilelang.jit.param.Kernel": [[78, 2, 1, "", "get_kernel_source"]], "tilelang.language": [[80, 0, 0, "-", "allocate"], [79, 4, 1, "", "annotate_l2_hit_ratio"], [79, 4, 1, "", "annotate_layout"], [79, 4, 1, "", "annotate_padding"], [81, 0, 0, "-", "builtin"], [82, 0, 0, "-", "copy"], [83, 0, 0, "-", "customize"], [84, 0, 0, "-", "experimental"], [86, 0, 0, "-", "fill"], [87, 0, 0, "-", "frame"], [88, 0, 0, "-", "gemm"], [79, 4, 1, "", "import_source"], [89, 0, 0, "-", "kernel"], [90, 0, 0, "-", "logical"], [91, 0, 0, "-", "memscope"], [92, 0, 0, "-", "parallel"], [93, 0, 0, "-", "persistent"], [94, 0, 0, "-", "pipeline"], [95, 0, 0, "-", "print"], [96, 0, 0, "-", "proxy"], [97, 0, 0, "-", "reduce"], [79, 4, 1, "", "symbolic"], [98, 0, 0, "-", "tir"], [79, 4, 1, "", "use_swizzle"], [102, 0, 0, "-", "warpgroup"]], "tilelang.language.allocate": [[80, 4, 1, "", "alloc_barrier"], [80, 4, 1, "", "alloc_fragment"], [80, 4, 1, "", "alloc_local"], [80, 4, 1, "", "alloc_shared"], [80, 4, 1, "", "alloc_var"]], "tilelang.language.builtin": [[81, 4, 1, "", "barrier_arrive"], [81, 4, 1, "", "barrier_wait"], [81, 4, 1, "", "create_list_of_mbarrier"], [81, 4, 1, "", "create_tma_descriptor"], [81, 4, 1, "", "dec_max_nreg"], [81, 4, 1, "", "fence_proxy_async"], [81, 4, 1, "", "get_mbarrier"], [81, 4, 1, "", "inc_max_nreg"], [81, 4, 1, "", "mbarrier_arrive"], [81, 4, 1, "", "mbarrier_expect_tx"], [81, 4, 1, "", "mbarrier_wait_parity"], [81, 4, 1, "", "no_set_max_nreg"], [81, 4, 1, "", "set_max_nreg"], [81, 4, 1, "", "shfl_down"], [81, 4, 1, "", "shfl_up"], [81, 4, 1, "", "shfl_xor"], [81, 4, 1, "", "sync_global"], [81, 4, 1, "", "sync_grid"], [81, 4, 1, "", "sync_thread_partial"], [81, 4, 1, "", "sync_threads"], [81, 4, 1, "", "tma_load"], [81, 4, 1, "", "tma_store_arrive"], [81, 4, 1, "", "tma_store_wait"], [81, 4, 1, "", "wait_wgmma"]], "tilelang.language.copy": [[82, 4, 1, "", "buffer_load_to_tile_region"], [82, 4, 1, "", "buffer_region_to_tile_region"], [82, 4, 1, "", "buffer_to_tile_region"], [82, 4, 1, "", "c2d_im2col"], [82, 4, 1, "", "copy"], [82, 4, 1, "", "region"]], "tilelang.language.customize": [[83, 4, 1, "", "atomic_add"], [83, 4, 1, "", "atomic_addx2"], [83, 4, 1, "", "atomic_addx4"], [83, 4, 1, "", "clamp"], [83, 4, 1, "", "dp4a"], [83, 4, 1, "", "reshape"], [83, 4, 1, "", "view"]], "tilelang.language.experimental": [[85, 0, 0, "-", "gemm_sp"]], "tilelang.language.experimental.gemm_sp": [[85, 4, 1, "", "gemm_sp"]], "tilelang.language.fill": [[86, 4, 1, "", "clear"], [86, 4, 1, "", "fill"]], "tilelang.language.frame": [[87, 1, 1, "", "FrameStack"], [87, 1, 1, "", "LetFrame"], [87, 4, 1, "", "get_let_value"], [87, 4, 1, "", "has_let_value"]], "tilelang.language.frame.FrameStack": [[87, 2, 1, "", "get_value"], [87, 2, 1, "", "has_value"], [87, 2, 1, "", "pop"], [87, 2, 1, "", "push"], [87, 2, 1, "", "top"]], "tilelang.language.frame.LetFrame": [[87, 2, 1, "", "Current"], [87, 2, 1, "", "get_value"], [87, 2, 1, "", "has_value"]], "tilelang.language.gemm": [[88, 4, 1, "", "gemm"]], "tilelang.language.kernel": [[89, 1, 1, "", "FrameStack"], [89, 4, 1, "", "Kernel"], [89, 1, 1, "", "KernelLaunchFrame"], [89, 4, 1, "", "get_block_binding"], [89, 4, 1, "", "get_block_bindings"], [89, 4, 1, "", "get_block_extent"], [89, 4, 1, "", "get_block_extents"], [89, 4, 1, "", "get_thread_binding"], [89, 4, 1, "", "get_thread_bindings"], [89, 4, 1, "", "get_thread_extent"], [89, 4, 1, "", "get_thread_extents"]], "tilelang.language.kernel.FrameStack": [[89, 2, 1, "", "pop"], [89, 2, 1, "", "push"], [89, 2, 1, "", "size"], [89, 2, 1, "", "top"]], "tilelang.language.kernel.KernelLaunchFrame": [[89, 2, 1, "", "Current"], [89, 6, 1, "", "blocks"], [89, 2, 1, "", "get_block_binding"], [89, 2, 1, "", "get_block_bindings"], [89, 2, 1, "", "get_block_extent"], [89, 2, 1, "", "get_block_extents"], [89, 2, 1, "", "get_num_threads"], [89, 2, 1, "", "get_thread_binding"], [89, 2, 1, "", "get_thread_bindings"], [89, 2, 1, "", "get_thread_extent"], [89, 2, 1, "", "get_thread_extents"], [89, 6, 1, "", "num_threads"], [89, 6, 1, "", "threads"]], "tilelang.language.logical": [[90, 4, 1, "", "all_of"], [90, 4, 1, "", "any_of"]], "tilelang.language.parallel": [[92, 4, 1, "", "Parallel"]], "tilelang.language.persistent": [[93, 4, 1, "", "Persistent"]], "tilelang.language.pipeline": [[94, 4, 1, "", "Pipelined"]], "tilelang.language.print": [[95, 4, 1, "", "print"]], "tilelang.language.proxy": [[96, 1, 1, "", "BaseTensorProxy"], [96, 1, 1, "", "BufferProxy"], [96, 1, 1, "", "FragmentBufferProxy"], [96, 1, 1, "", "LocalBufferProxy"], [96, 1, 1, "", "SharedBufferProxy"], [96, 1, 1, "", "TensorProxy"], [96, 4, 1, "", "make_tensor"], [96, 4, 1, "", "ptr"]], "tilelang.language.proxy.BaseTensorProxy": [[96, 3, 1, "", "default_align"], [96, 3, 1, "", "default_offset_factor"], [96, 3, 1, "", "default_scope"], [96, 2, 1, "", "from_ptr"]], "tilelang.language.proxy.BufferProxy": [[96, 2, 1, "", "from_ptr"]], "tilelang.language.proxy.FragmentBufferProxy": [[96, 3, 1, "", "default_scope"]], "tilelang.language.proxy.LocalBufferProxy": [[96, 3, 1, "", "default_scope"]], "tilelang.language.proxy.SharedBufferProxy": [[96, 3, 1, "", "default_scope"]], "tilelang.language.reduce": [[97, 4, 1, "", "cumsum"], [97, 4, 1, "", "reduce"], [97, 4, 1, "", "reduce_absmax"], [97, 4, 1, "", "reduce_abssum"], [97, 4, 1, "", "reduce_max"], [97, 4, 1, "", "reduce_min"], [97, 4, 1, "", "reduce_sum"]], "tilelang.language.tir": [[99, 0, 0, "-", "entry"], [100, 0, 0, "-", "ir"], [101, 0, 0, "-", "op"]], "tilelang.language.tir.entry": [[99, 4, 1, "", "macro"], [99, 4, 1, "", "prim_func"]], "tilelang.language.tir.ir": [[100, 4, 1, "", "grid"], [100, 4, 1, "", "parallel"], [100, 4, 1, "", "serial"], [100, 4, 1, "", "thread_binding"], [100, 4, 1, "", "unroll"], [100, 4, 1, "", "vectorized"]], "tilelang.language.tir.op": [[101, 4, 1, "", "TVMBackendAllocWorkspace"], [101, 4, 1, "", "TVMBackendFreeWorkspace"], [101, 4, 1, "", "abs"], [101, 4, 1, "", "acos"], [101, 4, 1, "", "acosh"], [101, 4, 1, "", "address_of"], [101, 4, 1, "", "all"], [101, 4, 1, "", "any"], [101, 4, 1, "", "anylist_getitem"], [101, 4, 1, "", "anylist_resetitem"], [101, 4, 1, "", "anylist_setitem_call_cpacked"], [101, 4, 1, "", "anylist_setitem_call_packed"], [101, 4, 1, "", "asin"], [101, 4, 1, "", "asinh"], [101, 4, 1, "", "assume"], [101, 4, 1, "", "atan"], [101, 4, 1, "", "atan2"], [101, 4, 1, "", "atanh"], [101, 4, 1, "", "bitwise_and"], [101, 4, 1, "", "bitwise_not"], [101, 4, 1, "", "bitwise_or"], [101, 4, 1, "", "bitwise_xor"], [101, 4, 1, "", "call_cpacked"], [101, 4, 1, "", "call_cpacked_lowered"], [101, 4, 1, "", "call_extern"], [101, 4, 1, "", "call_intrin"], [101, 4, 1, "", "call_llvm_intrin"], [101, 4, 1, "", "call_llvm_pure_intrin"], [101, 4, 1, "", "call_packed"], [101, 4, 1, "", "call_packed_lowered"], [101, 4, 1, "", "call_pure_extern"], [101, 4, 1, "", "call_tir"], [101, 4, 1, "", "ceil"], [101, 4, 1, "", "ceildiv"], [101, 4, 1, "", "clz"], [101, 4, 1, "", "comm_reducer"], [101, 4, 1, "", "copysign"], [101, 4, 1, "", "cos"], [101, 4, 1, "", "cosh"], [101, 4, 1, "", "create_barriers"], [101, 4, 1, "", "div"], [101, 4, 1, "", "end_profile_intrinsic"], [101, 4, 1, "", "erf"], [101, 4, 1, "", "exp"], [101, 4, 1, "", "exp10"], [101, 4, 1, "", "exp2"], [101, 4, 1, "", "floor"], [101, 4, 1, "", "floordiv"], [101, 4, 1, "", "floormod"], [101, 4, 1, "", "fmod"], [101, 4, 1, "", "hypot"], [101, 4, 1, "", "if_then_else"], [101, 4, 1, "", "indexdiv"], [101, 4, 1, "", "indexmod"], [101, 4, 1, "", "infinity"], [101, 4, 1, "", "isfinite"], [101, 4, 1, "", "isinf"], [101, 4, 1, "", "isnan"], [101, 4, 1, "", "isnullptr"], [101, 4, 1, "", "ldexp"], [101, 4, 1, "", "likely"], [101, 4, 1, "", "log"], [101, 4, 1, "", "log10"], [101, 4, 1, "", "log1p"], [101, 4, 1, "", "log2"], [101, 4, 1, "", "lookup_param"], [101, 4, 1, "", "max_value"], [101, 4, 1, "", "min_value"], [101, 4, 1, "", "mma_fill"], [101, 4, 1, "", "mma_store"], [101, 4, 1, "", "nearbyint"], [101, 4, 1, "", "nextafter"], [101, 4, 1, "", "popcount"], [101, 4, 1, "", "pow"], [101, 4, 1, "", "pow_of_int"], [101, 4, 1, "", "power"], [101, 4, 1, "", "ptx_arrive_barrier"], [101, 4, 1, "", "ptx_arrive_barrier_expect_tx"], [101, 4, 1, "", "ptx_commit_group"], [101, 4, 1, "", "ptx_cp_async"], [101, 4, 1, "", "ptx_cp_async_barrier"], [101, 4, 1, "", "ptx_cp_async_bulk"], [101, 4, 1, "", "ptx_init_barrier_thread_count"], [101, 4, 1, "", "ptx_ldmatrix"], [101, 4, 1, "", "ptx_mma"], [101, 4, 1, "", "ptx_mma_sp"], [101, 4, 1, "", "ptx_wait_barrier"], [101, 4, 1, "", "ptx_wait_group"], [101, 4, 1, "", "q_multiply_shift"], [101, 4, 1, "", "q_multiply_shift_per_axis"], [101, 4, 1, "", "reinterpret"], [101, 4, 1, "", "ret"], [101, 4, 1, "", "round"], [101, 4, 1, "", "rsqrt"], [101, 4, 1, "", "shift_left"], [101, 4, 1, "", "shift_right"], [101, 4, 1, "", "sigmoid"], [101, 4, 1, "", "sin"], [101, 4, 1, "", "sinh"], [101, 4, 1, "", "sqrt"], [101, 4, 1, "", "start_profile_intrinsic"], [101, 4, 1, "", "tan"], [101, 4, 1, "", "tanh"], [101, 4, 1, "", "trace"], [101, 4, 1, "", "trunc"], [101, 4, 1, "", "truncdiv"], [101, 4, 1, "", "truncmod"], [101, 4, 1, "", "tvm_access_ptr"], [101, 4, 1, "", "tvm_bmma_sync"], [101, 4, 1, "", "tvm_check_return"], [101, 4, 1, "", "tvm_fill_fragment"], [101, 4, 1, "", "tvm_load_matrix_sync"], [101, 4, 1, "", "tvm_mfma"], [101, 4, 1, "", "tvm_mfma_store"], [101, 4, 1, "", "tvm_mma_sync"], [101, 4, 1, "", "tvm_rdna_wmma"], [101, 4, 1, "", "tvm_rdna_wmma_store"], [101, 4, 1, "", "tvm_stack_alloca"], [101, 4, 1, "", "tvm_stack_make_array"], [101, 4, 1, "", "tvm_stack_make_shape"], [101, 4, 1, "", "tvm_storage_sync"], [101, 4, 1, "", "tvm_store_matrix_sync"], [101, 4, 1, "", "tvm_struct_get"], [101, 4, 1, "", "tvm_struct_set"], [101, 4, 1, "", "tvm_thread_allreduce"], [101, 4, 1, "", "tvm_thread_invariant"], [101, 4, 1, "", "tvm_throw_last_error"], [101, 4, 1, "", "tvm_tuple"], [101, 4, 1, "", "tvm_warp_activemask"], [101, 4, 1, "", "tvm_warp_shuffle"], [101, 4, 1, "", "tvm_warp_shuffle_down"], [101, 4, 1, "", "tvm_warp_shuffle_up"], [101, 4, 1, "", "type_annotation"], [101, 4, 1, "", "undef"], [101, 4, 1, "", "vectorcombine"], [101, 4, 1, "", "vectorhigh"], [101, 4, 1, "", "vectorlow"], [101, 4, 1, "", "vscale"]], "tilelang.language.warpgroup": [[102, 4, 1, "", "WarpSpecialize"], [102, 1, 1, "", "WarpSpecializeFrame"], [102, 4, 1, "", "ws"]], "tilelang.layout": [[104, 0, 0, "-", "fragment"], [105, 0, 0, "-", "gemm_sp"], [106, 0, 0, "-", "layout"], [107, 0, 0, "-", "swizzle"]], "tilelang.layout.fragment": [[104, 1, 1, "", "Fragment"], [104, 4, 1, "", "make_swizzled_layout"]], "tilelang.layout.fragment.Fragment": [[104, 2, 1, "", "condense_rep_var"], [104, 2, 1, "", "get_thread_size"], [104, 2, 1, "", "map_forward_thread"], [104, 2, 1, "", "repeat"], [104, 2, 1, "", "replicate"], [104, 6, 1, "", "thread"]], "tilelang.layout.gemm_sp": [[105, 4, 1, "", "decompose_col_major"], [105, 4, 1, "", "make_metadata_layout"]], "tilelang.layout.layout": [[106, 1, 1, "", "Layout"]], "tilelang.layout.layout.Layout": [[106, 2, 1, "", "get_forward_vars"], [106, 2, 1, "", "get_input_shape"], [106, 2, 1, "", "get_output_shape"], [106, 6, 1, "", "index"], [106, 2, 1, "", "inverse"], [106, 2, 1, "", "map_forward_index"]], "tilelang.layout.swizzle": [[107, 4, 1, "", "make_swizzled_layout"]], "tilelang.math": [[108, 4, 1, "", "cdiv"], [108, 4, 1, "", "next_power_of_2"]], "tilelang.primitives": [[110, 0, 0, "-", "gemm"]], "tilelang.primitives.gemm": [[111, 0, 0, "-", "base"], [110, 4, 1, "", "gemm"], [112, 0, 0, "-", "gemm_mma"]], "tilelang.primitives.gemm.base": [[111, 1, 1, "", "GemmBaseParams"], [111, 1, 1, "", "GemmWarpPolicy"]], "tilelang.primitives.gemm.base.GemmBaseParams": [[111, 3, 1, "", "A"], [111, 3, 1, "", "B"], [111, 3, 1, "", "C"], [111, 3, 1, "", "block_col_warps"], [111, 3, 1, "", "block_row_warps"], [111, 3, 1, "", "chunk"], [111, 6, 1, "", "class_attributes"], [111, 2, 1, "", "get_warp_size"], [111, 2, 1, "", "infer_block_partition"], [111, 3, 1, "", "k_pack"], [111, 2, 1, "", "params_as_dict"], [111, 3, 1, "", "policy"], [111, 3, 1, "", "transpose_A"], [111, 3, 1, "", "transpose_B"], [111, 3, 1, "", "warp_col_tiles"], [111, 3, 1, "", "warp_row_tiles"]], "tilelang.primitives.gemm.base.GemmWarpPolicy": [[111, 3, 1, "", "FullCol"], [111, 3, 1, "", "FullRow"], [111, 3, 1, "", "Square"], [111, 2, 1, "", "compute_warp_partition"], [111, 2, 1, "", "from_warp_partition"], [111, 2, 1, "", "is_full_col"], [111, 2, 1, "", "is_full_row"], [111, 2, 1, "", "is_square"], [111, 2, 1, "", "to_prime_factors"]], "tilelang.primitives.gemm.gemm_mma": [[112, 1, 1, "", "GemmPrimitiveMMA"]], "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA": [[112, 6, 1, "", "accum_dtype"], [112, 2, 1, "", "gemm_rrr"], [112, 2, 1, "", "gemm_rsr"], [112, 2, 1, "", "gemm_srr"], [112, 2, 1, "", "gemm_ssr"], [112, 6, 1, "", "in_dtype"], [112, 2, 1, "", "invoke"]], "tilelang.profiler": [[113, 1, 1, "", "Profiler"], [114, 0, 0, "-", "bench"]], "tilelang.profiler.Profiler": [[113, 3, 1, "id0", "adapter"], [113, 2, 1, "", "assert_allclose"], [113, 2, 1, "", "assert_consistent"], [113, 2, 1, "", "determine_profiler"], [113, 2, 1, "", "do_bench"], [113, 6, 1, "", "func"], [113, 2, 1, "", "manual_assert_close"], [113, 3, 1, "id1", "params"], [113, 3, 1, "id2", "result_idx"], [113, 2, 1, "", "run_once"], [113, 3, 1, "id3", "supply_type"], [113, 2, 1, "", "with_default_adapter"]], "tilelang.profiler.bench": [[114, 4, 1, "", "do_bench"]], "tilelang.quantize": [[116, 0, 0, "-", "lop3"], [117, 0, 0, "-", "quantization"], [118, 0, 0, "-", "utils"]], "tilelang.quantize.lop3": [[116, 4, 1, "", "get_lop3_intrin_group"]], "tilelang.quantize.utils": [[118, 4, 1, "", "gen_quant4"], [118, 4, 1, "", "general_compress"], [118, 4, 1, "", "interleave_weight"]], "tilelang.tools": [[121, 0, 0, "-", "Analyzer"], [122, 0, 0, "-", "plot_layout"]], "tilelang.tools.Analyzer": [[121, 1, 1, "", "AnalysisResult"], [121, 1, 1, "", "Analyzer"]], "tilelang.tools.Analyzer.AnalysisResult": [[121, 3, 1, "", "bandwidth_GBps"], [121, 3, 1, "id0", "estimated_time"], [121, 3, 1, "", "expected_bandwidth_GBps"], [121, 3, 1, "", "expected_tflops"], [121, 3, 1, "", "tflops"], [121, 3, 1, "", "total_flops"], [121, 3, 1, "id1", "total_global_bytes"]], "tilelang.tools.Analyzer.Analyzer": [[121, 2, 1, "", "analysis"], [121, 2, 1, "", "calculate"], [121, 2, 1, "", "ir_pass"]], "tilelang.tools.plot_layout": [[122, 4, 1, "", "plot_layout"]], "tilelang.transform": [[123, 4, 1, "", "AlignDynamicSharedMemoryAllocations"], [123, 4, 1, "", "AnnotateDeviceRegions"], [123, 4, 1, "", "ClusterPlanning"], [123, 4, 1, "", "ConfigIndexBitwidth"], [123, 4, 1, "", "EliminateStorageSyncForMBarrier"], [123, 4, 1, "", "FlattenBuffer"], [123, 4, 1, "", "FrontendLegalize"], [123, 4, 1, "", "IfStmtBinding"], [123, 4, 1, "", "InjectFenceProxy"], [123, 4, 1, "", "InjectPTXAsyncCopy"], [123, 4, 1, "", "InjectSoftwarePipeline"], [123, 4, 1, "", "InjectTmaBarrier"], [123, 4, 1, "", "LayoutInference"], [123, 4, 1, "", "LegalizeSafeMemoryAccess"], [123, 4, 1, "", "LegalizeVectorizedLoop"], [123, 4, 1, "", "LoopVectorizeDynamic"], [123, 4, 1, "", "LowerDeviceStorageAccessInfo"], [123, 4, 1, "", "LowerHopperIntrin"], [123, 4, 1, "", "LowerL2Persistent"], [123, 4, 1, "", "LowerSharedBarrier"], [123, 4, 1, "", "LowerTileOp"], [123, 4, 1, "", "MakePackedAPI"], [123, 4, 1, "", "MergeIfStmt"], [123, 4, 1, "", "MergeSharedMemoryAllocations"], [123, 4, 1, "", "MultiVersionBuffer"], [123, 4, 1, "", "PersistThreadblock"], [123, 4, 1, "", "PipelinePlanning"], [123, 4, 1, "", "RewriteWgmmaSync"], [123, 4, 1, "", "ThreadPartialSync"], [123, 4, 1, "", "ThreadSync"], [123, 4, 1, "", "VectorizeLoop"], [123, 4, 1, "", "WarpSpecialized"], [123, 4, 1, "", "WarpSpecializedPipeline"], [123, 4, 1, "", "get_pass_context"], [124, 0, 0, "-", "pass_config"], [125, 0, 0, "-", "simplify"]], "tilelang.transform.pass_config": [[124, 1, 1, "", "PassConfigKey"]], "tilelang.transform.pass_config.PassConfigKey": [[124, 3, 1, "", "CUDA_KERNELS_OUTPUT_DIR"], [124, 3, 1, "", "TIR_ADD_LOWER_PASS"], [124, 3, 1, "", "TIR_DISABLE_CSE"], [124, 3, 1, "", "TIR_DISABLE_STORAGE_REWRITE"], [124, 3, 1, "", "TIR_DISABLE_VECTORIZE"], [124, 3, 1, "", "TIR_ENABLE_DEBUG"], [124, 3, 1, "", "TIR_ENABLE_EQUIV_TERMS_IN_CSE"], [124, 3, 1, "", "TIR_MERGE_STATIC_SMEM"], [124, 3, 1, "", "TIR_NOALIAS"], [124, 3, 1, "", "TIR_SIMPLIFY"], [124, 3, 1, "", "TIR_USE_ASYNC_COPY"], [124, 3, 1, "", "TL_CONFIG_INDEX_BITWIDTH"], [124, 3, 1, "", "TL_DEBUG_MERGE_SHARED_MEMORY_ALLOCATIONS"], [124, 3, 1, "", "TL_DISABLE_DYNAMIC_TAIL_SPLIT"], [124, 3, 1, "", "TL_DISABLE_FAST_MATH"], [124, 3, 1, "", "TL_DISABLE_SAFE_MEMORY_ACCESS"], [124, 3, 1, "", "TL_DISABLE_TMA_LOWER"], [124, 3, 1, "", "TL_DISABLE_WARP_SPECIALIZED"], [124, 3, 1, "", "TL_DYNAMIC_ALIGNMENT"], [124, 3, 1, "", "TL_ENABLE_AGGRESSIVE_SHARED_MEMORY_MERGE"], [124, 3, 1, "", "TL_ENABLE_PTXAS_VERBOSE_OUTPUT"], [124, 3, 1, "", "TL_SIMPLIFY"]], "tilelang.transform.simplify": [[125, 4, 1, "", "Simplify"], [125, 4, 1, "", "apply_simplify"], [125, 4, 1, "", "simplify_prim_func"]], "tilelang.utils": [[127, 0, 0, "-", "deprecated"], [128, 0, 0, "-", "language"], [129, 0, 0, "-", "sparse"], [130, 0, 0, "-", "target"], [131, 0, 0, "-", "tensor"]], "tilelang.utils.deprecated": [[127, 4, 1, "", "deprecated"]], "tilelang.utils.language": [[128, 4, 1, "", "array_reduce"], [128, 4, 1, "", "get_buffer_elems"], [128, 4, 1, "", "is_fragment"], [128, 4, 1, "", "is_global"], [128, 4, 1, "", "is_local"], [128, 4, 1, "", "is_shared"], [128, 4, 1, "", "is_shared_dynamic"], [128, 4, 1, "", "retrieve_func_from_module"]], "tilelang.utils.sparse": [[129, 4, 1, "", "compress_sm90"]], "tilelang.utils.target": [[130, 4, 1, "", "check_cuda_availability"], [130, 4, 1, "", "check_hip_availability"], [130, 4, 1, "", "determine_target"]], "tilelang.utils.tensor": [[131, 1, 1, "", "TensorSupplyType"], [131, 4, 1, "", "adapt_torch2tvm"], [131, 4, 1, "", "get_tensor_supply"], [131, 4, 1, "", "map_torch_type"], [131, 4, 1, "", "torch_assert_close"]], "tilelang.utils.tensor.TensorSupplyType": [[131, 3, 1, "", "Auto"], [131, 3, 1, "", "Integer"], [131, 3, 1, "", "Normal"], [131, 3, 1, "", "One"], [131, 3, 1, "", "Randn"], [131, 3, 1, "", "Uniform"], [131, 3, 1, "", "Zero"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:exception", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"], "6": ["py", "property", "Python property"]}, "titleterms": {"python": 0, "api": [0, 138], "tilelang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "packag": [1, 2, 6, 9, 11, 16, 20, 24, 29, 32, 41, 43, 50, 56, 62, 63, 65, 67, 72, 79, 84, 98, 103, 108, 109, 110, 113, 115, 119, 120, 123, 126], "subpackag": [1, 9, 11, 20, 62, 63, 79, 109], "submodul": [1, 2, 6, 9, 11, 16, 20, 24, 29, 32, 41, 43, 50, 56, 62, 63, 65, 67, 72, 79, 84, 98, 103, 110, 113, 115, 120, 123, 126, 136], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "content": [1, 2, 6, 9, 11, 16, 20, 24, 29, 32, 41, 43, 50, 56, 62, 63, 65, 67, 72, 79, 84, 98, 103, 108, 109, 110, 113, 115, 119, 120, 123, 126], "autotun": [2, 3, 4, 5, 134], "captur": 3, "param": [4, 53, 78], "tuner": 5, "cach": [6, 7, 8], "kernel_cach": 7, "tuner_cach": 8, "carver": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 140], "analysi": 10, "arch": [11, 12, 13, 14, 15, 16, 17], "arch_bas": 12, "cdna": 13, "cpu": 14, "cuda": [15, 133], "driver": [16, 17], "cuda_driv": 17, "common_schedul": 18, "matmul_analysi": 19, "roller": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "bestfit": 21, "hint": 22, "node": 23, "polici": [24, 25, 26, 27], "common": [25, 30, 41, 42], "default": 26, "tensorcor": 27, "raster": 28, "shape_infer": [29, 30, 31], "tir": [31, 98, 99, 100, 101], "templat": [32, 33, 34, 35, 36, 37, 38, 39], "base": [33, 64, 111, 137], "conv": 34, "elementwis": [35, 133], "flashattent": 36, "gemv": [37, 134], "general_reduc": 38, "matmul": 39, "util": [40, 61, 74, 118, 126, 127, 128, 129, 130, 131], "transform_kind": 42, "contrib": [43, 44, 45, 46, 47, 48, 49], "cc": 44, "dlpack": [45, 70], "hipcc": 46, "nvcc": 47, "nvrtc": [48, 72, 73], "rocm": 49, "engin": [50, 51, 52, 53, 54], "callback": [51, 141], "lower": 52, "phase": 54, "env": [55, 76], "intrins": [56, 57, 58, 59, 60, 61], "mfma_layout": 57, "mfma_macro_gener": 58, "mma_layout": 59, "mma_macro_gener": 60, "jit": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "adapt": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "ctype": [65, 66], "cython": [67, 68, 69], "cython_wrapp": 69, "libgen": 71, "wrapper": 75, "kernel": [77, 89], "languag": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 128, 137, 138, 141], "alloc": [80, 137], "builtin": 81, "copi": 82, "custom": [83, 134], "experiment": [84, 85], "gemm_sp": [85, 105], "fill": 86, "frame": 87, "gemm": [88, 110, 111, 112], "logic": 90, "memscop": 91, "parallel": [92, 134], "persist": 93, "pipelin": [94, 132], "print": [95, 141], "proxi": 96, "reduc": 97, "entri": 99, "ir": 100, "op": 101, "warpgroup": 102, "layout": [103, 104, 105, 106, 107, 132], "fragment": 104, "swizzl": [107, 132], "math": 108, "primit": [109, 110, 111, 112], "gemm_mma": 112, "profil": [113, 114], "bench": 114, "quantiz": [115, 116, 117, 118], "lop3": 116, "test": 119, "tool": [120, 121, 122], "analyz": 121, "plot_layout": 122, "transform": [123, 124, 125], "pass_config": 124, "simplifi": 125, "deprec": 127, "spars": 129, "target": 130, "tensor": 131, "write": 132, "high": 132, "perform": [132, 135, 140], "flashmla": 132, "hopper": [132, 134], "introduct": [132, 137], "mla": 132, "benchmark": [132, 134, 140], "result": 132, "implement": [132, 134, 140], "infer": 132, "threadblock": 132, "share": 132, "memori": [132, 137], "warp": 132, "special": 132, "split": 132, "kv": 132, "On": 132, "amd": 132, "mi300x": 132, "acceler": 132, "architectur": 132, "consider": 132, "optim": [132, 140], "strategi": 132, "evalu": 132, "futur": 132, "opportun": 132, "oper": [133, 138], "add": 133, "how": 133, "compil": [133, 137, 140], "dynam": 133, "shape": 133, "address": 133, "boundari": 133, "relat": 133, "issu": [133, 141], "comparison": [133, 135], "cute": 133, "conclus": [133, 134, 135, 141], "gener": [134, 135, 140, 141], "matrix": [134, 135, 140, 141], "vector": 134, "multipl": [134, 135, 140, 141], "triton": 134, "naiv": 134, "more": 134, "concurr": 134, "k": 134, "dimens": 134, "read": 134, "tvm_thread_allreduc": 134, "instead": 134, "atomicadd": 134, "tabl": 134, "gpu": [134, 135], "tile": [135, 137, 138, 141], "librari": 135, "why": 135, "anoth": 135, "dsl": 135, "exampl": [135, 140, 141], "basic": 135, "structur": 135, "kei": 135, "concept": 135, "other": 135, "differ": 135, "platform": 135, "further": 135, "resourc": 135, "instal": 136, "guid": 136, "pip": 136, "build": 136, "from": 136, "sourc": [136, 141], "method": 136, "1": [136, 140], "us": [136, 140], "your": 136, "own": 136, "tvm": 136, "2": [136, 140], "bundl": 136, "3": [136, 140], "provid": 136, "script": 136, "nightli": 136, "version": 136, "The": 137, "A": 137, "brief": 137, "program": [137, 141], "interfac": 137, "flow": 137, "model": 137, "declar": 137, "explicit": 137, "hardwar": 137, "welcom": 138, "get": 138, "start": 138, "tutori": 138, "deep": 138, "learn": 138, "refer": 138, "privaci": [138, 139], "auto": 140, "tune": 140, "techniqu": 140, "overview": [140, 141], "step": 140, "reserv": 140, "paramet": 140, "candid": 140, "configur": 140, "debug": 141, "correct": 141, "post": 141, "process": 141, "runtim": 141, "t": 141}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Python API": [[0, "python-api"]], "tilelang package": [[1, "tilelang-package"]], "Subpackages": [[1, "subpackages"], [9, "subpackages"], [11, "subpackages"], [20, "subpackages"], [62, "subpackages"], [63, "subpackages"], [79, "subpackages"], [109, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [6, "submodules"], [9, "submodules"], [11, "submodules"], [16, "submodules"], [20, "submodules"], [24, "submodules"], [29, "submodules"], [32, "submodules"], [41, "submodules"], [43, "submodules"], [50, "submodules"], [56, "submodules"], [62, "submodules"], [63, "submodules"], [65, "submodules"], [67, "submodules"], [72, "submodules"], [79, "submodules"], [84, "submodules"], [98, "submodules"], [103, "submodules"], [110, "submodules"], [113, "submodules"], [115, "submodules"], [120, "submodules"], [123, "submodules"], [126, "submodules"]], "Module contents": [[1, "module-tilelang"], [2, "module-tilelang.autotuner"], [6, "module-tilelang.cache"], [9, "module-tilelang.carver"], [11, "module-tilelang.carver.arch"], [16, "module-tilelang.carver.arch.driver"], [20, "module-tilelang.carver.roller"], [24, "module-tilelang.carver.roller.policy"], [29, "module-tilelang.carver.roller.shape_inference"], [32, "module-tilelang.carver.template"], [41, "module-tilelang.common"], [43, "module-tilelang.contrib"], [50, "module-tilelang.engine"], [56, "module-tilelang.intrinsics"], [62, "module-tilelang.jit"], [63, "module-tilelang.jit.adapter"], [65, "module-tilelang.jit.adapter.ctypes"], [67, "module-tilelang.jit.adapter.cython"], [72, "module-tilelang.jit.adapter.nvrtc"], [79, "module-tilelang.language"], [84, "module-tilelang.language.experimental"], [98, "module-tilelang.language.tir"], [103, "module-tilelang.layout"], [108, "module-tilelang.math"], [109, "module-tilelang.primitives"], [110, "module-tilelang.primitives.gemm"], [113, "module-tilelang.profiler"], [115, "module-tilelang.quantize"], [119, "module-contents"], [120, "module-tilelang.tools"], [123, "module-tilelang.transform"], [126, "module-tilelang.utils"]], "tilelang.autotuner package": [[2, "tilelang-autotuner-package"]], "tilelang.autotuner.capture module": [[3, "module-tilelang.autotuner.capture"]], "tilelang.autotuner.param module": [[4, "module-tilelang.autotuner.param"]], "tilelang.autotuner.tuner module": [[5, "module-tilelang.autotuner.tuner"]], "tilelang.cache package": [[6, "tilelang-cache-package"]], "tilelang.cache.kernel_cache module": [[7, "module-tilelang.cache.kernel_cache"]], "tilelang.cache.tuner_cache module": [[8, "module-tilelang.cache.tuner_cache"]], "tilelang.carver package": [[9, "tilelang-carver-package"]], "tilelang.carver.analysis module": [[10, "module-tilelang.carver.analysis"]], "tilelang.carver.arch package": [[11, "tilelang-carver-arch-package"]], "tilelang.carver.arch.arch_base module": [[12, "module-tilelang.carver.arch.arch_base"]], "tilelang.carver.arch.cdna module": [[13, "module-tilelang.carver.arch.cdna"]], "tilelang.carver.arch.cpu module": [[14, "module-tilelang.carver.arch.cpu"]], "tilelang.carver.arch.cuda module": [[15, "module-tilelang.carver.arch.cuda"]], "tilelang.carver.arch.driver package": [[16, "tilelang-carver-arch-driver-package"]], "tilelang.carver.arch.driver.cuda_driver module": [[17, "module-tilelang.carver.arch.driver.cuda_driver"]], "tilelang.carver.common_schedules module": [[18, "module-tilelang.carver.common_schedules"]], "tilelang.carver.matmul_analysis module": [[19, "module-tilelang.carver.matmul_analysis"]], "tilelang.carver.roller package": [[20, "tilelang-carver-roller-package"]], "tilelang.carver.roller.bestfit module": [[21, "module-tilelang.carver.roller.bestfit"]], "tilelang.carver.roller.hint module": [[22, "module-tilelang.carver.roller.hint"]], "tilelang.carver.roller.node module": [[23, "module-tilelang.carver.roller.node"]], "tilelang.carver.roller.policy package": [[24, "tilelang-carver-roller-policy-package"]], "tilelang.carver.roller.policy.common module": [[25, "module-tilelang.carver.roller.policy.common"]], "tilelang.carver.roller.policy.default module": [[26, "module-tilelang.carver.roller.policy.default"]], "tilelang.carver.roller.policy.tensorcore module": [[27, "module-tilelang.carver.roller.policy.tensorcore"]], "tilelang.carver.roller.rasterization module": [[28, "module-tilelang.carver.roller.rasterization"]], "tilelang.carver.roller.shape_inference package": [[29, "tilelang-carver-roller-shape-inference-package"]], "tilelang.carver.roller.shape_inference.common module": [[30, "module-tilelang.carver.roller.shape_inference.common"]], "tilelang.carver.roller.shape_inference.tir module": [[31, "module-tilelang.carver.roller.shape_inference.tir"]], "tilelang.carver.template package": [[32, "tilelang-carver-template-package"]], "tilelang.carver.template.base module": [[33, "module-tilelang.carver.template.base"]], "tilelang.carver.template.conv module": [[34, "module-tilelang.carver.template.conv"]], "tilelang.carver.template.elementwise module": [[35, "module-tilelang.carver.template.elementwise"]], "tilelang.carver.template.flashattention module": [[36, "module-tilelang.carver.template.flashattention"]], "tilelang.carver.template.gemv module": [[37, "module-tilelang.carver.template.gemv"]], "tilelang.carver.template.general_reduce module": [[38, "module-tilelang.carver.template.general_reduce"]], "tilelang.carver.template.matmul module": [[39, "module-tilelang.carver.template.matmul"]], "tilelang.carver.utils module": [[40, "module-tilelang.carver.utils"]], "tilelang.common package": [[41, "tilelang-common-package"]], "tilelang.common.transform_kind module": [[42, "module-tilelang.common.transform_kind"]], "tilelang.contrib package": [[43, "tilelang-contrib-package"]], "tilelang.contrib.cc module": [[44, "module-tilelang.contrib.cc"]], "tilelang.contrib.dlpack module": [[45, "module-tilelang.contrib.dlpack"]], "tilelang.contrib.hipcc module": [[46, "module-tilelang.contrib.hipcc"]], "tilelang.contrib.nvcc module": [[47, "module-tilelang.contrib.nvcc"]], "tilelang.contrib.nvrtc module": [[48, "tilelang-contrib-nvrtc-module"]], "tilelang.contrib.rocm module": [[49, "module-tilelang.contrib.rocm"]], "tilelang.engine package": [[50, "tilelang-engine-package"]], "tilelang.engine.callback module": [[51, "module-tilelang.engine.callback"]], "tilelang.engine.lower module": [[52, "module-tilelang.engine.lower"]], "tilelang.engine.param module": [[53, "module-tilelang.engine.param"]], "tilelang.engine.phase module": [[54, "module-tilelang.engine.phase"]], "tilelang.env module": [[55, "module-tilelang.env"]], "tilelang.intrinsics package": [[56, "tilelang-intrinsics-package"]], "tilelang.intrinsics.mfma_layout module": [[57, "module-tilelang.intrinsics.mfma_layout"]], "tilelang.intrinsics.mfma_macro_generator module": [[58, "module-tilelang.intrinsics.mfma_macro_generator"]], "tilelang.intrinsics.mma_layout module": [[59, "module-tilelang.intrinsics.mma_layout"]], "tilelang.intrinsics.mma_macro_generator module": [[60, "module-tilelang.intrinsics.mma_macro_generator"]], "tilelang.intrinsics.utils module": [[61, "module-tilelang.intrinsics.utils"]], "tilelang.jit package": [[62, "tilelang-jit-package"]], "tilelang.jit.adapter package": [[63, "tilelang-jit-adapter-package"]], "tilelang.jit.adapter.base module": [[64, "module-tilelang.jit.adapter.base"]], "tilelang.jit.adapter.ctypes package": [[65, "tilelang-jit-adapter-ctypes-package"]], "tilelang.jit.adapter.ctypes.adapter module": [[66, "module-tilelang.jit.adapter.ctypes.adapter"]], "tilelang.jit.adapter.cython package": [[67, "tilelang-jit-adapter-cython-package"]], "tilelang.jit.adapter.cython.adapter module": [[68, "module-tilelang.jit.adapter.cython.adapter"]], "tilelang.jit.adapter.cython.cython_wrapper module": [[69, "module-tilelang.jit.adapter.cython.cython_wrapper"]], "tilelang.jit.adapter.dlpack module": [[70, "module-tilelang.jit.adapter.dlpack"]], "tilelang.jit.adapter.libgen module": [[71, "module-tilelang.jit.adapter.libgen"]], "tilelang.jit.adapter.nvrtc package": [[72, "tilelang-jit-adapter-nvrtc-package"]], "tilelang.jit.adapter.nvrtc.adapter module": [[73, "module-tilelang.jit.adapter.nvrtc.adapter"]], "tilelang.jit.adapter.utils module": [[74, "module-tilelang.jit.adapter.utils"]], "tilelang.jit.adapter.wrapper module": [[75, "module-tilelang.jit.adapter.wrapper"]], "tilelang.jit.env module": [[76, "module-tilelang.jit.env"]], "tilelang.jit.kernel module": [[77, "module-tilelang.jit.kernel"]], "tilelang.jit.param module": [[78, "module-tilelang.jit.param"]], "tilelang.language package": [[79, "tilelang-language-package"]], "tilelang.language.allocate module": [[80, "module-tilelang.language.allocate"]], "tilelang.language.builtin module": [[81, "module-tilelang.language.builtin"]], "tilelang.language.copy module": [[82, "module-tilelang.language.copy"]], "tilelang.language.customize module": [[83, "module-tilelang.language.customize"]], "tilelang.language.experimental package": [[84, "tilelang-language-experimental-package"]], "tilelang.language.experimental.gemm_sp module": [[85, "module-tilelang.language.experimental.gemm_sp"]], "tilelang.language.fill module": [[86, "module-tilelang.language.fill"]], "tilelang.language.frame module": [[87, "module-tilelang.language.frame"]], "tilelang.language.gemm module": [[88, "module-tilelang.language.gemm"]], "tilelang.language.kernel module": [[89, "module-tilelang.language.kernel"]], "tilelang.language.logical module": [[90, "module-tilelang.language.logical"]], "tilelang.language.memscope module": [[91, "module-tilelang.language.memscope"]], "tilelang.language.parallel module": [[92, "module-tilelang.language.parallel"]], "tilelang.language.persistent module": [[93, "module-tilelang.language.persistent"]], "tilelang.language.pipeline module": [[94, "module-tilelang.language.pipeline"]], "tilelang.language.print module": [[95, "module-tilelang.language.print"]], "tilelang.language.proxy module": [[96, "module-tilelang.language.proxy"]], "tilelang.language.reduce module": [[97, "module-tilelang.language.reduce"]], "tilelang.language.tir package": [[98, "tilelang-language-tir-package"]], "tilelang.language.tir.entry module": [[99, "module-tilelang.language.tir.entry"]], "tilelang.language.tir.ir module": [[100, "module-tilelang.language.tir.ir"]], "tilelang.language.tir.op module": [[101, "module-tilelang.language.tir.op"]], "tilelang.language.warpgroup module": [[102, "module-tilelang.language.warpgroup"]], "tilelang.layout package": [[103, "tilelang-layout-package"]], "tilelang.layout.fragment module": [[104, "module-tilelang.layout.fragment"]], "tilelang.layout.gemm_sp module": [[105, "module-tilelang.layout.gemm_sp"]], "tilelang.layout.layout module": [[106, "module-tilelang.layout.layout"]], "tilelang.layout.swizzle module": [[107, "module-tilelang.layout.swizzle"]], "tilelang.math package": [[108, "tilelang-math-package"]], "tilelang.primitives package": [[109, "tilelang-primitives-package"]], "tilelang.primitives.gemm package": [[110, "tilelang-primitives-gemm-package"]], "tilelang.primitives.gemm.base module": [[111, "module-tilelang.primitives.gemm.base"]], "tilelang.primitives.gemm.gemm_mma module": [[112, "module-tilelang.primitives.gemm.gemm_mma"]], "tilelang.profiler package": [[113, "tilelang-profiler-package"]], "tilelang.profiler.bench module": [[114, "module-tilelang.profiler.bench"]], "tilelang.quantize package": [[115, "tilelang-quantize-package"]], "tilelang.quantize.lop3 module": [[116, "module-tilelang.quantize.lop3"]], "tilelang.quantize.quantization module": [[117, "module-tilelang.quantize.quantization"]], "tilelang.quantize.utils module": [[118, "module-tilelang.quantize.utils"]], "tilelang.testing package": [[119, "tilelang-testing-package"]], "tilelang.tools package": [[120, "tilelang-tools-package"]], "tilelang.tools.Analyzer module": [[121, "module-tilelang.tools.Analyzer"]], "tilelang.tools.plot_layout module": [[122, "module-tilelang.tools.plot_layout"]], "tilelang.transform package": [[123, "tilelang-transform-package"]], "tilelang.transform.pass_config module": [[124, "module-tilelang.transform.pass_config"]], "tilelang.transform.simplify module": [[125, "module-tilelang.transform.simplify"]], "tilelang.utils package": [[126, "tilelang-utils-package"]], "tilelang.utils.deprecated module": [[127, "module-tilelang.utils.deprecated"]], "tilelang.utils.language module": [[128, "module-tilelang.utils.language"]], "tilelang.utils.sparse module": [[129, "module-tilelang.utils.sparse"]], "tilelang.utils.target module": [[130, "module-tilelang.utils.target"]], "tilelang.utils.tensor module": [[131, "module-tilelang.utils.tensor"]], "\ud83d\ude80 Write High Performance FlashMLA with TileLang on Hopper": [[132, "write-high-performance-flashmla-with-tilelang-on-hopper"]], "Introduction to MLA": [[132, "introduction-to-mla"]], "Benchmark Results": [[132, "benchmark-results"]], "Implementation": [[132, "implementation"]], "Layout Inference": [[132, "layout-inference"]], "Threadblock Swizzling": [[132, "threadblock-swizzling"]], "Shared Memory Swizzling": [[132, "shared-memory-swizzling"]], "Warp-Specialization": [[132, "warp-specialization"]], "Pipeline": [[132, "pipeline"]], "Split-KV": [[132, "split-kv"]], "\ud83d\ude80 On AMD MI300X Accelerators": [[132, "on-amd-mi300x-accelerators"]], "Architectural Considerations and Optimization Strategies": [[132, "architectural-considerations-and-optimization-strategies"]], "Performance Evaluation": [[132, "performance-evaluation"]], "Future Optimization Opportunities": [[132, "future-optimization-opportunities"]], "ElementWise Operators": [[133, "elementwise-operators"]], "Elementwise add in TileLang": [[133, "elementwise-add-in-tilelang"]], "How to compile operators with dynamic shapes?": [[133, "how-to-compile-operators-with-dynamic-shapes"]], "How TileLang addresses boundary-related issues.": [[133, "how-tilelang-addresses-boundary-related-issues"]], "Comparison of TileLang, CUDA, and CuTe": [[133, "comparison-of-tilelang-cuda-and-cute"]], "Conclusion": [[133, "conclusion"], [134, "conclusion"], [135, "conclusion"], [141, "conclusion"]], "General Matrix-Vector Multiplication (GEMV)": [[134, "general-matrix-vector-multiplication-gemv"]], "Triton Implementation": [[134, "triton-implementation"]], "Naive Implementation in TileLang": [[134, "naive-implementation-in-tilelang"]], "More Concurrency": [[134, "more-concurrency"]], "Customizing Parallelism in K Dimension": [[134, "customizing-parallelism-in-k-dimension"]], "Vectorized Reads": [[134, "vectorized-reads"]], "tvm_thread_allreduce Instead of atomicAdd": [[134, "tvm-thread-allreduce-instead-of-atomicadd"]], "Autotune": [[134, "autotune"]], "Benchmark Table on Hopper GPU": [[134, "benchmark-table-on-hopper-gpu"]], "General Matrix-Matrix Multiplication with Tile Library": [[135, "general-matrix-matrix-multiplication-with-tile-library"]], "Why Another GPU DSL?": [[135, "why-another-gpu-dsl"]], "Matrix Multiplication Example": [[135, "matrix-multiplication-example"], [140, "matrix-multiplication-example"], [141, "matrix-multiplication-example"]], "Basic Structure": [[135, "basic-structure"]], "Key Concepts": [[135, "key-concepts"]], "Comparison with Other DSLs": [[135, "comparison-with-other-dsls"]], "Performance on Different Platforms": [[135, "performance-on-different-platforms"]], "Further Resources": [[135, "further-resources"]], "Installation Guide": [[136, "installation-guide"]], "Installing with pip": [[136, "installing-with-pip"]], "Building from Source": [[136, "building-from-source"]], "Method 1: Install from Source (Using Your Own TVM Installation)": [[136, "method-1-install-from-source-using-your-own-tvm-installation"]], "Method 2: Install from Source (Using the Bundled TVM Submodule)": [[136, "method-2-install-from-source-using-the-bundled-tvm-submodule"]], "Method 3: Install Using the Provided Script": [[136, "method-3-install-using-the-provided-script"]], "Install with Nightly Version": [[136, "install-with-nightly-version"]], "The Tile Language: A Brief Introduction": [[137, "the-tile-language-a-brief-introduction"]], "Programming Interface": [[137, "programming-interface"]], "Programming Interfaces": [[137, "programming-interfaces"]], "Compilation Flow": [[137, "compilation-flow"]], "Tile-based Programming Model": [[137, "tile-based-programming-model"]], "Tile declarations": [[137, "tile-declarations"]], "Explicit Hardware Memory Allocation": [[137, "explicit-hardware-memory-allocation"]], "\ud83d\udc4b Welcome to Tile Language": [[138, "welcome-to-tile-language"]], "GET STARTED": [[138, null]], "TUTORIALS": [[138, null]], "DEEP LEARNING OPERATORS": [[138, null]], "API Reference": [[138, null]], "Privacy": [[138, null], [139, "privacy"]], "Auto-Tuning Techniques for Performance Optimization": [[140, "auto-tuning-techniques-for-performance-optimization"]], "Overview": [[140, "overview"], [141, "overview"]], "Step 1: Implement with Reserved Parameters": [[140, "step-1-implement-with-reserved-parameters"]], "Step 2: Generate Candidate Configurations": [[140, "step-2-generate-candidate-configurations"]], "Step 3: Compile and Benchmark": [[140, "step-3-compile-and-benchmark"]], "Using Carver to Auto-Generate Candidate Configurations": [[140, "using-carver-to-auto-generate-candidate-configurations"]], "Debugging Tile Language Programs": [[141, "debugging-tile-language-programs"]], "Debugging Generation Issues": [[141, "debugging-generation-issues"]], "Debugging Correctness Issues": [[141, "debugging-correctness-issues"]], "Post-Processing Callbacks for Generated Source": [[141, "post-processing-callbacks-for-generated-source"]], "Runtime Debug Prints with T.print": [[141, "runtime-debug-prints-with-t-print"]]}, "indexentries": {"tqdmlogginghandler (class in tilelang)": [[1, "tilelang.TqdmLoggingHandler"]], "emit() (tilelang.tqdmlogginghandler method)": [[1, "tilelang.TqdmLoggingHandler.emit"]], "module": [[1, "module-tilelang"], [2, "module-tilelang.autotuner"], [3, "module-tilelang.autotuner.capture"], [4, "module-tilelang.autotuner.param"], [5, "module-tilelang.autotuner.tuner"], [6, "module-tilelang.cache"], [7, "module-tilelang.cache.kernel_cache"], [8, "module-tilelang.cache.tuner_cache"], [9, "module-tilelang.carver"], [10, "module-tilelang.carver.analysis"], [11, "module-tilelang.carver.arch"], [12, "module-tilelang.carver.arch.arch_base"], [13, "module-tilelang.carver.arch.cdna"], [14, "module-tilelang.carver.arch.cpu"], [15, "module-tilelang.carver.arch.cuda"], [16, "module-tilelang.carver.arch.driver"], [17, "module-tilelang.carver.arch.driver.cuda_driver"], [18, "module-tilelang.carver.common_schedules"], [19, "module-tilelang.carver.matmul_analysis"], [20, "module-tilelang.carver.roller"], [21, "module-tilelang.carver.roller.bestfit"], [22, "module-tilelang.carver.roller.hint"], [23, "module-tilelang.carver.roller.node"], [24, "module-tilelang.carver.roller.policy"], [25, "module-tilelang.carver.roller.policy.common"], [26, "module-tilelang.carver.roller.policy.default"], [27, "module-tilelang.carver.roller.policy.tensorcore"], [28, "module-tilelang.carver.roller.rasterization"], [29, "module-tilelang.carver.roller.shape_inference"], [30, "module-tilelang.carver.roller.shape_inference.common"], [31, "module-tilelang.carver.roller.shape_inference.tir"], [32, "module-tilelang.carver.template"], [33, "module-tilelang.carver.template.base"], [34, "module-tilelang.carver.template.conv"], [35, "module-tilelang.carver.template.elementwise"], [36, "module-tilelang.carver.template.flashattention"], [37, "module-tilelang.carver.template.gemv"], [38, "module-tilelang.carver.template.general_reduce"], [39, "module-tilelang.carver.template.matmul"], [40, "module-tilelang.carver.utils"], [41, "module-tilelang.common"], [42, "module-tilelang.common.transform_kind"], [43, "module-tilelang.contrib"], [44, "module-tilelang.contrib.cc"], [45, "module-tilelang.contrib.dlpack"], [46, "module-tilelang.contrib.hipcc"], [47, "module-tilelang.contrib.nvcc"], [49, "module-tilelang.contrib.rocm"], [50, "module-tilelang.engine"], [51, "module-tilelang.engine.callback"], [52, "module-tilelang.engine.lower"], [53, "module-tilelang.engine.param"], [54, "module-tilelang.engine.phase"], [55, "module-tilelang.env"], [56, "module-tilelang.intrinsics"], [57, "module-tilelang.intrinsics.mfma_layout"], [58, "module-tilelang.intrinsics.mfma_macro_generator"], [59, "module-tilelang.intrinsics.mma_layout"], [60, "module-tilelang.intrinsics.mma_macro_generator"], [61, "module-tilelang.intrinsics.utils"], [62, "module-tilelang.jit"], [63, "module-tilelang.jit.adapter"], [64, "module-tilelang.jit.adapter.base"], [65, "module-tilelang.jit.adapter.ctypes"], [66, "module-tilelang.jit.adapter.ctypes.adapter"], [67, "module-tilelang.jit.adapter.cython"], [68, "module-tilelang.jit.adapter.cython.adapter"], [69, "module-tilelang.jit.adapter.cython.cython_wrapper"], [70, "module-tilelang.jit.adapter.dlpack"], [71, "module-tilelang.jit.adapter.libgen"], [72, "module-tilelang.jit.adapter.nvrtc"], [73, "module-tilelang.jit.adapter.nvrtc.adapter"], [74, "module-tilelang.jit.adapter.utils"], [75, "module-tilelang.jit.adapter.wrapper"], [76, "module-tilelang.jit.env"], [77, "module-tilelang.jit.kernel"], [78, "module-tilelang.jit.param"], [79, "module-tilelang.language"], [80, "module-tilelang.language.allocate"], [81, "module-tilelang.language.builtin"], [82, "module-tilelang.language.copy"], [83, "module-tilelang.language.customize"], [84, "module-tilelang.language.experimental"], [85, "module-tilelang.language.experimental.gemm_sp"], [86, "module-tilelang.language.fill"], [87, "module-tilelang.language.frame"], [88, "module-tilelang.language.gemm"], [89, "module-tilelang.language.kernel"], [90, "module-tilelang.language.logical"], [91, "module-tilelang.language.memscope"], [92, "module-tilelang.language.parallel"], [93, "module-tilelang.language.persistent"], [94, "module-tilelang.language.pipeline"], [95, "module-tilelang.language.print"], [96, "module-tilelang.language.proxy"], [97, "module-tilelang.language.reduce"], [98, "module-tilelang.language.tir"], [99, "module-tilelang.language.tir.entry"], [100, "module-tilelang.language.tir.ir"], [101, "module-tilelang.language.tir.op"], [102, "module-tilelang.language.warpgroup"], [103, "module-tilelang.layout"], [104, "module-tilelang.layout.fragment"], [105, "module-tilelang.layout.gemm_sp"], [106, "module-tilelang.layout.layout"], [107, "module-tilelang.layout.swizzle"], [108, "module-tilelang.math"], [109, "module-tilelang.primitives"], [110, "module-tilelang.primitives.gemm"], [111, "module-tilelang.primitives.gemm.base"], [112, "module-tilelang.primitives.gemm.gemm_mma"], [113, "module-tilelang.profiler"], [114, "module-tilelang.profiler.bench"], [115, "module-tilelang.quantize"], [116, "module-tilelang.quantize.lop3"], [117, "module-tilelang.quantize.quantization"], [118, "module-tilelang.quantize.utils"], [120, "module-tilelang.tools"], [121, "module-tilelang.tools.Analyzer"], [122, "module-tilelang.tools.plot_layout"], [123, "module-tilelang.transform"], [124, "module-tilelang.transform.pass_config"], [125, "module-tilelang.transform.simplify"], [126, "module-tilelang.utils"], [127, "module-tilelang.utils.deprecated"], [128, "module-tilelang.utils.language"], [129, "module-tilelang.utils.sparse"], [130, "module-tilelang.utils.target"], [131, "module-tilelang.utils.tensor"]], "set_log_level() (in module tilelang)": [[1, "tilelang.set_log_level"]], "tilelang": [[1, "module-tilelang"]], "tilelang.autotuner": [[2, "module-tilelang.autotuner"]], "autotuneinputscapture (class in tilelang.autotuner.capture)": [[3, "tilelang.autotuner.capture.AutotuneInputsCapture"]], "capturestack (class in tilelang.autotuner.capture)": [[3, "tilelang.autotuner.capture.CaptureStack"]], "get_autotune_inputs() (in module tilelang.autotuner.capture)": [[3, "tilelang.autotuner.capture.get_autotune_inputs"]], "pop() (tilelang.autotuner.capture.capturestack method)": [[3, "tilelang.autotuner.capture.CaptureStack.pop"]], "push() (tilelang.autotuner.capture.capturestack method)": [[3, "tilelang.autotuner.capture.CaptureStack.push"]], "set_autotune_inputs() (in module tilelang.autotuner.capture)": [[3, "tilelang.autotuner.capture.set_autotune_inputs"]], "size() (tilelang.autotuner.capture.capturestack method)": [[3, "tilelang.autotuner.capture.CaptureStack.size"]], "tensors (tilelang.autotuner.capture.autotuneinputscapture attribute)": [[3, "tilelang.autotuner.capture.AutotuneInputsCapture.tensors"]], "tilelang.autotuner.capture": [[3, "module-tilelang.autotuner.capture"]], "top() (tilelang.autotuner.capture.capturestack method)": [[3, "tilelang.autotuner.capture.CaptureStack.top"]], "autotuneresult (class in tilelang.autotuner.param)": [[4, "tilelang.autotuner.param.AutotuneResult"]], "compileargs (class in tilelang.autotuner.param)": [[4, "tilelang.autotuner.param.CompileArgs"]], "profileargs (class in tilelang.autotuner.param)": [[4, "tilelang.autotuner.param.ProfileArgs"]], "atol (tilelang.autotuner.param.profileargs attribute)": [[4, "id14"], [4, "tilelang.autotuner.param.ProfileArgs.atol"]], "cache_input_tensors (tilelang.autotuner.param.profileargs attribute)": [[4, "id15"], [4, "tilelang.autotuner.param.ProfileArgs.cache_input_tensors"]], "compile_program() (tilelang.autotuner.param.compileargs method)": [[4, "tilelang.autotuner.param.CompileArgs.compile_program"]], "config (tilelang.autotuner.param.autotuneresult attribute)": [[4, "id0"], [4, "tilelang.autotuner.param.AutotuneResult.config"]], "execution_backend (tilelang.autotuner.param.compileargs attribute)": [[4, "id6"], [4, "tilelang.autotuner.param.CompileArgs.execution_backend"]], "func (tilelang.autotuner.param.autotuneresult attribute)": [[4, "id1"], [4, "tilelang.autotuner.param.AutotuneResult.func"]], "kernel (tilelang.autotuner.param.autotuneresult attribute)": [[4, "id2"], [4, "tilelang.autotuner.param.AutotuneResult.kernel"]], "latency (tilelang.autotuner.param.autotuneresult attribute)": [[4, "id3"], [4, "tilelang.autotuner.param.AutotuneResult.latency"]], "libcode (tilelang.autotuner.param.autotuneresult attribute)": [[4, "id4"], [4, "tilelang.autotuner.param.AutotuneResult.libcode"]], "load_from_disk() (tilelang.autotuner.param.autotuneresult class method)": [[4, "tilelang.autotuner.param.AutotuneResult.load_from_disk"]], "manual_check_prog (tilelang.autotuner.param.profileargs attribute)": [[4, "id16"], [4, "tilelang.autotuner.param.ProfileArgs.manual_check_prog"]], "max_mismatched_ratio (tilelang.autotuner.param.profileargs attribute)": [[4, "id17"], [4, "tilelang.autotuner.param.ProfileArgs.max_mismatched_ratio"]], "out_idx (tilelang.autotuner.param.compileargs attribute)": [[4, "tilelang.autotuner.param.CompileArgs.out_idx"]], "out_idx (tilelang.autotuner.param.profileargs attribute)": [[4, "tilelang.autotuner.param.ProfileArgs.out_idx"]], "pass_configs (tilelang.autotuner.param.compileargs attribute)": [[4, "id7"], [4, "tilelang.autotuner.param.CompileArgs.pass_configs"]], "ref_latency (tilelang.autotuner.param.autotuneresult attribute)": [[4, "id5"], [4, "tilelang.autotuner.param.AutotuneResult.ref_latency"]], "ref_prog (tilelang.autotuner.param.profileargs attribute)": [[4, "id12"], [4, "id18"], [4, "tilelang.autotuner.param.ProfileArgs.ref_prog"]], "rep (tilelang.autotuner.param.profileargs attribute)": [[4, "id19"], [4, "tilelang.autotuner.param.ProfileArgs.rep"]], "rtol (tilelang.autotuner.param.profileargs attribute)": [[4, "id20"], [4, "tilelang.autotuner.param.ProfileArgs.rtol"]], "save_to_disk() (tilelang.autotuner.param.autotuneresult method)": [[4, "tilelang.autotuner.param.AutotuneResult.save_to_disk"]], "skip_check (tilelang.autotuner.param.profileargs attribute)": [[4, "id21"], [4, "tilelang.autotuner.param.ProfileArgs.skip_check"]], "supply_prog (tilelang.autotuner.param.profileargs attribute)": [[4, "id13"], [4, "id22"], [4, "tilelang.autotuner.param.ProfileArgs.supply_prog"]], "supply_type (tilelang.autotuner.param.profileargs attribute)": [[4, "id11"], [4, "id23"], [4, "tilelang.autotuner.param.ProfileArgs.supply_type"]], "target (tilelang.autotuner.param.compileargs attribute)": [[4, "id8"], [4, "tilelang.autotuner.param.CompileArgs.target"]], "target_host (tilelang.autotuner.param.compileargs attribute)": [[4, "id9"], [4, "tilelang.autotuner.param.CompileArgs.target_host"]], "tilelang.autotuner.param": [[4, "module-tilelang.autotuner.param"]], "timeout (tilelang.autotuner.param.profileargs attribute)": [[4, "id24"], [4, "tilelang.autotuner.param.ProfileArgs.timeout"]], "verbose (tilelang.autotuner.param.compileargs attribute)": [[4, "id10"], [4, "tilelang.autotuner.param.CompileArgs.verbose"]], "warmup (tilelang.autotuner.param.profileargs attribute)": [[4, "id25"], [4, "tilelang.autotuner.param.ProfileArgs.warmup"]], "autotuner (class in tilelang.autotuner.tuner)": [[5, "tilelang.autotuner.tuner.AutoTuner"]], "timeoutexception": [[5, "tilelang.autotuner.tuner.TimeoutException"]], "autotune() (in module tilelang.autotuner.tuner)": [[5, "tilelang.autotuner.tuner.autotune"]], "cache_dir (tilelang.autotuner.tuner.autotuner attribute)": [[5, "tilelang.autotuner.tuner.AutoTuner.cache_dir"]], "compile_args (tilelang.autotuner.tuner.autotuner attribute)": [[5, "tilelang.autotuner.tuner.AutoTuner.compile_args"]], "from_kernel() (tilelang.autotuner.tuner.autotuner class method)": [[5, "tilelang.autotuner.tuner.AutoTuner.from_kernel"]], "generate_cache_key() (tilelang.autotuner.tuner.autotuner method)": [[5, "tilelang.autotuner.tuner.AutoTuner.generate_cache_key"]], "get_available_cpu_count() (in module tilelang.autotuner.tuner)": [[5, "tilelang.autotuner.tuner.get_available_cpu_count"]], "profile_args (tilelang.autotuner.tuner.autotuner attribute)": [[5, "tilelang.autotuner.tuner.AutoTuner.profile_args"]], "run() (tilelang.autotuner.tuner.autotuner method)": [[5, "tilelang.autotuner.tuner.AutoTuner.run"]], "run_with_timeout() (in module tilelang.autotuner.tuner)": [[5, "tilelang.autotuner.tuner.run_with_timeout"]], "set_compile_args() (tilelang.autotuner.tuner.autotuner method)": [[5, "tilelang.autotuner.tuner.AutoTuner.set_compile_args"]], "set_kernel_parameters() (tilelang.autotuner.tuner.autotuner method)": [[5, "tilelang.autotuner.tuner.AutoTuner.set_kernel_parameters"]], "set_profile_args() (tilelang.autotuner.tuner.autotuner method)": [[5, "tilelang.autotuner.tuner.AutoTuner.set_profile_args"]], "tilelang.autotuner.tuner": [[5, "module-tilelang.autotuner.tuner"]], "timeout_handler() (in module tilelang.autotuner.tuner)": [[5, "tilelang.autotuner.tuner.timeout_handler"]], "cached() (in module tilelang.cache)": [[6, "tilelang.cache.cached"]], "clear_cache() (in module tilelang.cache)": [[6, "tilelang.cache.clear_cache"]], "get_cache_dir() (in module tilelang.cache)": [[6, "tilelang.cache.get_cache_dir"]], "set_cache_dir() (in module tilelang.cache)": [[6, "tilelang.cache.set_cache_dir"]], "tilelang.cache": [[6, "module-tilelang.cache"]], "kernelcache (class in tilelang.cache.kernel_cache)": [[7, "tilelang.cache.kernel_cache.KernelCache"]], "cache_dir (tilelang.cache.kernel_cache.kernelcache attribute)": [[7, "tilelang.cache.kernel_cache.KernelCache.cache_dir"]], "cached() (tilelang.cache.kernel_cache.kernelcache method)": [[7, "tilelang.cache.kernel_cache.KernelCache.cached"]], "clear_cache() (tilelang.cache.kernel_cache.kernelcache method)": [[7, "tilelang.cache.kernel_cache.KernelCache.clear_cache"]], "execution_backend (tilelang.cache.kernel_cache.kernelcache attribute)": [[7, "tilelang.cache.kernel_cache.KernelCache.execution_backend"]], "get_cache_dir() (tilelang.cache.kernel_cache.kernelcache method)": [[7, "tilelang.cache.kernel_cache.KernelCache.get_cache_dir"]], "set_cache_dir() (tilelang.cache.kernel_cache.kernelcache method)": [[7, "tilelang.cache.kernel_cache.KernelCache.set_cache_dir"]], "tilelang.cache.kernel_cache": [[7, "module-tilelang.cache.kernel_cache"]], "autotunercache (class in tilelang.cache.tuner_cache)": [[8, "tilelang.cache.tuner_cache.AutoTunerCache"]], "cache_dir (tilelang.cache.tuner_cache.autotunercache attribute)": [[8, "tilelang.cache.tuner_cache.AutoTunerCache.cache_dir"]], "cached() (tilelang.cache.tuner_cache.autotunercache method)": [[8, "tilelang.cache.tuner_cache.AutoTunerCache.cached"]], "clear_cache() (tilelang.cache.tuner_cache.autotunercache method)": [[8, "tilelang.cache.tuner_cache.AutoTunerCache.clear_cache"]], "get_cache_dir() (tilelang.cache.tuner_cache.autotunercache method)": [[8, "tilelang.cache.tuner_cache.AutoTunerCache.get_cache_dir"]], "set_cache_dir() (tilelang.cache.tuner_cache.autotunercache method)": [[8, "tilelang.cache.tuner_cache.AutoTunerCache.set_cache_dir"]], "tilelang.cache.tuner_cache": [[8, "module-tilelang.cache.tuner_cache"]], "tilelang.carver": [[9, "module-tilelang.carver"]], "blockinfo (class in tilelang.carver.analysis)": [[10, "tilelang.carver.analysis.BlockInfo"]], "iterinfo (class in tilelang.carver.analysis)": [[10, "tilelang.carver.analysis.IterInfo"]], "block_rv (tilelang.carver.analysis.blockinfo attribute)": [[10, "tilelang.carver.analysis.BlockInfo.block_rv"]], "check_func_with_dynamic() (in module tilelang.carver.analysis)": [[10, "tilelang.carver.analysis.check_func_with_dynamic"]], "collect_block_iter_vars_used_in_access_region() (in module tilelang.carver.analysis)": [[10, "tilelang.carver.analysis.collect_block_iter_vars_used_in_access_region"]], "collect_vars_used_in_prim_expr() (in module tilelang.carver.analysis)": [[10, "tilelang.carver.analysis.collect_vars_used_in_prim_expr"]], "detect_dominant_read() (in module tilelang.carver.analysis)": [[10, "tilelang.carver.analysis.detect_dominant_read"]], "dom (tilelang.carver.analysis.iterinfo property)": [[10, "tilelang.carver.analysis.IterInfo.dom"]], "dom() (tilelang.carver.analysis.blockinfo method)": [[10, "tilelang.carver.analysis.BlockInfo.dom"]], "dom_kind() (tilelang.carver.analysis.blockinfo method)": [[10, "tilelang.carver.analysis.BlockInfo.dom_kind"]], "find_var_from_func() (in module tilelang.carver.analysis)": [[10, "tilelang.carver.analysis.find_var_from_func"]], "get_coalesced_veclen() (in module tilelang.carver.analysis)": [[10, "tilelang.carver.analysis.get_coalesced_veclen"]], "get_max_shared_memory_per_block() (in module tilelang.carver.analysis)": [[10, "tilelang.carver.analysis.get_max_shared_memory_per_block"]], "get_max_threads_per_block() (in module tilelang.carver.analysis)": [[10, "tilelang.carver.analysis.get_max_threads_per_block"]], "get_reduction_blocks() (in module tilelang.carver.analysis)": [[10, "tilelang.carver.analysis.get_reduction_blocks"]], "get_root_block() (in module tilelang.carver.analysis)": [[10, "tilelang.carver.analysis.get_root_block"]], "is_broadcast_epilogue() (in module tilelang.carver.analysis)": [[10, "tilelang.carver.analysis.is_broadcast_epilogue"]], "is_elementwise() (tilelang.carver.analysis.blockinfo method)": [[10, "tilelang.carver.analysis.BlockInfo.is_elementwise"]], "is_gemm() (tilelang.carver.analysis.blockinfo method)": [[10, "tilelang.carver.analysis.BlockInfo.is_gemm"]], "is_gemv() (tilelang.carver.analysis.blockinfo method)": [[10, "tilelang.carver.analysis.BlockInfo.is_gemv"]], "is_injective() (tilelang.carver.analysis.blockinfo method)": [[10, "tilelang.carver.analysis.BlockInfo.is_injective"]], "is_reduction() (tilelang.carver.analysis.blockinfo method)": [[10, "tilelang.carver.analysis.BlockInfo.is_reduction"]], "iters (tilelang.carver.analysis.blockinfo attribute)": [[10, "tilelang.carver.analysis.BlockInfo.iters"]], "kind (tilelang.carver.analysis.iterinfo attribute)": [[10, "tilelang.carver.analysis.IterInfo.kind"]], "loop_rv (tilelang.carver.analysis.iterinfo attribute)": [[10, "tilelang.carver.analysis.IterInfo.loop_rv"]], "name (tilelang.carver.analysis.blockinfo attribute)": [[10, "tilelang.carver.analysis.BlockInfo.name"]], "normalize_prim_func() (in module tilelang.carver.analysis)": [[10, "tilelang.carver.analysis.normalize_prim_func"]], "tilelang.carver.analysis": [[10, "module-tilelang.carver.analysis"]], "var (tilelang.carver.analysis.iterinfo attribute)": [[10, "tilelang.carver.analysis.IterInfo.var"]], "auto_infer_current_arch() (in module tilelang.carver.arch)": [[11, "tilelang.carver.arch.auto_infer_current_arch"]], "get_arch() (in module tilelang.carver.arch)": [[11, "tilelang.carver.arch.get_arch"]], "tilelang.carver.arch": [[11, "module-tilelang.carver.arch"]], "tiledevice (class in tilelang.carver.arch.arch_base)": [[12, "tilelang.carver.arch.arch_base.TileDevice"]], "get_avaliable_tensorintrin_shapes() (tilelang.carver.arch.arch_base.tiledevice method)": [[12, "tilelang.carver.arch.arch_base.TileDevice.get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.arch_base": [[12, "module-tilelang.carver.arch.arch_base"]], "cdna (class in tilelang.carver.arch.cdna)": [[13, "tilelang.carver.arch.cdna.CDNA"]], "is_cdna_arch() (in module tilelang.carver.arch.cdna)": [[13, "tilelang.carver.arch.cdna.is_cdna_arch"]], "tilelang.carver.arch.cdna": [[13, "module-tilelang.carver.arch.cdna"]], "cpu (class in tilelang.carver.arch.cpu)": [[14, "tilelang.carver.arch.cpu.CPU"]], "is_cpu_arch() (in module tilelang.carver.arch.cpu)": [[14, "tilelang.carver.arch.cpu.is_cpu_arch"]], "tilelang.carver.arch.cpu": [[14, "module-tilelang.carver.arch.cpu"]], "cuda (class in tilelang.carver.arch.cuda)": [[15, "tilelang.carver.arch.cuda.CUDA"]], "tensorinstruction (class in tilelang.carver.arch.cuda)": [[15, "tilelang.carver.arch.cuda.TensorInstruction"]], "check_sm_version() (in module tilelang.carver.arch.cuda)": [[15, "tilelang.carver.arch.cuda.check_sm_version"]], "get_avaliable_tensorintrin_shapes() (tilelang.carver.arch.cuda.cuda method)": [[15, "tilelang.carver.arch.cuda.CUDA.get_avaliable_tensorintrin_shapes"]], "has_mma_support() (in module tilelang.carver.arch.cuda)": [[15, "tilelang.carver.arch.cuda.has_mma_support"]], "is_ada_arch() (in module tilelang.carver.arch.cuda)": [[15, "tilelang.carver.arch.cuda.is_ada_arch"]], "is_ampere_arch() (in module tilelang.carver.arch.cuda)": [[15, "tilelang.carver.arch.cuda.is_ampere_arch"]], "is_cuda_arch() (in module tilelang.carver.arch.cuda)": [[15, "tilelang.carver.arch.cuda.is_cuda_arch"]], "is_hopper_arch() (in module tilelang.carver.arch.cuda)": [[15, "tilelang.carver.arch.cuda.is_hopper_arch"]], "is_tensorcore_supported_precision() (in module tilelang.carver.arch.cuda)": [[15, "tilelang.carver.arch.cuda.is_tensorcore_supported_precision"]], "is_volta_arch() (in module tilelang.carver.arch.cuda)": [[15, "tilelang.carver.arch.cuda.is_volta_arch"]], "tilelang.carver.arch.cuda": [[15, "module-tilelang.carver.arch.cuda"]], "tilelang.carver.arch.driver": [[16, "module-tilelang.carver.arch.driver"]], "eccenabled (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.ECCEnabled"]], "asyncenginecount (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.asyncEngineCount"]], "canmaphostmemory (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.canMapHostMemory"]], "clockrate (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.clockRate"]], "computemode (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.computeMode"]], "concurrentkernels (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.concurrentKernels"]], "cudadeviceprop (class in tilelang.carver.arch.driver.cuda_driver)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp"]], "deviceoverlap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.deviceOverlap"]], "get_cuda_device_properties() (in module tilelang.carver.arch.driver.cuda_driver)": [[17, "tilelang.carver.arch.driver.cuda_driver.get_cuda_device_properties"]], "get_device_attribute() (in module tilelang.carver.arch.driver.cuda_driver)": [[17, "tilelang.carver.arch.driver.cuda_driver.get_device_attribute"]], "get_device_name() (in module tilelang.carver.arch.driver.cuda_driver)": [[17, "tilelang.carver.arch.driver.cuda_driver.get_device_name"]], "get_max_dynamic_shared_size_bytes() (in module tilelang.carver.arch.driver.cuda_driver)": [[17, "tilelang.carver.arch.driver.cuda_driver.get_max_dynamic_shared_size_bytes"]], "get_num_sms() (in module tilelang.carver.arch.driver.cuda_driver)": [[17, "tilelang.carver.arch.driver.cuda_driver.get_num_sms"]], "get_persisting_l2_cache_max_size() (in module tilelang.carver.arch.driver.cuda_driver)": [[17, "tilelang.carver.arch.driver.cuda_driver.get_persisting_l2_cache_max_size"]], "get_registers_per_block() (in module tilelang.carver.arch.driver.cuda_driver)": [[17, "tilelang.carver.arch.driver.cuda_driver.get_registers_per_block"]], "get_shared_memory_per_block() (in module tilelang.carver.arch.driver.cuda_driver)": [[17, "tilelang.carver.arch.driver.cuda_driver.get_shared_memory_per_block"]], "globall1cachesupported (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.globalL1CacheSupported"]], "integrated (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.integrated"]], "ismultigpuboard (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.isMultiGpuBoard"]], "kernelexectimeoutenabled (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.kernelExecTimeoutEnabled"]], "l2cachesize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.l2CacheSize"]], "locall1cachesupported (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.localL1CacheSupported"]], "luid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.luid"]], "luiddevicenodemask (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.luidDeviceNodeMask"]], "major (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.major"]], "managedmemory (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.managedMemory"]], "maxgridsize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxGridSize"]], "maxsurface1d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface1D"]], "maxsurface1dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface1DLayered"]], "maxsurface2d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface2D"]], "maxsurface2dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface2DLayered"]], "maxsurface3d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface3D"]], "maxsurfacecubemap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurfaceCubemap"]], "maxsurfacecubemaplayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurfaceCubemapLayered"]], "maxtexture1d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1D"]], "maxtexture1dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1DLayered"]], "maxtexture1dlinear (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1DLinear"]], "maxtexture1dmipmap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1DMipmap"]], "maxtexture2d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2D"]], "maxtexture2dgather (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DGather"]], "maxtexture2dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DLayered"]], "maxtexture2dlinear (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DLinear"]], "maxtexture2dmipmap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DMipmap"]], "maxtexture3d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture3D"]], "maxtexture3dalt (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture3DAlt"]], "maxtexturecubemap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTextureCubemap"]], "maxtexturecubemaplayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTextureCubemapLayered"]], "maxthreadsdim (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxThreadsDim"]], "maxthreadsperblock (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxThreadsPerBlock"]], "maxthreadspermultiprocessor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxThreadsPerMultiProcessor"]], "mempitch (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.memPitch"]], "memorybuswidth (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.memoryBusWidth"]], "memoryclockrate (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.memoryClockRate"]], "minor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.minor"]], "multigpuboardgroupid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.multiGpuBoardGroupID"]], "multiprocessorcount (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.multiProcessorCount"]], "name (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.name"]], "pcibusid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.pciBusID"]], "pcideviceid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.pciDeviceID"]], "pcidomainid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.pciDomainID"]], "persistingl2cachemaxsize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.persistingL2CacheMaxSize"]], "regsperblock (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.regsPerBlock"]], "regspermultiprocessor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.regsPerMultiprocessor"]], "reserved (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.reserved"]], "reserved1 (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.reserved1"]], "reserved2 (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.reserved2"]], "sharedmemperblock (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.sharedMemPerBlock"]], "sharedmempermultiprocessor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.sharedMemPerMultiprocessor"]], "streamprioritiessupported (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.streamPrioritiesSupported"]], "surfacealignment (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.surfaceAlignment"]], "tccdriver (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.tccDriver"]], "texturealignment (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.textureAlignment"]], "texturepitchalignment (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.texturePitchAlignment"]], "tilelang.carver.arch.driver.cuda_driver": [[17, "module-tilelang.carver.arch.driver.cuda_driver"]], "totalconstmem (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.totalConstMem"]], "totalglobalmem (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.totalGlobalMem"]], "unifiedaddressing (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.unifiedAddressing"]], "uuid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.uuid"]], "warpsize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[17, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.warpSize"]], "get_block() (in module tilelang.carver.common_schedules)": [[18, "tilelang.carver.common_schedules.get_block"]], "get_output_blocks() (in module tilelang.carver.common_schedules)": [[18, "tilelang.carver.common_schedules.get_output_blocks"]], "tilelang.carver.common_schedules": [[18, "module-tilelang.carver.common_schedules"]], "try_inline() (in module tilelang.carver.common_schedules)": [[18, "tilelang.carver.common_schedules.try_inline"]], "try_inline_contiguous_spatial() (in module tilelang.carver.common_schedules)": [[18, "tilelang.carver.common_schedules.try_inline_contiguous_spatial"]], "iterkind (class in tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.IterKind"]], "itertrait (class in tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.IterTrait"]], "auto_inline_consumer_chain() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.auto_inline_consumer_chain"]], "auto_inline_consumers() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.auto_inline_consumers"]], "auto_inline_producers() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.auto_inline_producers"]], "collect_vars_from_expr() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.collect_vars_from_expr"]], "detect_iter_traits() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.detect_iter_traits"]], "extent (tilelang.carver.matmul_analysis.itertrait attribute)": [[19, "tilelang.carver.matmul_analysis.IterTrait.extent"]], "find_arg_idx_from_buffer_chain() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.find_arg_idx_from_buffer_chain"]], "find_first_similar_buffer() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.find_first_similar_buffer"]], "find_first_similar_region() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.find_first_similar_region"]], "find_last_producer_from_buffer() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.find_last_producer_from_buffer"]], "get_dequantize_block() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.get_dequantize_block"]], "get_in_out_dtypes() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.get_in_out_dtypes"]], "get_index_map() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.get_index_map"]], "get_ladder_stage3_map() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.get_ladder_stage3_map"]], "get_propagate_map() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.get_propagate_map"]], "get_tensorized_func_and_tags() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.get_tensorized_func_and_tags"]], "inline_transpose_block() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.inline_transpose_block"]], "is_identity_block() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.is_identity_block"]], "is_identity_or_transpose_block() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.is_identity_or_transpose_block"]], "is_transpose_block() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.is_transpose_block"]], "kiter_i (tilelang.carver.matmul_analysis.iterkind attribute)": [[19, "tilelang.carver.matmul_analysis.IterKind.kIter_I"]], "kiter_j (tilelang.carver.matmul_analysis.iterkind attribute)": [[19, "tilelang.carver.matmul_analysis.IterKind.kIter_J"]], "kiter_k (tilelang.carver.matmul_analysis.iterkind attribute)": [[19, "tilelang.carver.matmul_analysis.IterKind.kIter_K"]], "kiter_s (tilelang.carver.matmul_analysis.iterkind attribute)": [[19, "tilelang.carver.matmul_analysis.IterKind.kIter_S"]], "kiter_t (tilelang.carver.matmul_analysis.iterkind attribute)": [[19, "tilelang.carver.matmul_analysis.IterKind.kIter_T"]], "kind (tilelang.carver.matmul_analysis.itertrait attribute)": [[19, "tilelang.carver.matmul_analysis.IterTrait.kind"]], "layout_propagate_chain() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.layout_propagate_chain"]], "make_iter_fusion_index_map() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.make_iter_fusion_index_map"]], "normalize_to_matmul() (in module tilelang.carver.matmul_analysis)": [[19, "tilelang.carver.matmul_analysis.normalize_to_matmul"]], "tilelang.carver.matmul_analysis": [[19, "module-tilelang.carver.matmul_analysis"]], "tilelang.carver.roller": [[20, "module-tilelang.carver.roller"]], "bestfit (class in tilelang.carver.roller.bestfit)": [[21, "tilelang.carver.roller.bestfit.BestFit"]], "block (class in tilelang.carver.roller.bestfit)": [[21, "tilelang.carver.roller.bestfit.Block"]], "free() (tilelang.carver.roller.bestfit.bestfit method)": [[21, "tilelang.carver.roller.bestfit.BestFit.free"]], "malloc() (tilelang.carver.roller.bestfit.bestfit method)": [[21, "tilelang.carver.roller.bestfit.BestFit.malloc"]], "merge() (tilelang.carver.roller.bestfit.block method)": [[21, "tilelang.carver.roller.bestfit.Block.merge"]], "size() (tilelang.carver.roller.bestfit.block method)": [[21, "tilelang.carver.roller.bestfit.Block.size"]], "tilelang.carver.roller.bestfit": [[21, "module-tilelang.carver.roller.bestfit"]], "hint (class in tilelang.carver.roller.hint)": [[22, "tilelang.carver.roller.hint.Hint"]], "intrininfo (class in tilelang.carver.roller.hint)": [[22, "tilelang.carver.roller.hint.IntrinInfo"]], "stride (class in tilelang.carver.roller.hint)": [[22, "tilelang.carver.roller.hint.Stride"]], "tensorcoreextraconfig (class in tilelang.carver.roller.hint)": [[22, "tilelang.carver.roller.hint.TensorCoreExtraConfig"]], "tiledict (class in tilelang.carver.roller.hint)": [[22, "tilelang.carver.roller.hint.TileDict"]], "ax (tilelang.carver.roller.hint.stride property)": [[22, "tilelang.carver.roller.hint.Stride.ax"]], "complete_config() (tilelang.carver.roller.hint.hint method)": [[22, "tilelang.carver.roller.hint.Hint.complete_config"]], "compute_elements_from_shape() (tilelang.carver.roller.hint.stride method)": [[22, "tilelang.carver.roller.hint.Stride.compute_elements_from_shape"]], "compute_strides_from_shape() (tilelang.carver.roller.hint.stride method)": [[22, "tilelang.carver.roller.hint.Stride.compute_strides_from_shape"]], "from_dict() (tilelang.carver.roller.hint.hint class method)": [[22, "tilelang.carver.roller.hint.Hint.from_dict"]], "get_rstep() (tilelang.carver.roller.hint.tiledict method)": [[22, "tilelang.carver.roller.hint.TileDict.get_rstep"]], "get_tile() (tilelang.carver.roller.hint.tiledict method)": [[22, "tilelang.carver.roller.hint.TileDict.get_tile"]], "inter_transform_a (tilelang.carver.roller.hint.intrininfo property)": [[22, "tilelang.carver.roller.hint.IntrinInfo.inter_transform_a"]], "inter_transform_b (tilelang.carver.roller.hint.intrininfo property)": [[22, "tilelang.carver.roller.hint.IntrinInfo.inter_transform_b"]], "is_input_8bit() (tilelang.carver.roller.hint.intrininfo method)": [[22, "tilelang.carver.roller.hint.IntrinInfo.is_input_8bit"]], "is_valid() (tilelang.carver.roller.hint.stride method)": [[22, "tilelang.carver.roller.hint.Stride.is_valid"]], "raxis_order (tilelang.carver.roller.hint.hint property)": [[22, "tilelang.carver.roller.hint.Hint.raxis_order"]], "smooth_a (tilelang.carver.roller.hint.intrininfo property)": [[22, "tilelang.carver.roller.hint.IntrinInfo.smooth_a"]], "smooth_b (tilelang.carver.roller.hint.intrininfo property)": [[22, "tilelang.carver.roller.hint.IntrinInfo.smooth_b"]], "step (tilelang.carver.roller.hint.hint property)": [[22, "tilelang.carver.roller.hint.Hint.step"]], "stride (tilelang.carver.roller.hint.stride property)": [[22, "tilelang.carver.roller.hint.Stride.stride"]], "tensorcore_legalization() (tilelang.carver.roller.hint.hint method)": [[22, "tilelang.carver.roller.hint.Hint.tensorcore_legalization"]], "tilelang.carver.roller.hint": [[22, "module-tilelang.carver.roller.hint"]], "to_dict() (tilelang.carver.roller.hint.hint method)": [[22, "tilelang.carver.roller.hint.Hint.to_dict"]], "blockanalyzer (class in tilelang.carver.roller.node)": [[23, "tilelang.carver.roller.node.BlockAnalyzer"]], "edge (class in tilelang.carver.roller.node)": [[23, "tilelang.carver.roller.node.Edge"]], "node (class in tilelang.carver.roller.node)": [[23, "tilelang.carver.roller.node.Node"]], "outputnode (class in tilelang.carver.roller.node)": [[23, "tilelang.carver.roller.node.OutputNode"]], "placeholdernode (class in tilelang.carver.roller.node)": [[23, "tilelang.carver.roller.node.PlaceHolderNode"]], "primfuncnode (class in tilelang.carver.roller.node)": [[23, "tilelang.carver.roller.node.PrimFuncNode"]], "add_tag() (tilelang.carver.roller.node.node method)": [[23, "tilelang.carver.roller.node.Node.add_tag"]], "dst_id (tilelang.carver.roller.node.edge attribute)": [[23, "tilelang.carver.roller.node.Edge.dst_id"]], "dst_node (tilelang.carver.roller.node.edge attribute)": [[23, "tilelang.carver.roller.node.Edge.dst_node"]], "extent_wrapper() (tilelang.carver.roller.node.primfuncnode method)": [[23, "tilelang.carver.roller.node.PrimFuncNode.extent_wrapper"]], "find_topo_sort() (in module tilelang.carver.roller.node)": [[23, "tilelang.carver.roller.node.find_topo_sort"]], "find_topo_sort_priority() (in module tilelang.carver.roller.node)": [[23, "tilelang.carver.roller.node.find_topo_sort_priority"]], "footprint() (tilelang.carver.roller.node.primfuncnode method)": [[23, "tilelang.carver.roller.node.PrimFuncNode.footprint"]], "get_block_info() (tilelang.carver.roller.node.blockanalyzer method)": [[23, "tilelang.carver.roller.node.BlockAnalyzer.get_block_info"]], "get_block_name() (tilelang.carver.roller.node.blockanalyzer method)": [[23, "tilelang.carver.roller.node.BlockAnalyzer.get_block_name"]], "get_buffer_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[23, "tilelang.carver.roller.node.PrimFuncNode.get_buffer_dtype"]], "get_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[23, "tilelang.carver.roller.node.BlockAnalyzer.get_buffers"]], "get_consumer_blocks() (tilelang.carver.roller.node.blockanalyzer method)": [[23, "tilelang.carver.roller.node.BlockAnalyzer.get_consumer_blocks"]], "get_dtype() (tilelang.carver.roller.node.node method)": [[23, "tilelang.carver.roller.node.Node.get_dtype"]], "get_input_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[23, "tilelang.carver.roller.node.BlockAnalyzer.get_input_buffers"]], "get_input_buffers() (tilelang.carver.roller.node.primfuncnode method)": [[23, "tilelang.carver.roller.node.PrimFuncNode.get_input_buffers"]], "get_ir() (tilelang.carver.roller.node.node method)": [[23, "tilelang.carver.roller.node.Node.get_ir"]], "get_ir() (tilelang.carver.roller.node.outputnode method)": [[23, "tilelang.carver.roller.node.OutputNode.get_ir"]], "get_ir() (tilelang.carver.roller.node.placeholdernode method)": [[23, "tilelang.carver.roller.node.PlaceHolderNode.get_ir"]], "get_opt_shape() (tilelang.carver.roller.node.primfuncnode method)": [[23, "tilelang.carver.roller.node.PrimFuncNode.get_opt_shape"]], "get_output_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[23, "tilelang.carver.roller.node.BlockAnalyzer.get_output_buffers"]], "get_producer_blocks() (tilelang.carver.roller.node.blockanalyzer method)": [[23, "tilelang.carver.roller.node.BlockAnalyzer.get_producer_blocks"]], "get_reduce_axis() (tilelang.carver.roller.node.blockanalyzer method)": [[23, "tilelang.carver.roller.node.BlockAnalyzer.get_reduce_axis"]], "get_reduce_inputs_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[23, "tilelang.carver.roller.node.PrimFuncNode.get_reduce_inputs_dtype"]], "get_shape() (tilelang.carver.roller.node.node method)": [[23, "tilelang.carver.roller.node.Node.get_shape"]], "get_space_dim() (tilelang.carver.roller.node.primfuncnode method)": [[23, "tilelang.carver.roller.node.PrimFuncNode.get_space_dim"]], "get_spatial_axis() (tilelang.carver.roller.node.blockanalyzer method)": [[23, "tilelang.carver.roller.node.BlockAnalyzer.get_spatial_axis"]], "get_tag() (tilelang.carver.roller.node.node method)": [[23, "tilelang.carver.roller.node.Node.get_tag"]], "infer_tensorcore_axis() (tilelang.carver.roller.node.primfuncnode method)": [[23, "tilelang.carver.roller.node.PrimFuncNode.infer_tensorcore_axis"]], "inputs (tilelang.carver.roller.node.node property)": [[23, "tilelang.carver.roller.node.Node.inputs"]], "is_output() (tilelang.carver.roller.node.node method)": [[23, "tilelang.carver.roller.node.Node.is_output"]], "is_output() (tilelang.carver.roller.node.outputnode method)": [[23, "tilelang.carver.roller.node.OutputNode.is_output"]], "is_placeholder() (tilelang.carver.roller.node.node method)": [[23, "tilelang.carver.roller.node.Node.is_placeholder"]], "is_placeholder() (tilelang.carver.roller.node.placeholdernode method)": [[23, "tilelang.carver.roller.node.PlaceHolderNode.is_placeholder"]], "num_outputs() (tilelang.carver.roller.node.node method)": [[23, "tilelang.carver.roller.node.Node.num_outputs"]], "outputs (tilelang.carver.roller.node.node property)": [[23, "tilelang.carver.roller.node.Node.outputs"]], "pre_order_traverse() (in module tilelang.carver.roller.node)": [[23, "tilelang.carver.roller.node.pre_order_traverse"]], "propagate() (tilelang.carver.roller.node.primfuncnode method)": [[23, "tilelang.carver.roller.node.PrimFuncNode.propagate"]], "propagate_inputs() (tilelang.carver.roller.node.primfuncnode method)": [[23, "tilelang.carver.roller.node.PrimFuncNode.propagate_inputs"]], "propagate_inputs_on_reduction() (tilelang.carver.roller.node.primfuncnode method)": [[23, "tilelang.carver.roller.node.PrimFuncNode.propagate_inputs_on_reduction"]], "propagate_outputs() (tilelang.carver.roller.node.primfuncnode method)": [[23, "tilelang.carver.roller.node.PrimFuncNode.propagate_outputs"]], "propagate_reduction_inputs() (tilelang.carver.roller.node.primfuncnode method)": [[23, "tilelang.carver.roller.node.PrimFuncNode.propagate_reduction_inputs"]], "set_dtype() (tilelang.carver.roller.node.node method)": [[23, "tilelang.carver.roller.node.Node.set_dtype"]], "set_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[23, "tilelang.carver.roller.node.PrimFuncNode.set_dtype"]], "set_inputs() (tilelang.carver.roller.node.node method)": [[23, "tilelang.carver.roller.node.Node.set_inputs"]], "set_outputs() (tilelang.carver.roller.node.node method)": [[23, "tilelang.carver.roller.node.Node.set_outputs"]], "set_shape() (tilelang.carver.roller.node.node method)": [[23, "tilelang.carver.roller.node.Node.set_shape"]], "set_tag() (tilelang.carver.roller.node.node method)": [[23, "tilelang.carver.roller.node.Node.set_tag"]], "src_id (tilelang.carver.roller.node.edge attribute)": [[23, "tilelang.carver.roller.node.Edge.src_id"]], "src_node (tilelang.carver.roller.node.edge attribute)": [[23, "tilelang.carver.roller.node.Edge.src_node"]], "tilelang.carver.roller.node": [[23, "module-tilelang.carver.roller.node"]], "topo_order() (in module tilelang.carver.roller.node)": [[23, "tilelang.carver.roller.node.topo_order"]], "update_tags() (tilelang.carver.roller.node.node method)": [[23, "tilelang.carver.roller.node.Node.update_tags"]], "tilelang.carver.roller.policy": [[24, "module-tilelang.carver.roller.policy"]], "coalesced_factor() (in module tilelang.carver.roller.policy.common)": [[25, "tilelang.carver.roller.policy.common.coalesced_factor"]], "coalesced_tensor_shape() (in module tilelang.carver.roller.policy.common)": [[25, "tilelang.carver.roller.policy.common.coalesced_tensor_shape"]], "factorize() (in module tilelang.carver.roller.policy.common)": [[25, "tilelang.carver.roller.policy.common.factorize"]], "get_all_factors() (in module tilelang.carver.roller.policy.common)": [[25, "tilelang.carver.roller.policy.common.get_all_factors"]], "tilelang.carver.roller.policy.common": [[25, "module-tilelang.carver.roller.policy.common"]], "defaultpolicy (class in tilelang.carver.roller.policy.default)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy"]], "arch (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.arch"]], "assign_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.assign_block_size"]], "check_tile_shape_isvalid() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.check_tile_shape_isvalid"]], "compute_node_stride_map() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_node_stride_map"]], "compute_tile_dict() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_tile_dict"]], "compute_workload_per_item() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_workload_per_item"]], "dfs_smem_tile() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.dfs_smem_tile"]], "emit_config() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.emit_config"]], "from_output_nodes() (tilelang.carver.roller.policy.default.defaultpolicy class method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.from_output_nodes"]], "from_prim_func() (tilelang.carver.roller.policy.default.defaultpolicy class method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.from_prim_func"]], "func (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.func"]], "get_base_tile() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.get_base_tile"]], "get_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.get_block_size"]], "get_node_reduce_step_candidates() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.get_node_reduce_step_candidates"]], "infer_node_smem_usage() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.infer_node_smem_usage"]], "nodes (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.nodes"]], "plan_rasterization() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.plan_rasterization"]], "recommend_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.recommend_block_size"]], "score_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.score_block_size"]], "tags (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[26, "tilelang.carver.roller.policy.default.DefaultPolicy.tags"]], "tilelang.carver.roller.policy.default": [[26, "module-tilelang.carver.roller.policy.default"]], "tensorcorepolicy (class in tilelang.carver.roller.policy.tensorcore)": [[27, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy"]], "block_reduction_depth (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[27, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.block_reduction_depth"]], "check_tile_shape_isvalid() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[27, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.check_tile_shape_isvalid"]], "compute_node_stride_map() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[27, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.compute_node_stride_map"]], "get_node_reduce_step_candidates() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[27, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.get_node_reduce_step_candidates"]], "infer_node_smem_usage() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[27, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.infer_node_smem_usage"]], "pipeline_stage (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[27, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.pipeline_stage"]], "plan_rasterization() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[27, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.plan_rasterization"]], "tilelang.carver.roller.policy.tensorcore": [[27, "module-tilelang.carver.roller.policy.tensorcore"]], "use_async_copy (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[27, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.use_async_copy"]], "wmma_k (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[27, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.wmma_k"]], "norasterization (class in tilelang.carver.roller.rasterization)": [[28, "tilelang.carver.roller.rasterization.NoRasterization"]], "rasterization (class in tilelang.carver.roller.rasterization)": [[28, "tilelang.carver.roller.rasterization.Rasterization"]], "rasterization2dcolumn (class in tilelang.carver.roller.rasterization)": [[28, "tilelang.carver.roller.rasterization.Rasterization2DColumn"]], "rasterization2drow (class in tilelang.carver.roller.rasterization)": [[28, "tilelang.carver.roller.rasterization.Rasterization2DRow"]], "get_code() (tilelang.carver.roller.rasterization.norasterization method)": [[28, "tilelang.carver.roller.rasterization.NoRasterization.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization method)": [[28, "tilelang.carver.roller.rasterization.Rasterization.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization2dcolumn method)": [[28, "tilelang.carver.roller.rasterization.Rasterization2DColumn.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization2drow method)": [[28, "tilelang.carver.roller.rasterization.Rasterization2DRow.get_code"]], "get_device_function() (tilelang.carver.roller.rasterization.rasterization2dcolumn method)": [[28, "tilelang.carver.roller.rasterization.Rasterization2DColumn.get_device_function"]], "panel_width (tilelang.carver.roller.rasterization.rasterization property)": [[28, "tilelang.carver.roller.rasterization.Rasterization.panel_width"]], "panel_width_ (tilelang.carver.roller.rasterization.rasterization attribute)": [[28, "tilelang.carver.roller.rasterization.Rasterization.panel_width_"]], "tilelang.carver.roller.rasterization": [[28, "module-tilelang.carver.roller.rasterization"]], "tilelang.carver.roller.shape_inference": [[29, "module-tilelang.carver.roller.shape_inference"]], "inputshapeinference (class in tilelang.carver.roller.shape_inference.common)": [[30, "tilelang.carver.roller.shape_inference.common.InputShapeInference"]], "statement (class in tilelang.carver.roller.shape_inference.common)": [[30, "tilelang.carver.roller.shape_inference.common.Statement"]], "get_input_exprs() (tilelang.carver.roller.shape_inference.common.inputshapeinference method)": [[30, "tilelang.carver.roller.shape_inference.common.InputShapeInference.get_input_exprs"]], "infer() (tilelang.carver.roller.shape_inference.common.inputshapeinference method)": [[30, "tilelang.carver.roller.shape_inference.common.InputShapeInference.infer"]], "tilelang.carver.roller.shape_inference.common": [[30, "module-tilelang.carver.roller.shape_inference.common"]], "dependencyanalysis (class in tilelang.carver.roller.shape_inference.tir)": [[31, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis"]], "inputshapeinference (class in tilelang.carver.roller.shape_inference.tir)": [[31, "tilelang.carver.roller.shape_inference.tir.InputShapeInference"]], "statement (class in tilelang.carver.roller.shape_inference.tir)": [[31, "tilelang.carver.roller.shape_inference.tir.Statement"]], "tensordepnode (class in tilelang.carver.roller.shape_inference.tir)": [[31, "tilelang.carver.roller.shape_inference.tir.TensorDepNode"]], "add_next() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[31, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.add_next"]], "add_prev() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[31, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.add_prev"]], "analyze() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[31, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.analyze"]], "construct_dependency_target() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[31, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.construct_dependency_target"]], "deduplicate() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[31, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.deduplicate"]], "find_path_from_source() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[31, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.find_path_from_source"]], "get_analyzer_by_tir() (in module tilelang.carver.roller.shape_inference.tir)": [[31, "tilelang.carver.roller.shape_inference.tir.get_analyzer_by_tir"]], "get_input_exprs() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[31, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.get_input_exprs"]], "get_or_create_node() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[31, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.get_or_create_node"]], "infer() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[31, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.infer"]], "make_reverse() (tilelang.carver.roller.shape_inference.tir.statement method)": [[31, "tilelang.carver.roller.shape_inference.tir.Statement.make_reverse"]], "print_dependencies() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[31, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.print_dependencies"]], "region_exist_in_list() (in module tilelang.carver.roller.shape_inference.tir)": [[31, "tilelang.carver.roller.shape_inference.tir.region_exist_in_list"]], "tilelang.carver.roller.shape_inference.tir": [[31, "module-tilelang.carver.roller.shape_inference.tir"]], "traverse_dependencies() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[31, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.traverse_dependencies"]], "walk_indice() (in module tilelang.carver.roller.shape_inference.tir)": [[31, "tilelang.carver.roller.shape_inference.tir.walk_indice"]], "tilelang.carver.template": [[32, "module-tilelang.carver.template"]], "basetemplate (class in tilelang.carver.template.base)": [[33, "tilelang.carver.template.base.BaseTemplate"]], "arch (tilelang.carver.template.base.basetemplate property)": [[33, "tilelang.carver.template.base.BaseTemplate.arch"]], "equivalent_function() (tilelang.carver.template.base.basetemplate method)": [[33, "tilelang.carver.template.base.BaseTemplate.equivalent_function"]], "get_hardware_aware_configs() (tilelang.carver.template.base.basetemplate method)": [[33, "tilelang.carver.template.base.BaseTemplate.get_hardware_aware_configs"]], "has_arch() (tilelang.carver.template.base.basetemplate method)": [[33, "tilelang.carver.template.base.BaseTemplate.has_arch"]], "initialize_function() (tilelang.carver.template.base.basetemplate method)": [[33, "tilelang.carver.template.base.BaseTemplate.initialize_function"]], "is_ampere_arch() (tilelang.carver.template.base.basetemplate method)": [[33, "tilelang.carver.template.base.BaseTemplate.is_ampere_arch"]], "is_cdna_arch() (tilelang.carver.template.base.basetemplate method)": [[33, "tilelang.carver.template.base.BaseTemplate.is_cdna_arch"]], "is_volta_arch() (tilelang.carver.template.base.basetemplate method)": [[33, "tilelang.carver.template.base.BaseTemplate.is_volta_arch"]], "output_nodes (tilelang.carver.template.base.basetemplate property)": [[33, "tilelang.carver.template.base.BaseTemplate.output_nodes"]], "recommend_hints() (tilelang.carver.template.base.basetemplate method)": [[33, "tilelang.carver.template.base.BaseTemplate.recommend_hints"]], "set_function() (tilelang.carver.template.base.basetemplate method)": [[33, "tilelang.carver.template.base.BaseTemplate.set_function"]], "set_output_nodes() (tilelang.carver.template.base.basetemplate method)": [[33, "tilelang.carver.template.base.BaseTemplate.set_output_nodes"]], "tilelang.carver.template.base": [[33, "module-tilelang.carver.template.base"]], "with_arch() (tilelang.carver.template.base.basetemplate method)": [[33, "tilelang.carver.template.base.BaseTemplate.with_arch"]], "c (tilelang.carver.template.conv.convtemplate attribute)": [[34, "id0"], [34, "tilelang.carver.template.conv.ConvTemplate.C"]], "convtemplate (class in tilelang.carver.template.conv)": [[34, "tilelang.carver.template.conv.ConvTemplate"]], "d (tilelang.carver.template.conv.convtemplate attribute)": [[34, "id1"], [34, "tilelang.carver.template.conv.ConvTemplate.D"]], "f (tilelang.carver.template.conv.convtemplate attribute)": [[34, "id2"], [34, "tilelang.carver.template.conv.ConvTemplate.F"]], "h (tilelang.carver.template.conv.convtemplate attribute)": [[34, "id3"], [34, "tilelang.carver.template.conv.ConvTemplate.H"]], "k (tilelang.carver.template.conv.convtemplate attribute)": [[34, "id4"], [34, "tilelang.carver.template.conv.ConvTemplate.K"]], "n (tilelang.carver.template.conv.convtemplate attribute)": [[34, "id5"], [34, "tilelang.carver.template.conv.ConvTemplate.N"]], "p (tilelang.carver.template.conv.convtemplate attribute)": [[34, "id6"], [34, "tilelang.carver.template.conv.ConvTemplate.P"]], "s (tilelang.carver.template.conv.convtemplate attribute)": [[34, "id7"], [34, "tilelang.carver.template.conv.ConvTemplate.S"]], "w (tilelang.carver.template.conv.convtemplate attribute)": [[34, "id8"], [34, "tilelang.carver.template.conv.ConvTemplate.W"]], "accum_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[34, "id9"], [34, "tilelang.carver.template.conv.ConvTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.conv.convtemplate property)": [[34, "tilelang.carver.template.conv.ConvTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.conv.convtemplate method)": [[34, "tilelang.carver.template.conv.ConvTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[34, "id10"], [34, "tilelang.carver.template.conv.ConvTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.conv.convtemplate method)": [[34, "tilelang.carver.template.conv.ConvTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[34, "id11"], [34, "tilelang.carver.template.conv.ConvTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.conv.convtemplate method)": [[34, "tilelang.carver.template.conv.ConvTemplate.params_as_dict"]], "tilelang.carver.template.conv": [[34, "module-tilelang.carver.template.conv"]], "with_bias (tilelang.carver.template.conv.convtemplate attribute)": [[34, "id12"], [34, "tilelang.carver.template.conv.ConvTemplate.with_bias"]], "elementwisetemplate (class in tilelang.carver.template.elementwise)": [[35, "tilelang.carver.template.elementwise.ElementwiseTemplate"]], "class_attributes (tilelang.carver.template.elementwise.elementwisetemplate property)": [[35, "tilelang.carver.template.elementwise.ElementwiseTemplate.class_attributes"]], "dtype (tilelang.carver.template.elementwise.elementwisetemplate attribute)": [[35, "id0"], [35, "tilelang.carver.template.elementwise.ElementwiseTemplate.dtype"]], "get_hardware_aware_configs() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[35, "tilelang.carver.template.elementwise.ElementwiseTemplate.get_hardware_aware_configs"]], "initialize_function() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[35, "tilelang.carver.template.elementwise.ElementwiseTemplate.initialize_function"]], "params_as_dict() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[35, "tilelang.carver.template.elementwise.ElementwiseTemplate.params_as_dict"]], "shape (tilelang.carver.template.elementwise.elementwisetemplate attribute)": [[35, "id1"], [35, "tilelang.carver.template.elementwise.ElementwiseTemplate.shape"]], "tilelang.carver.template.elementwise": [[35, "module-tilelang.carver.template.elementwise"]], "flashattentiontemplate (class in tilelang.carver.template.flashattention)": [[36, "tilelang.carver.template.flashattention.FlashAttentionTemplate"]], "accum_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[36, "tilelang.carver.template.flashattention.FlashAttentionTemplate.accum_dtype"]], "batch_size (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[36, "tilelang.carver.template.flashattention.FlashAttentionTemplate.batch_size"]], "class_attributes (tilelang.carver.template.flashattention.flashattentiontemplate property)": [[36, "tilelang.carver.template.flashattention.FlashAttentionTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[36, "tilelang.carver.template.flashattention.FlashAttentionTemplate.get_hardware_aware_configs"]], "head_dim (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[36, "tilelang.carver.template.flashattention.FlashAttentionTemplate.head_dim"]], "in_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[36, "tilelang.carver.template.flashattention.FlashAttentionTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[36, "tilelang.carver.template.flashattention.FlashAttentionTemplate.initialize_function"]], "is_causal (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[36, "tilelang.carver.template.flashattention.FlashAttentionTemplate.is_causal"]], "num_heads (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[36, "tilelang.carver.template.flashattention.FlashAttentionTemplate.num_heads"]], "out_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[36, "tilelang.carver.template.flashattention.FlashAttentionTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[36, "tilelang.carver.template.flashattention.FlashAttentionTemplate.params_as_dict"]], "seq_kv_length (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[36, "tilelang.carver.template.flashattention.FlashAttentionTemplate.seq_kv_length"]], "seq_length (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[36, "tilelang.carver.template.flashattention.FlashAttentionTemplate.seq_length"]], "tilelang.carver.template.flashattention": [[36, "module-tilelang.carver.template.flashattention"]], "gemvtemplate (class in tilelang.carver.template.gemv)": [[37, "tilelang.carver.template.gemv.GEMVTemplate"]], "k (tilelang.carver.template.gemv.gemvtemplate attribute)": [[37, "tilelang.carver.template.gemv.GEMVTemplate.K"]], "n (tilelang.carver.template.gemv.gemvtemplate attribute)": [[37, "tilelang.carver.template.gemv.GEMVTemplate.N"]], "accum_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[37, "tilelang.carver.template.gemv.GEMVTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.gemv.gemvtemplate property)": [[37, "tilelang.carver.template.gemv.GEMVTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.gemv.gemvtemplate method)": [[37, "tilelang.carver.template.gemv.GEMVTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[37, "tilelang.carver.template.gemv.GEMVTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.gemv.gemvtemplate method)": [[37, "tilelang.carver.template.gemv.GEMVTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[37, "tilelang.carver.template.gemv.GEMVTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.gemv.gemvtemplate method)": [[37, "tilelang.carver.template.gemv.GEMVTemplate.params_as_dict"]], "tilelang.carver.template.gemv": [[37, "module-tilelang.carver.template.gemv"]], "trans_b (tilelang.carver.template.gemv.gemvtemplate attribute)": [[37, "tilelang.carver.template.gemv.GEMVTemplate.trans_B"]], "with_bias (tilelang.carver.template.gemv.gemvtemplate attribute)": [[37, "tilelang.carver.template.gemv.GEMVTemplate.with_bias"]], "generalreductiontemplate (class in tilelang.carver.template.general_reduce)": [[38, "tilelang.carver.template.general_reduce.GeneralReductionTemplate"]], "class_attributes (tilelang.carver.template.general_reduce.generalreductiontemplate property)": [[38, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.class_attributes"]], "dtype (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[38, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.dtype"]], "get_hardware_aware_configs() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[38, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.get_hardware_aware_configs"]], "initialize_function() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[38, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.initialize_function"]], "params_as_dict() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[38, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.params_as_dict"]], "shape (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[38, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.shape"]], "structure (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[38, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.structure"]], "tilelang.carver.template.general_reduce": [[38, "module-tilelang.carver.template.general_reduce"]], "k (tilelang.carver.template.matmul.matmultemplate attribute)": [[39, "id0"], [39, "tilelang.carver.template.matmul.MatmulTemplate.K"]], "m (tilelang.carver.template.matmul.matmultemplate attribute)": [[39, "id1"], [39, "tilelang.carver.template.matmul.MatmulTemplate.M"]], "matmultemplate (class in tilelang.carver.template.matmul)": [[39, "tilelang.carver.template.matmul.MatmulTemplate"]], "n (tilelang.carver.template.matmul.matmultemplate attribute)": [[39, "id2"], [39, "tilelang.carver.template.matmul.MatmulTemplate.N"]], "accum_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[39, "id3"], [39, "tilelang.carver.template.matmul.MatmulTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.matmul.matmultemplate property)": [[39, "tilelang.carver.template.matmul.MatmulTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.matmul.matmultemplate method)": [[39, "tilelang.carver.template.matmul.MatmulTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[39, "id4"], [39, "tilelang.carver.template.matmul.MatmulTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.matmul.matmultemplate method)": [[39, "tilelang.carver.template.matmul.MatmulTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[39, "id5"], [39, "tilelang.carver.template.matmul.MatmulTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.matmul.matmultemplate method)": [[39, "tilelang.carver.template.matmul.MatmulTemplate.params_as_dict"]], "tilelang.carver.template.matmul": [[39, "module-tilelang.carver.template.matmul"]], "trans_a (tilelang.carver.template.matmul.matmultemplate attribute)": [[39, "id6"], [39, "tilelang.carver.template.matmul.MatmulTemplate.trans_A"]], "trans_b (tilelang.carver.template.matmul.matmultemplate attribute)": [[39, "id7"], [39, "tilelang.carver.template.matmul.MatmulTemplate.trans_B"]], "with_bias (tilelang.carver.template.matmul.matmultemplate attribute)": [[39, "id8"], [39, "tilelang.carver.template.matmul.MatmulTemplate.with_bias"]], "get_rasterization_code() (in module tilelang.carver.utils)": [[40, "tilelang.carver.utils.get_rasterization_code"]], "get_roller_hints_from_func() (in module tilelang.carver.utils)": [[40, "tilelang.carver.utils.get_roller_hints_from_func"]], "get_roller_hints_from_output_nodes() (in module tilelang.carver.utils)": [[40, "tilelang.carver.utils.get_roller_hints_from_output_nodes"]], "retrieve_func_from_module() (in module tilelang.carver.utils)": [[40, "tilelang.carver.utils.retrieve_func_from_module"]], "tilelang.carver.utils": [[40, "module-tilelang.carver.utils"]], "tilelang.common": [[41, "module-tilelang.common"]], "interwarptransform (tilelang.common.transform_kind.transformkind attribute)": [[42, "tilelang.common.transform_kind.TransformKind.InterWarpTransform"]], "intrawarptransform (tilelang.common.transform_kind.transformkind attribute)": [[42, "tilelang.common.transform_kind.TransformKind.IntraWarpTransform"]], "ldmatrixtransform (tilelang.common.transform_kind.transformkind attribute)": [[42, "tilelang.common.transform_kind.TransformKind.LDMatrixTransform"]], "nontransform (tilelang.common.transform_kind.transformkind attribute)": [[42, "tilelang.common.transform_kind.TransformKind.NonTransform"]], "transformkind (class in tilelang.common.transform_kind)": [[42, "tilelang.common.transform_kind.TransformKind"]], "is_inter_warp_transform() (tilelang.common.transform_kind.transformkind method)": [[42, "tilelang.common.transform_kind.TransformKind.is_inter_warp_transform"]], "is_intra_warp_transform() (tilelang.common.transform_kind.transformkind method)": [[42, "tilelang.common.transform_kind.TransformKind.is_intra_warp_transform"]], "is_ld_matrix_transform() (tilelang.common.transform_kind.transformkind method)": [[42, "tilelang.common.transform_kind.TransformKind.is_ld_matrix_transform"]], "is_non_transform() (tilelang.common.transform_kind.transformkind method)": [[42, "tilelang.common.transform_kind.TransformKind.is_non_transform"]], "tilelang.common.transform_kind": [[42, "module-tilelang.common.transform_kind"]], "tilelang.contrib": [[43, "module-tilelang.contrib"]], "create_executable() (in module tilelang.contrib.cc)": [[44, "tilelang.contrib.cc.create_executable"]], "create_shared() (in module tilelang.contrib.cc)": [[44, "tilelang.contrib.cc.create_shared"]], "create_staticlib() (in module tilelang.contrib.cc)": [[44, "tilelang.contrib.cc.create_staticlib"]], "cross_compiler() (in module tilelang.contrib.cc)": [[44, "tilelang.contrib.cc.cross_compiler"]], "get_cc() (in module tilelang.contrib.cc)": [[44, "tilelang.contrib.cc.get_cc"]], "get_cplus_compiler() (in module tilelang.contrib.cc)": [[44, "tilelang.contrib.cc.get_cplus_compiler"]], "get_global_symbol_section_map() (in module tilelang.contrib.cc)": [[44, "tilelang.contrib.cc.get_global_symbol_section_map"]], "get_target_by_dump_machine() (in module tilelang.contrib.cc)": [[44, "tilelang.contrib.cc.get_target_by_dump_machine"]], "tilelang.contrib.cc": [[44, "module-tilelang.contrib.cc"]], "convert_func() (in module tilelang.contrib.dlpack)": [[45, "tilelang.contrib.dlpack.convert_func"]], "tilelang.contrib.dlpack": [[45, "module-tilelang.contrib.dlpack"]], "to_pytorch_func() (in module tilelang.contrib.dlpack)": [[45, "tilelang.contrib.dlpack.to_pytorch_func"]], "compile_hip() (in module tilelang.contrib.hipcc)": [[46, "tilelang.contrib.hipcc.compile_hip"]], "tilelang.contrib.hipcc": [[46, "module-tilelang.contrib.hipcc"]], "callback_libdevice_path() (in module tilelang.contrib.nvcc)": [[47, "tilelang.contrib.nvcc.callback_libdevice_path"]], "compile_cuda() (in module tilelang.contrib.nvcc)": [[47, "tilelang.contrib.nvcc.compile_cuda"]], "find_cuda_path() (in module tilelang.contrib.nvcc)": [[47, "tilelang.contrib.nvcc.find_cuda_path"]], "get_cuda_version() (in module tilelang.contrib.nvcc)": [[47, "tilelang.contrib.nvcc.get_cuda_version"]], "get_nvcc_compiler() (in module tilelang.contrib.nvcc)": [[47, "tilelang.contrib.nvcc.get_nvcc_compiler"]], "have_cudagraph() (in module tilelang.contrib.nvcc)": [[47, "tilelang.contrib.nvcc.have_cudagraph"]], "have_fp16() (in module tilelang.contrib.nvcc)": [[47, "tilelang.contrib.nvcc.have_fp16"]], "have_int8() (in module tilelang.contrib.nvcc)": [[47, "tilelang.contrib.nvcc.have_int8"]], "have_tensorcore() (in module tilelang.contrib.nvcc)": [[47, "tilelang.contrib.nvcc.have_tensorcore"]], "parse_compute_version() (in module tilelang.contrib.nvcc)": [[47, "tilelang.contrib.nvcc.parse_compute_version"]], "tilelang.contrib.nvcc": [[47, "module-tilelang.contrib.nvcc"]], "find_lld() (in module tilelang.contrib.rocm)": [[49, "tilelang.contrib.rocm.find_lld"]], "find_rocm_path() (in module tilelang.contrib.rocm)": [[49, "tilelang.contrib.rocm.find_rocm_path"]], "have_matrixcore() (in module tilelang.contrib.rocm)": [[49, "tilelang.contrib.rocm.have_matrixcore"]], "parse_compute_version() (in module tilelang.contrib.rocm)": [[49, "tilelang.contrib.rocm.parse_compute_version"]], "rocm_link() (in module tilelang.contrib.rocm)": [[49, "tilelang.contrib.rocm.rocm_link"]], "tilelang.contrib.rocm": [[49, "module-tilelang.contrib.rocm"]], "tilelang.engine": [[50, "module-tilelang.engine"]], "register_cuda_postproc() (in module tilelang.engine.callback)": [[51, "tilelang.engine.callback.register_cuda_postproc"]], "register_cuda_postproc_callback() (in module tilelang.engine.callback)": [[51, "tilelang.engine.callback.register_cuda_postproc_callback"]], "register_hip_postproc() (in module tilelang.engine.callback)": [[51, "tilelang.engine.callback.register_hip_postproc"]], "register_hip_postproc_callback() (in module tilelang.engine.callback)": [[51, "tilelang.engine.callback.register_hip_postproc_callback"]], "tilelang.engine.callback": [[51, "module-tilelang.engine.callback"]], "canon_target_host() (in module tilelang.engine.lower)": [[52, "tilelang.engine.lower.canon_target_host"]], "device_codegen() (in module tilelang.engine.lower)": [[52, "tilelang.engine.lower.device_codegen"]], "device_codegen_without_compile() (in module tilelang.engine.lower)": [[52, "tilelang.engine.lower.device_codegen_without_compile"]], "extrac_params() (in module tilelang.engine.lower)": [[52, "tilelang.engine.lower.extrac_params"]], "get_device_call() (in module tilelang.engine.lower)": [[52, "tilelang.engine.lower.get_device_call"]], "get_host_call() (in module tilelang.engine.lower)": [[52, "tilelang.engine.lower.get_host_call"]], "has_device_kernel_launch() (in module tilelang.engine.lower)": [[52, "tilelang.engine.lower.has_device_kernel_launch"]], "host_codegen() (in module tilelang.engine.lower)": [[52, "tilelang.engine.lower.host_codegen"]], "is_cpu_device_backend() (in module tilelang.engine.lower)": [[52, "tilelang.engine.lower.is_cpu_device_backend"]], "is_device_call() (in module tilelang.engine.lower)": [[52, "tilelang.engine.lower.is_device_call"]], "is_device_call_c_device() (in module tilelang.engine.lower)": [[52, "tilelang.engine.lower.is_device_call_c_device"]], "lower() (in module tilelang.engine.lower)": [[52, "tilelang.engine.lower.lower"]], "tilelang.engine.lower": [[52, "module-tilelang.engine.lower"]], "compiledartifact (class in tilelang.engine.param)": [[53, "tilelang.engine.param.CompiledArtifact"]], "kernelparam (class in tilelang.engine.param)": [[53, "tilelang.engine.param.KernelParam"]], "device_mod (tilelang.engine.param.compiledartifact attribute)": [[53, "tilelang.engine.param.CompiledArtifact.device_mod"]], "dtype (tilelang.engine.param.kernelparam attribute)": [[53, "tilelang.engine.param.KernelParam.dtype"]], "from_buffer() (tilelang.engine.param.kernelparam class method)": [[53, "tilelang.engine.param.KernelParam.from_buffer"]], "from_var() (tilelang.engine.param.kernelparam class method)": [[53, "tilelang.engine.param.KernelParam.from_var"]], "host_mod (tilelang.engine.param.compiledartifact attribute)": [[53, "tilelang.engine.param.CompiledArtifact.host_mod"]], "is_boolean() (tilelang.engine.param.kernelparam method)": [[53, "tilelang.engine.param.KernelParam.is_boolean"]], "is_float8() (tilelang.engine.param.kernelparam method)": [[53, "tilelang.engine.param.KernelParam.is_float8"]], "is_scalar() (tilelang.engine.param.kernelparam method)": [[53, "tilelang.engine.param.KernelParam.is_scalar"]], "is_unsigned() (tilelang.engine.param.kernelparam method)": [[53, "tilelang.engine.param.KernelParam.is_unsigned"]], "kernel_source (tilelang.engine.param.compiledartifact attribute)": [[53, "tilelang.engine.param.CompiledArtifact.kernel_source"]], "params (tilelang.engine.param.compiledartifact attribute)": [[53, "tilelang.engine.param.CompiledArtifact.params"]], "rt_mod (tilelang.engine.param.compiledartifact attribute)": [[53, "tilelang.engine.param.CompiledArtifact.rt_mod"]], "shape (tilelang.engine.param.kernelparam attribute)": [[53, "tilelang.engine.param.KernelParam.shape"]], "tilelang.engine.param": [[53, "module-tilelang.engine.param"]], "lowerandlegalize() (in module tilelang.engine.phase)": [[54, "tilelang.engine.phase.LowerAndLegalize"]], "optimizefortarget() (in module tilelang.engine.phase)": [[54, "tilelang.engine.phase.OptimizeForTarget"]], "allow_fence_proxy() (in module tilelang.engine.phase)": [[54, "tilelang.engine.phase.allow_fence_proxy"]], "allow_global_thread_synchronization() (in module tilelang.engine.phase)": [[54, "tilelang.engine.phase.allow_global_thread_synchronization"]], "allow_tma_and_warp_specialized() (in module tilelang.engine.phase)": [[54, "tilelang.engine.phase.allow_tma_and_warp_specialized"]], "allow_vectorize() (in module tilelang.engine.phase)": [[54, "tilelang.engine.phase.allow_vectorize"]], "allow_warp_specialized() (in module tilelang.engine.phase)": [[54, "tilelang.engine.phase.allow_warp_specialized"]], "should_enable_aggressive_merge() (in module tilelang.engine.phase)": [[54, "tilelang.engine.phase.should_enable_aggressive_merge"]], "tilelang.engine.phase": [[54, "module-tilelang.engine.phase"]], "disable_cache() (in module tilelang.env)": [[55, "tilelang.env.disable_cache"]], "enable_cache() (in module tilelang.env)": [[55, "tilelang.env.enable_cache"]], "is_cache_enabled() (in module tilelang.env)": [[55, "tilelang.env.is_cache_enabled"]], "tilelang.env": [[55, "module-tilelang.env"]], "tilelang.intrinsics": [[56, "module-tilelang.intrinsics"]], "make_mfma_swizzle_layout() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.make_mfma_swizzle_layout"]], "shared_16x16_to_ldmatrix_64x4_layout() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.shared_16x16_to_ldmatrix_64x4_layout"]], "shared_16x16_to_local_64x4_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_A"]], "shared_16x16_to_local_64x4_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_B"]], "shared_16x16_to_local_64x4_layout_c() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_C"]], "shared_16x16_to_local_64x4_layout_k_n() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_k_n"]], "shared_16x16_to_local_64x4_layout_m_n() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_m_n"]], "shared_16x16_to_local_64x4_layout_n_k() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_n_k"]], "shared_16x16_to_local_64x4_layout_n_m() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_n_m"]], "shared_16x32_to_local_64x8_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.shared_16x32_to_local_64x8_layout_A"]], "shared_16x32_to_local_64x8_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.shared_16x32_to_local_64x8_layout_B"]], "shared_16x4_to_local_64x1_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.shared_16x4_to_local_64x1_layout_A"]], "shared_16x64_to_local_64x16_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.shared_16x64_to_local_64x16_layout_A"]], "shared_16x64_to_local_64x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.shared_16x64_to_local_64x16_layout_B"]], "shared_4x16_to_local_64x1_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.shared_4x16_to_local_64x1_layout_B"]], "thread_id_shared_access_64x16_to_16x64_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x16_to_16x64_layout_A"]], "thread_id_shared_access_64x16_to_16x64_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x16_to_16x64_layout_B"]], "thread_id_shared_access_64x1_to_16x4_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x1_to_16x4_layout_A"]], "thread_id_shared_access_64x1_to_4x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x1_to_4x16_layout_B"]], "thread_id_shared_access_64x4_to_16x16_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_A"]], "thread_id_shared_access_64x4_to_16x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_B"]], "thread_id_shared_access_64x4_to_16x16_layout_c_m_n() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_C_m_n"]], "thread_id_shared_access_64x4_to_16x16_layout_c_n_m() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_C_n_m"]], "thread_id_shared_access_64x8_to_16x32_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x8_to_16x32_layout_A"]], "thread_id_shared_access_64x8_to_16x32_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[57, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x8_to_16x32_layout_B"]], "tilelang.intrinsics.mfma_layout": [[57, "module-tilelang.intrinsics.mfma_layout"]], "m_dim (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.M_DIM"]], "matrixcoreintrinemitter (class in tilelang.intrinsics.mfma_macro_generator)": [[58, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter"]], "n_dim (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.N_DIM"]], "warp_size (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.WARP_SIZE"]], "dtype_abbrv (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.dtype_abbrv"]], "extract_thread_binding() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[58, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.extract_thread_binding"]], "get_ldmatrix_index_map() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[58, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.get_ldmatrix_index_map"]], "is_m_first (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.is_m_first"]], "k_pack (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.k_pack"]], "ldmatrix_a() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[58, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.ldmatrix_a"]], "ldmatrix_b() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[58, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.ldmatrix_b"]], "mfma() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[58, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.mfma"]], "stmatrix() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[58, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.stmatrix"]], "tilelang.intrinsics.mfma_macro_generator": [[58, "module-tilelang.intrinsics.mfma_macro_generator"]], "get_swizzle_layout() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.get_swizzle_layout"]], "ldmatrix_16x32_to_shared_16x32_layout_a() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.ldmatrix_16x32_to_shared_16x32_layout_a"]], "ldmatrix_16x32_to_shared_16x32_layout_b() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.ldmatrix_16x32_to_shared_16x32_layout_b"]], "ldmatrix_32x16_to_shared_16x32_layout_a() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.ldmatrix_32x16_to_shared_16x32_layout_a"]], "ldmatrix_32x16_to_shared_16x32_layout_b() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.ldmatrix_32x16_to_shared_16x32_layout_b"]], "ldmatrix_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.ldmatrix_32x8_to_shared_16x16_layout"]], "ldmatrix_trans_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.ldmatrix_trans_32x8_to_shared_16x16_layout"]], "make_mma_swizzle_layout() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.make_mma_swizzle_layout"]], "mma_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.mma_32x8_to_shared_16x16_layout"]], "mma_store_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.mma_store_32x8_to_shared_16x16_layout"]], "shared_16x16_to_mma_32x8_layout() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout"]], "shared_16x16_to_mma_32x8_layout_rs() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_rs"]], "shared_16x16_to_mma_32x8_layout_sr() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_sr"]], "shared_16x16_to_mma_32x8_layout_trans() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_trans"]], "shared_16x16_to_mma_32x8_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_smoothlayout"]], "shared_16x32_to_mma_32x16_layout() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.shared_16x32_to_mma_32x16_layout"]], "shared_16x32_to_mma_32x16_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.shared_16x32_to_mma_32x16_smoothlayout"]], "shared_32x16_to_mma_32x16_layout() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.shared_32x16_to_mma_32x16_layout"]], "shared_32x16_to_mma_32x16_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[59, "tilelang.intrinsics.mma_layout.shared_32x16_to_mma_32x16_smoothlayout"]], "tilelang.intrinsics.mma_layout": [[59, "module-tilelang.intrinsics.mma_layout"]], "int4tensorcoreintrinemitter (class in tilelang.intrinsics.mma_macro_generator)": [[60, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter"]], "int4tensorcoreintrinemitterwithladdertransform (class in tilelang.intrinsics.mma_macro_generator)": [[60, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform"]], "m_dim (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.M_DIM"]], "n_dim (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.N_DIM"]], "tensorcoreintrinemitter (class in tilelang.intrinsics.mma_macro_generator)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter"]], "tensorcoreintrinemitterwithladdertransform (class in tilelang.intrinsics.mma_macro_generator)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform"]], "warp_size (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.WARP_SIZE"]], "dtype_abbrv (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.dtype_abbrv"]], "extract_thread_binding() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.extract_thread_binding"]], "get_store_index_map() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.get_store_index_map"]], "is_m_first (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.is_m_first"]], "ldmatrix_a() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.ldmatrix_a"]], "ldmatrix_a() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.ldmatrix_a"]], "ldmatrix_b() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.ldmatrix_b"]], "ldmatrix_b() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.ldmatrix_b"]], "make_mma_load_layout() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.make_mma_load_layout"]], "make_mma_store_layout() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.make_mma_store_layout"]], "mma() (tilelang.intrinsics.mma_macro_generator.int4tensorcoreintrinemitter method)": [[60, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.int4tensorcoreintrinemitterwithladdertransform method)": [[60, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.mma"]], "stmatrix() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[60, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.stmatrix"]], "tilelang.intrinsics.mma_macro_generator": [[60, "module-tilelang.intrinsics.mma_macro_generator"]], "get_ldmatrix_offset() (in module tilelang.intrinsics.utils)": [[61, "tilelang.intrinsics.utils.get_ldmatrix_offset"]], "get_mma_micro_size() (in module tilelang.intrinsics.utils)": [[61, "tilelang.intrinsics.utils.get_mma_micro_size"]], "index_to_coordinates() (in module tilelang.intrinsics.utils)": [[61, "tilelang.intrinsics.utils.index_to_coordinates"]], "mfma_store_index_map() (in module tilelang.intrinsics.utils)": [[61, "tilelang.intrinsics.utils.mfma_store_index_map"]], "mma_store_index_map() (in module tilelang.intrinsics.utils)": [[61, "tilelang.intrinsics.utils.mma_store_index_map"]], "shared_16x16_to_mma_32x8_layout() (in module tilelang.intrinsics.utils)": [[61, "tilelang.intrinsics.utils.shared_16x16_to_mma_32x8_layout"]], "shared_16x32_to_mma_32x16_layout() (in module tilelang.intrinsics.utils)": [[61, "tilelang.intrinsics.utils.shared_16x32_to_mma_32x16_layout"]], "shared_32x16_to_mma_32x16_layout() (in module tilelang.intrinsics.utils)": [[61, "tilelang.intrinsics.utils.shared_32x16_to_mma_32x16_layout"]], "tilelang.intrinsics.utils": [[61, "module-tilelang.intrinsics.utils"]], "compile() (in module tilelang.jit)": [[62, "tilelang.jit.compile"]], "jit() (in module tilelang.jit)": [[62, "tilelang.jit.jit"]], "tilelang.jit": [[62, "module-tilelang.jit"]], "tilelang.jit.adapter": [[63, "module-tilelang.jit.adapter"]], "basekerneladapter (class in tilelang.jit.adapter.base)": [[64, "tilelang.jit.adapter.base.BaseKernelAdapter"]], "func (tilelang.jit.adapter.base.basekerneladapter attribute)": [[64, "tilelang.jit.adapter.base.BaseKernelAdapter.func"]], "get_kernel_source() (tilelang.jit.adapter.base.basekerneladapter method)": [[64, "tilelang.jit.adapter.base.BaseKernelAdapter.get_kernel_source"]], "tilelang.jit.adapter.base": [[64, "module-tilelang.jit.adapter.base"]], "tilelang.jit.adapter.ctypes": [[65, "module-tilelang.jit.adapter.ctypes"]], "ctypeskerneladapter (class in tilelang.jit.adapter.ctypes.adapter)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter"]], "dynamic_symbolic_map (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.dynamic_symbolic_map"]], "from_database() (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter class method)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.from_database"]], "get_kernel_source() (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter method)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.get_kernel_source"]], "ir_module (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.ir_module"]], "is_dynamic (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.is_dynamic"]], "kernel_global_source (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.kernel_global_source"]], "lib (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.lib"]], "lib_code (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.lib_code"]], "libpath (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.libpath"]], "param_dtypes (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.param_dtypes"]], "param_shapes (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.param_shapes"]], "pass_configs (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.pass_configs"]], "prim_func (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.prim_func"]], "srcpath (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.srcpath"]], "target (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.target"]], "tilelang.jit.adapter.ctypes.adapter": [[66, "module-tilelang.jit.adapter.ctypes.adapter"]], "wrapped_source (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[66, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.wrapped_source"]], "tilelang.jit.adapter.cython": [[67, "module-tilelang.jit.adapter.cython"]], "cythonkerneladapter (class in tilelang.jit.adapter.cython.adapter)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter"]], "buffer_device_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.buffer_device_map"]], "buffer_dtype_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.buffer_dtype_map"]], "dynamic_symbolic_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.dynamic_symbolic_map"]], "from_database() (tilelang.jit.adapter.cython.adapter.cythonkerneladapter class method)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.from_database"]], "get_cache_dir() (in module tilelang.jit.adapter.cython.adapter)": [[68, "tilelang.jit.adapter.cython.adapter.get_cache_dir"]], "get_cached_lib() (in module tilelang.jit.adapter.cython.adapter)": [[68, "tilelang.jit.adapter.cython.adapter.get_cached_lib"]], "get_cython_compiler() (in module tilelang.jit.adapter.cython.adapter)": [[68, "tilelang.jit.adapter.cython.adapter.get_cython_compiler"]], "get_kernel_source() (tilelang.jit.adapter.cython.adapter.cythonkerneladapter method)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.get_kernel_source"]], "ir_module (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.ir_module"]], "is_dynamic (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.is_dynamic"]], "kernel_global_source (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.kernel_global_source"]], "lib (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.lib"]], "lib_code (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.lib_code"]], "libpath (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.libpath"]], "pass_configs (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.pass_configs"]], "prim_func (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.prim_func"]], "ptr_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.ptr_map"]], "srcpath (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.srcpath"]], "static_shape_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.static_shape_map"]], "target (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.target"]], "tilelang.jit.adapter.cython.adapter": [[68, "module-tilelang.jit.adapter.cython.adapter"]], "wrapped_source (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[68, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.wrapped_source"]], "cythonkernelwrapper (class in tilelang.jit.adapter.cython.cython_wrapper)": [[69, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper"]], "forward() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[69, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.forward"]], "set_buffer_device_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[69, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_buffer_device_map"]], "set_buffer_dtype_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[69, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_buffer_dtype_map"]], "set_dynamic_symbolic_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[69, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_dynamic_symbolic_map"]], "set_ptr_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[69, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_ptr_map"]], "set_static_shape_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[69, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_static_shape_map"]], "tilelang.jit.adapter.cython.cython_wrapper": [[69, "module-tilelang.jit.adapter.cython.cython_wrapper"]], "torchdlpackkerneladapter (class in tilelang.jit.adapter.dlpack)": [[70, "tilelang.jit.adapter.dlpack.TorchDLPackKernelAdapter"]], "tilelang.jit.adapter.dlpack": [[70, "module-tilelang.jit.adapter.dlpack"]], "librarygenerator (class in tilelang.jit.adapter.libgen)": [[71, "tilelang.jit.adapter.libgen.LibraryGenerator"]], "pylibrarygenerator (class in tilelang.jit.adapter.libgen)": [[71, "tilelang.jit.adapter.libgen.PyLibraryGenerator"]], "assign_pass_configs() (tilelang.jit.adapter.libgen.librarygenerator method)": [[71, "tilelang.jit.adapter.libgen.LibraryGenerator.assign_pass_configs"]], "compile_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[71, "tilelang.jit.adapter.libgen.LibraryGenerator.compile_lib"]], "compile_lib() (tilelang.jit.adapter.libgen.pylibrarygenerator method)": [[71, "tilelang.jit.adapter.libgen.PyLibraryGenerator.compile_lib"]], "culib (tilelang.jit.adapter.libgen.pylibrarygenerator attribute)": [[71, "tilelang.jit.adapter.libgen.PyLibraryGenerator.culib"]], "get_lib_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[71, "tilelang.jit.adapter.libgen.LibraryGenerator.get_lib_path"]], "get_source_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[71, "tilelang.jit.adapter.libgen.LibraryGenerator.get_source_path"]], "host_func (tilelang.jit.adapter.libgen.pylibrarygenerator attribute)": [[71, "tilelang.jit.adapter.libgen.PyLibraryGenerator.host_func"]], "import_from_file() (tilelang.jit.adapter.libgen.pylibrarygenerator static method)": [[71, "tilelang.jit.adapter.libgen.PyLibraryGenerator.import_from_file"]], "lib_code (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[71, "tilelang.jit.adapter.libgen.LibraryGenerator.lib_code"]], "libpath (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[71, "tilelang.jit.adapter.libgen.LibraryGenerator.libpath"]], "load_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[71, "tilelang.jit.adapter.libgen.LibraryGenerator.load_lib"]], "load_lib() (tilelang.jit.adapter.libgen.pylibrarygenerator method)": [[71, "tilelang.jit.adapter.libgen.PyLibraryGenerator.load_lib"]], "pass_configs (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[71, "tilelang.jit.adapter.libgen.LibraryGenerator.pass_configs"]], "pymodule (tilelang.jit.adapter.libgen.pylibrarygenerator attribute)": [[71, "tilelang.jit.adapter.libgen.PyLibraryGenerator.pymodule"]], "remove_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[71, "tilelang.jit.adapter.libgen.LibraryGenerator.remove_lib"]], "set_lib_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[71, "tilelang.jit.adapter.libgen.LibraryGenerator.set_lib_path"]], "set_src_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[71, "tilelang.jit.adapter.libgen.LibraryGenerator.set_src_path"]], "srcpath (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[71, "tilelang.jit.adapter.libgen.LibraryGenerator.srcpath"]], "tilelang.jit.adapter.libgen": [[71, "module-tilelang.jit.adapter.libgen"]], "update_host_func() (tilelang.jit.adapter.libgen.pylibrarygenerator method)": [[71, "tilelang.jit.adapter.libgen.PyLibraryGenerator.update_host_func"]], "update_lib_code() (tilelang.jit.adapter.libgen.librarygenerator method)": [[71, "tilelang.jit.adapter.libgen.LibraryGenerator.update_lib_code"]], "tilelang.jit.adapter.nvrtc": [[72, "module-tilelang.jit.adapter.nvrtc"]], "nvrtckerneladapter (class in tilelang.jit.adapter.nvrtc.adapter)": [[73, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter"]], "from_database() (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter class method)": [[73, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.from_database"]], "get_kernel_source() (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter method)": [[73, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.get_kernel_source"]], "kernels (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter attribute)": [[73, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.kernels"]], "prim_func (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter property)": [[73, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.prim_func"]], "pymodule (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter attribute)": [[73, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.pymodule"]], "tilelang.jit.adapter.nvrtc.adapter": [[73, "module-tilelang.jit.adapter.nvrtc.adapter"]], "get_annotated_mod() (in module tilelang.jit.adapter.utils)": [[74, "tilelang.jit.adapter.utils.get_annotated_mod"]], "is_cpu_target() (in module tilelang.jit.adapter.utils)": [[74, "tilelang.jit.adapter.utils.is_cpu_target"]], "is_cuda_target() (in module tilelang.jit.adapter.utils)": [[74, "tilelang.jit.adapter.utils.is_cuda_target"]], "is_hip_target() (in module tilelang.jit.adapter.utils)": [[74, "tilelang.jit.adapter.utils.is_hip_target"]], "match_declare_kernel() (in module tilelang.jit.adapter.utils)": [[74, "tilelang.jit.adapter.utils.match_declare_kernel"]], "match_declare_kernel_cpu() (in module tilelang.jit.adapter.utils)": [[74, "tilelang.jit.adapter.utils.match_declare_kernel_cpu"]], "match_global_kernel() (in module tilelang.jit.adapter.utils)": [[74, "tilelang.jit.adapter.utils.match_global_kernel"]], "pythonic_expr() (in module tilelang.jit.adapter.utils)": [[74, "tilelang.jit.adapter.utils.pythonic_expr"]], "tilelang.jit.adapter.utils": [[74, "module-tilelang.jit.adapter.utils"]], "basewrapper (class in tilelang.jit.adapter.wrapper)": [[75, "tilelang.jit.adapter.wrapper.BaseWrapper"]], "call_prefix (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.CALL_PREFIX"]], "init_func (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.INIT_FUNC"]], "tlcpusourcewrapper (class in tilelang.jit.adapter.wrapper)": [[75, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper"]], "tlcudasourcewrapper (class in tilelang.jit.adapter.wrapper)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper"]], "tlhipsourcewrapper (class in tilelang.jit.adapter.wrapper)": [[75, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper"]], "tlnvrtcsourcewrapper (class in tilelang.jit.adapter.wrapper)": [[75, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper"]], "tlpywrapper (class in tilelang.jit.adapter.wrapper)": [[75, "tilelang.jit.adapter.wrapper.TLPyWrapper"]], "tlwrapper (class in tilelang.jit.adapter.wrapper)": [[75, "tilelang.jit.adapter.wrapper.TLWrapper"]], "assign_device_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLWrapper.assign_device_module"]], "assign_host_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLWrapper.assign_host_module"]], "assign_optimized_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLWrapper.assign_optimized_module"]], "assign_pass_configs() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLWrapper.assign_pass_configs"]], "backend (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.backend"]], "backend (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.backend"]], "create_call_func() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.create_call_func"]], "create_dispatch_func() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.create_dispatch_func"]], "create_dispatch_func() (tilelang.jit.adapter.wrapper.tlnvrtcsourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper.create_dispatch_func"]], "device_mod (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.device_mod"]], "device_mod (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.device_mod"]], "device_mod (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLWrapper.device_mod"]], "generate_l2_persistent_map() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.generate_l2_persistent_map"]], "generate_tma_descriptor_args() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.generate_tma_descriptor_args"]], "generate_tma_descriptor_args() (tilelang.jit.adapter.wrapper.tlnvrtcsourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper.generate_tma_descriptor_args"]], "get_cpu_init_func() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.get_cpu_init_func"]], "get_dynamic_symbolic_set() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.get_dynamic_symbolic_set"]], "get_dynamic_symbolic_set() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_dynamic_symbolic_set"]], "get_init_func() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_init_func"]], "get_init_func() (tilelang.jit.adapter.wrapper.tlhipsourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper.get_init_func"]], "get_stream_type() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_stream_type"]], "get_stream_type() (tilelang.jit.adapter.wrapper.tlhipsourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper.get_stream_type"]], "get_stream_type() (tilelang.jit.adapter.wrapper.tlnvrtcsourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper.get_stream_type"]], "host_mod (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.host_mod"]], "host_mod (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.host_mod"]], "host_mod (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLWrapper.host_mod"]], "is_tma_descriptor_arg() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.is_tma_descriptor_arg"]], "lib (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLWrapper.lib"]], "parse_source_information() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.parse_source_information"]], "parse_source_information() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.parse_source_information"]], "pass_configs (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.pass_configs"]], "pass_configs (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.pass_configs"]], "pass_configs (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLWrapper.pass_configs"]], "prim_func (tilelang.jit.adapter.wrapper.tlcpusourcewrapper property)": [[75, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.prim_func"]], "prim_func (tilelang.jit.adapter.wrapper.tlcudasourcewrapper property)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.prim_func"]], "target (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[75, "tilelang.jit.adapter.wrapper.TLWrapper.target"]], "tilelang.jit.adapter.wrapper": [[75, "module-tilelang.jit.adapter.wrapper"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.update_lib_code"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.update_lib_code"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlnvrtcsourcewrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper.update_lib_code"]], "wrap() (tilelang.jit.adapter.wrapper.basewrapper method)": [[75, "tilelang.jit.adapter.wrapper.BaseWrapper.wrap"]], "wrap() (tilelang.jit.adapter.wrapper.tlpywrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLPyWrapper.wrap"]], "wrap() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[75, "tilelang.jit.adapter.wrapper.TLWrapper.wrap"]], "tilelang.jit.env": [[76, "module-tilelang.jit.env"]], "jitkernel (class in tilelang.jit.kernel)": [[77, "tilelang.jit.kernel.JITKernel"]], "adapter (tilelang.jit.kernel.jitkernel attribute)": [[77, "id0"], [77, "tilelang.jit.kernel.JITKernel.adapter"]], "artifact (tilelang.jit.kernel.jitkernel attribute)": [[77, "id1"], [77, "tilelang.jit.kernel.JITKernel.artifact"]], "config (tilelang.jit.kernel.jitkernel attribute)": [[77, "tilelang.jit.kernel.JITKernel.config"]], "export_library() (tilelang.jit.kernel.jitkernel method)": [[77, "tilelang.jit.kernel.JITKernel.export_library"]], "from_database() (tilelang.jit.kernel.jitkernel class method)": [[77, "tilelang.jit.kernel.JITKernel.from_database"]], "from_tilelang_function() (tilelang.jit.kernel.jitkernel class method)": [[77, "tilelang.jit.kernel.JITKernel.from_tilelang_function"]], "get_host_source() (tilelang.jit.kernel.jitkernel method)": [[77, "tilelang.jit.kernel.JITKernel.get_host_source"]], "get_kernel_source() (tilelang.jit.kernel.jitkernel method)": [[77, "tilelang.jit.kernel.JITKernel.get_kernel_source"]], "get_profiler() (tilelang.jit.kernel.jitkernel method)": [[77, "tilelang.jit.kernel.JITKernel.get_profiler"]], "get_tuner_result() (tilelang.jit.kernel.jitkernel method)": [[77, "tilelang.jit.kernel.JITKernel.get_tuner_result"]], "host_source (tilelang.jit.kernel.jitkernel property)": [[77, "tilelang.jit.kernel.JITKernel.host_source"]], "kernel_source (tilelang.jit.kernel.jitkernel property)": [[77, "tilelang.jit.kernel.JITKernel.kernel_source"]], "latency (tilelang.jit.kernel.jitkernel attribute)": [[77, "tilelang.jit.kernel.JITKernel.latency"]], "out_idx (tilelang.jit.kernel.jitkernel property)": [[77, "tilelang.jit.kernel.JITKernel.out_idx"]], "params (tilelang.jit.kernel.jitkernel property)": [[77, "tilelang.jit.kernel.JITKernel.params"]], "prim_func (tilelang.jit.kernel.jitkernel attribute)": [[77, "tilelang.jit.kernel.JITKernel.prim_func"]], "ref_latency (tilelang.jit.kernel.jitkernel attribute)": [[77, "tilelang.jit.kernel.JITKernel.ref_latency"]], "run_once() (tilelang.jit.kernel.jitkernel method)": [[77, "tilelang.jit.kernel.JITKernel.run_once"]], "tilelang.jit.kernel": [[77, "module-tilelang.jit.kernel"]], "torch_function (tilelang.jit.kernel.jitkernel attribute)": [[77, "id2"], [77, "tilelang.jit.kernel.JITKernel.torch_function"]], "update_tuner_result() (tilelang.jit.kernel.jitkernel method)": [[77, "tilelang.jit.kernel.JITKernel.update_tuner_result"]], "kernel (class in tilelang.jit.param)": [[78, "tilelang.jit.param.Kernel"]], "program (class in tilelang.jit.param)": [[78, "tilelang.jit.param.Program"]], "get_kernel_source() (tilelang.jit.param.kernel method)": [[78, "tilelang.jit.param.Kernel.get_kernel_source"]], "tilelang.jit.param": [[78, "module-tilelang.jit.param"]], "annotate_l2_hit_ratio() (in module tilelang.language)": [[79, "tilelang.language.annotate_l2_hit_ratio"]], "annotate_layout() (in module tilelang.language)": [[79, "tilelang.language.annotate_layout"]], "annotate_padding() (in module tilelang.language)": [[79, "tilelang.language.annotate_padding"]], "import_source() (in module tilelang.language)": [[79, "tilelang.language.import_source"]], "symbolic() (in module tilelang.language)": [[79, "tilelang.language.symbolic"]], "tilelang.language": [[79, "module-tilelang.language"]], "use_swizzle() (in module tilelang.language)": [[79, "tilelang.language.use_swizzle"]], "alloc_barrier() (in module tilelang.language.allocate)": [[80, "tilelang.language.allocate.alloc_barrier"]], "alloc_fragment() (in module tilelang.language.allocate)": [[80, "tilelang.language.allocate.alloc_fragment"]], "alloc_local() (in module tilelang.language.allocate)": [[80, "tilelang.language.allocate.alloc_local"]], "alloc_shared() (in module tilelang.language.allocate)": [[80, "tilelang.language.allocate.alloc_shared"]], "alloc_var() (in module tilelang.language.allocate)": [[80, "tilelang.language.allocate.alloc_var"]], "tilelang.language.allocate": [[80, "module-tilelang.language.allocate"]], "barrier_arrive() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.barrier_arrive"]], "barrier_wait() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.barrier_wait"]], "create_list_of_mbarrier() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.create_list_of_mbarrier"]], "create_tma_descriptor() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.create_tma_descriptor"]], "dec_max_nreg() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.dec_max_nreg"]], "fence_proxy_async() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.fence_proxy_async"]], "get_mbarrier() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.get_mbarrier"]], "inc_max_nreg() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.inc_max_nreg"]], "mbarrier_arrive() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.mbarrier_arrive"]], "mbarrier_expect_tx() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.mbarrier_expect_tx"]], "mbarrier_wait_parity() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.mbarrier_wait_parity"]], "no_set_max_nreg() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.no_set_max_nreg"]], "set_max_nreg() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.set_max_nreg"]], "shfl_down() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.shfl_down"]], "shfl_up() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.shfl_up"]], "shfl_xor() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.shfl_xor"]], "sync_global() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.sync_global"]], "sync_grid() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.sync_grid"]], "sync_thread_partial() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.sync_thread_partial"]], "sync_threads() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.sync_threads"]], "tilelang.language.builtin": [[81, "module-tilelang.language.builtin"]], "tma_load() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.tma_load"]], "tma_store_arrive() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.tma_store_arrive"]], "tma_store_wait() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.tma_store_wait"]], "wait_wgmma() (in module tilelang.language.builtin)": [[81, "tilelang.language.builtin.wait_wgmma"]], "buffer_load_to_tile_region() (in module tilelang.language.copy)": [[82, "tilelang.language.copy.buffer_load_to_tile_region"]], "buffer_region_to_tile_region() (in module tilelang.language.copy)": [[82, "tilelang.language.copy.buffer_region_to_tile_region"]], "buffer_to_tile_region() (in module tilelang.language.copy)": [[82, "tilelang.language.copy.buffer_to_tile_region"]], "c2d_im2col() (in module tilelang.language.copy)": [[82, "tilelang.language.copy.c2d_im2col"]], "copy() (in module tilelang.language.copy)": [[82, "tilelang.language.copy.copy"]], "region() (in module tilelang.language.copy)": [[82, "tilelang.language.copy.region"]], "tilelang.language.copy": [[82, "module-tilelang.language.copy"]], "atomic_add() (in module tilelang.language.customize)": [[83, "tilelang.language.customize.atomic_add"]], "atomic_addx2() (in module tilelang.language.customize)": [[83, "tilelang.language.customize.atomic_addx2"]], "atomic_addx4() (in module tilelang.language.customize)": [[83, "tilelang.language.customize.atomic_addx4"]], "clamp() (in module tilelang.language.customize)": [[83, "tilelang.language.customize.clamp"]], "dp4a() (in module tilelang.language.customize)": [[83, "tilelang.language.customize.dp4a"]], "reshape() (in module tilelang.language.customize)": [[83, "tilelang.language.customize.reshape"]], "tilelang.language.customize": [[83, "module-tilelang.language.customize"]], "view() (in module tilelang.language.customize)": [[83, "tilelang.language.customize.view"]], "tilelang.language.experimental": [[84, "module-tilelang.language.experimental"]], "gemm_sp() (in module tilelang.language.experimental.gemm_sp)": [[85, "tilelang.language.experimental.gemm_sp.gemm_sp"]], "tilelang.language.experimental.gemm_sp": [[85, "module-tilelang.language.experimental.gemm_sp"]], "clear() (in module tilelang.language.fill)": [[86, "tilelang.language.fill.clear"]], "fill() (in module tilelang.language.fill)": [[86, "tilelang.language.fill.fill"]], "tilelang.language.fill": [[86, "module-tilelang.language.fill"]], "current() (tilelang.language.frame.letframe class method)": [[87, "tilelang.language.frame.LetFrame.Current"]], "framestack (class in tilelang.language.frame)": [[87, "tilelang.language.frame.FrameStack"]], "letframe (class in tilelang.language.frame)": [[87, "tilelang.language.frame.LetFrame"]], "get_let_value() (in module tilelang.language.frame)": [[87, "tilelang.language.frame.get_let_value"]], "get_value() (tilelang.language.frame.framestack method)": [[87, "tilelang.language.frame.FrameStack.get_value"]], "get_value() (tilelang.language.frame.letframe static method)": [[87, "tilelang.language.frame.LetFrame.get_value"]], "has_let_value() (in module tilelang.language.frame)": [[87, "tilelang.language.frame.has_let_value"]], "has_value() (tilelang.language.frame.framestack method)": [[87, "tilelang.language.frame.FrameStack.has_value"]], "has_value() (tilelang.language.frame.letframe static method)": [[87, "tilelang.language.frame.LetFrame.has_value"]], "pop() (tilelang.language.frame.framestack method)": [[87, "tilelang.language.frame.FrameStack.pop"]], "push() (tilelang.language.frame.framestack method)": [[87, "tilelang.language.frame.FrameStack.push"]], "tilelang.language.frame": [[87, "module-tilelang.language.frame"]], "top() (tilelang.language.frame.framestack method)": [[87, "tilelang.language.frame.FrameStack.top"]], "gemm() (in module tilelang.language.gemm)": [[88, "tilelang.language.gemm.gemm"]], "tilelang.language.gemm": [[88, "module-tilelang.language.gemm"]], "current() (tilelang.language.kernel.kernellaunchframe class method)": [[89, "tilelang.language.kernel.KernelLaunchFrame.Current"]], "framestack (class in tilelang.language.kernel)": [[89, "tilelang.language.kernel.FrameStack"]], "kernel() (in module tilelang.language.kernel)": [[89, "tilelang.language.kernel.Kernel"]], "kernellaunchframe (class in tilelang.language.kernel)": [[89, "tilelang.language.kernel.KernelLaunchFrame"]], "blocks (tilelang.language.kernel.kernellaunchframe property)": [[89, "tilelang.language.kernel.KernelLaunchFrame.blocks"]], "get_block_binding() (in module tilelang.language.kernel)": [[89, "tilelang.language.kernel.get_block_binding"]], "get_block_binding() (tilelang.language.kernel.kernellaunchframe method)": [[89, "tilelang.language.kernel.KernelLaunchFrame.get_block_binding"]], "get_block_bindings() (in module tilelang.language.kernel)": [[89, "tilelang.language.kernel.get_block_bindings"]], "get_block_bindings() (tilelang.language.kernel.kernellaunchframe method)": [[89, "tilelang.language.kernel.KernelLaunchFrame.get_block_bindings"]], "get_block_extent() (in module tilelang.language.kernel)": [[89, "tilelang.language.kernel.get_block_extent"]], "get_block_extent() (tilelang.language.kernel.kernellaunchframe method)": [[89, "tilelang.language.kernel.KernelLaunchFrame.get_block_extent"]], "get_block_extents() (in module tilelang.language.kernel)": [[89, "tilelang.language.kernel.get_block_extents"]], "get_block_extents() (tilelang.language.kernel.kernellaunchframe method)": [[89, "tilelang.language.kernel.KernelLaunchFrame.get_block_extents"]], "get_num_threads() (tilelang.language.kernel.kernellaunchframe method)": [[89, "tilelang.language.kernel.KernelLaunchFrame.get_num_threads"]], "get_thread_binding() (in module tilelang.language.kernel)": [[89, "tilelang.language.kernel.get_thread_binding"]], "get_thread_binding() (tilelang.language.kernel.kernellaunchframe method)": [[89, "tilelang.language.kernel.KernelLaunchFrame.get_thread_binding"]], "get_thread_bindings() (in module tilelang.language.kernel)": [[89, "tilelang.language.kernel.get_thread_bindings"]], "get_thread_bindings() (tilelang.language.kernel.kernellaunchframe method)": [[89, "tilelang.language.kernel.KernelLaunchFrame.get_thread_bindings"]], "get_thread_extent() (in module tilelang.language.kernel)": [[89, "tilelang.language.kernel.get_thread_extent"]], "get_thread_extent() (tilelang.language.kernel.kernellaunchframe method)": [[89, "tilelang.language.kernel.KernelLaunchFrame.get_thread_extent"]], "get_thread_extents() (in module tilelang.language.kernel)": [[89, "tilelang.language.kernel.get_thread_extents"]], "get_thread_extents() (tilelang.language.kernel.kernellaunchframe method)": [[89, "tilelang.language.kernel.KernelLaunchFrame.get_thread_extents"]], "num_threads (tilelang.language.kernel.kernellaunchframe property)": [[89, "tilelang.language.kernel.KernelLaunchFrame.num_threads"]], "pop() (tilelang.language.kernel.framestack method)": [[89, "tilelang.language.kernel.FrameStack.pop"]], "push() (tilelang.language.kernel.framestack method)": [[89, "tilelang.language.kernel.FrameStack.push"]], "size() (tilelang.language.kernel.framestack method)": [[89, "tilelang.language.kernel.FrameStack.size"]], "threads (tilelang.language.kernel.kernellaunchframe property)": [[89, "tilelang.language.kernel.KernelLaunchFrame.threads"]], "tilelang.language.kernel": [[89, "module-tilelang.language.kernel"]], "top() (tilelang.language.kernel.framestack method)": [[89, "tilelang.language.kernel.FrameStack.top"]], "all_of() (in module tilelang.language.logical)": [[90, "tilelang.language.logical.all_of"]], "any_of() (in module tilelang.language.logical)": [[90, "tilelang.language.logical.any_of"]], "tilelang.language.logical": [[90, "module-tilelang.language.logical"]], "tilelang.language.memscope": [[91, "module-tilelang.language.memscope"]], "parallel() (in module tilelang.language.parallel)": [[92, "tilelang.language.parallel.Parallel"]], "tilelang.language.parallel": [[92, "module-tilelang.language.parallel"]], "persistent() (in module tilelang.language.persistent)": [[93, "tilelang.language.persistent.Persistent"]], "tilelang.language.persistent": [[93, "module-tilelang.language.persistent"]], "pipelined() (in module tilelang.language.pipeline)": [[94, "tilelang.language.pipeline.Pipelined"]], "tilelang.language.pipeline": [[94, "module-tilelang.language.pipeline"]], "print() (in module tilelang.language.print)": [[95, "tilelang.language.print.print"]], "tilelang.language.print": [[95, "module-tilelang.language.print"]], "basetensorproxy (class in tilelang.language.proxy)": [[96, "tilelang.language.proxy.BaseTensorProxy"]], "bufferproxy (class in tilelang.language.proxy)": [[96, "tilelang.language.proxy.BufferProxy"]], "fragmentbufferproxy (class in tilelang.language.proxy)": [[96, "tilelang.language.proxy.FragmentBufferProxy"]], "localbufferproxy (class in tilelang.language.proxy)": [[96, "tilelang.language.proxy.LocalBufferProxy"]], "sharedbufferproxy (class in tilelang.language.proxy)": [[96, "tilelang.language.proxy.SharedBufferProxy"]], "tensorproxy (class in tilelang.language.proxy)": [[96, "tilelang.language.proxy.TensorProxy"]], "default_align (tilelang.language.proxy.basetensorproxy attribute)": [[96, "tilelang.language.proxy.BaseTensorProxy.default_align"]], "default_offset_factor (tilelang.language.proxy.basetensorproxy attribute)": [[96, "tilelang.language.proxy.BaseTensorProxy.default_offset_factor"]], "default_scope (tilelang.language.proxy.basetensorproxy attribute)": [[96, "tilelang.language.proxy.BaseTensorProxy.default_scope"]], "default_scope (tilelang.language.proxy.fragmentbufferproxy attribute)": [[96, "tilelang.language.proxy.FragmentBufferProxy.default_scope"]], "default_scope (tilelang.language.proxy.localbufferproxy attribute)": [[96, "tilelang.language.proxy.LocalBufferProxy.default_scope"]], "default_scope (tilelang.language.proxy.sharedbufferproxy attribute)": [[96, "tilelang.language.proxy.SharedBufferProxy.default_scope"]], "from_ptr() (tilelang.language.proxy.basetensorproxy method)": [[96, "tilelang.language.proxy.BaseTensorProxy.from_ptr"]], "from_ptr() (tilelang.language.proxy.bufferproxy method)": [[96, "tilelang.language.proxy.BufferProxy.from_ptr"]], "make_tensor() (in module tilelang.language.proxy)": [[96, "tilelang.language.proxy.make_tensor"]], "ptr() (in module tilelang.language.proxy)": [[96, "tilelang.language.proxy.ptr"]], "tilelang.language.proxy": [[96, "module-tilelang.language.proxy"]], "cumsum() (in module tilelang.language.reduce)": [[97, "tilelang.language.reduce.cumsum"]], "reduce() (in module tilelang.language.reduce)": [[97, "tilelang.language.reduce.reduce"]], "reduce_absmax() (in module tilelang.language.reduce)": [[97, "tilelang.language.reduce.reduce_absmax"]], "reduce_abssum() (in module tilelang.language.reduce)": [[97, "tilelang.language.reduce.reduce_abssum"]], "reduce_max() (in module tilelang.language.reduce)": [[97, "tilelang.language.reduce.reduce_max"]], "reduce_min() (in module tilelang.language.reduce)": [[97, "tilelang.language.reduce.reduce_min"]], "reduce_sum() (in module tilelang.language.reduce)": [[97, "tilelang.language.reduce.reduce_sum"]], "tilelang.language.reduce": [[97, "module-tilelang.language.reduce"]], "tilelang.language.tir": [[98, "module-tilelang.language.tir"]], "macro() (in module tilelang.language.tir.entry)": [[99, "tilelang.language.tir.entry.macro"]], "prim_func() (in module tilelang.language.tir.entry)": [[99, "tilelang.language.tir.entry.prim_func"]], "tilelang.language.tir.entry": [[99, "module-tilelang.language.tir.entry"]], "grid() (in module tilelang.language.tir.ir)": [[100, "tilelang.language.tir.ir.grid"]], "parallel() (in module tilelang.language.tir.ir)": [[100, "tilelang.language.tir.ir.parallel"]], "serial() (in module tilelang.language.tir.ir)": [[100, "tilelang.language.tir.ir.serial"]], "thread_binding() (in module tilelang.language.tir.ir)": [[100, "tilelang.language.tir.ir.thread_binding"]], "tilelang.language.tir.ir": [[100, "module-tilelang.language.tir.ir"]], "unroll() (in module tilelang.language.tir.ir)": [[100, "tilelang.language.tir.ir.unroll"]], "vectorized() (in module tilelang.language.tir.ir)": [[100, "tilelang.language.tir.ir.vectorized"]], "tvmbackendallocworkspace() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.TVMBackendAllocWorkspace"]], "tvmbackendfreeworkspace() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.TVMBackendFreeWorkspace"]], "abs() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.abs"]], "acos() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.acos"]], "acosh() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.acosh"]], "address_of() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.address_of"]], "all() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.all"]], "any() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.any"]], "anylist_getitem() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.anylist_getitem"]], "anylist_resetitem() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.anylist_resetitem"]], "anylist_setitem_call_cpacked() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.anylist_setitem_call_cpacked"]], "anylist_setitem_call_packed() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.anylist_setitem_call_packed"]], "asin() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.asin"]], "asinh() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.asinh"]], "assume() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.assume"]], "atan() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.atan"]], "atan2() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.atan2"]], "atanh() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.atanh"]], "bitwise_and() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.bitwise_and"]], "bitwise_not() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.bitwise_not"]], "bitwise_or() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.bitwise_or"]], "bitwise_xor() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.bitwise_xor"]], "call_cpacked() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.call_cpacked"]], "call_cpacked_lowered() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.call_cpacked_lowered"]], "call_extern() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.call_extern"]], "call_intrin() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.call_intrin"]], "call_llvm_intrin() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.call_llvm_intrin"]], "call_llvm_pure_intrin() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.call_llvm_pure_intrin"]], "call_packed() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.call_packed"]], "call_packed_lowered() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.call_packed_lowered"]], "call_pure_extern() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.call_pure_extern"]], "call_tir() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.call_tir"]], "ceil() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ceil"]], "ceildiv() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ceildiv"]], "clz() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.clz"]], "comm_reducer() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.comm_reducer"]], "copysign() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.copysign"]], "cos() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.cos"]], "cosh() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.cosh"]], "create_barriers() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.create_barriers"]], "div() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.div"]], "end_profile_intrinsic() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.end_profile_intrinsic"]], "erf() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.erf"]], "exp() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.exp"]], "exp10() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.exp10"]], "exp2() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.exp2"]], "floor() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.floor"]], "floordiv() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.floordiv"]], "floormod() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.floormod"]], "fmod() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.fmod"]], "hypot() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.hypot"]], "if_then_else() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.if_then_else"]], "indexdiv() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.indexdiv"]], "indexmod() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.indexmod"]], "infinity() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.infinity"]], "isfinite() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.isfinite"]], "isinf() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.isinf"]], "isnan() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.isnan"]], "isnullptr() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.isnullptr"]], "ldexp() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ldexp"]], "likely() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.likely"]], "log() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.log"]], "log10() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.log10"]], "log1p() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.log1p"]], "log2() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.log2"]], "lookup_param() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.lookup_param"]], "max_value() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.max_value"]], "min_value() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.min_value"]], "mma_fill() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.mma_fill"]], "mma_store() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.mma_store"]], "nearbyint() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.nearbyint"]], "nextafter() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.nextafter"]], "popcount() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.popcount"]], "pow() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.pow"]], "pow_of_int() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.pow_of_int"]], "power() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.power"]], "ptx_arrive_barrier() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ptx_arrive_barrier"]], "ptx_arrive_barrier_expect_tx() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ptx_arrive_barrier_expect_tx"]], "ptx_commit_group() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ptx_commit_group"]], "ptx_cp_async() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ptx_cp_async"]], "ptx_cp_async_barrier() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ptx_cp_async_barrier"]], "ptx_cp_async_bulk() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ptx_cp_async_bulk"]], "ptx_init_barrier_thread_count() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ptx_init_barrier_thread_count"]], "ptx_ldmatrix() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ptx_ldmatrix"]], "ptx_mma() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ptx_mma"]], "ptx_mma_sp() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ptx_mma_sp"]], "ptx_wait_barrier() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ptx_wait_barrier"]], "ptx_wait_group() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ptx_wait_group"]], "q_multiply_shift() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.q_multiply_shift"]], "q_multiply_shift_per_axis() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.q_multiply_shift_per_axis"]], "reinterpret() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.reinterpret"]], "ret() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.ret"]], "round() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.round"]], "rsqrt() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.rsqrt"]], "shift_left() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.shift_left"]], "shift_right() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.shift_right"]], "sigmoid() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.sigmoid"]], "sin() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.sin"]], "sinh() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.sinh"]], "sqrt() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.sqrt"]], "start_profile_intrinsic() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.start_profile_intrinsic"]], "tan() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tan"]], "tanh() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tanh"]], "tilelang.language.tir.op": [[101, "module-tilelang.language.tir.op"]], "trace() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.trace"]], "trunc() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.trunc"]], "truncdiv() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.truncdiv"]], "truncmod() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.truncmod"]], "tvm_access_ptr() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_access_ptr"]], "tvm_bmma_sync() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_bmma_sync"]], "tvm_check_return() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_check_return"]], "tvm_fill_fragment() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_fill_fragment"]], "tvm_load_matrix_sync() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_load_matrix_sync"]], "tvm_mfma() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_mfma"]], "tvm_mfma_store() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_mfma_store"]], "tvm_mma_sync() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_mma_sync"]], "tvm_rdna_wmma() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_rdna_wmma"]], "tvm_rdna_wmma_store() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_rdna_wmma_store"]], "tvm_stack_alloca() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_stack_alloca"]], "tvm_stack_make_array() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_stack_make_array"]], "tvm_stack_make_shape() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_stack_make_shape"]], "tvm_storage_sync() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_storage_sync"]], "tvm_store_matrix_sync() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_store_matrix_sync"]], "tvm_struct_get() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_struct_get"]], "tvm_struct_set() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_struct_set"]], "tvm_thread_allreduce() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_thread_allreduce"]], "tvm_thread_invariant() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_thread_invariant"]], "tvm_throw_last_error() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_throw_last_error"]], "tvm_tuple() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_tuple"]], "tvm_warp_activemask() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_warp_activemask"]], "tvm_warp_shuffle() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_warp_shuffle"]], "tvm_warp_shuffle_down() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_warp_shuffle_down"]], "tvm_warp_shuffle_up() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.tvm_warp_shuffle_up"]], "type_annotation() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.type_annotation"]], "undef() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.undef"]], "vectorcombine() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.vectorcombine"]], "vectorhigh() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.vectorhigh"]], "vectorlow() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.vectorlow"]], "vscale() (in module tilelang.language.tir.op)": [[101, "tilelang.language.tir.op.vscale"]], "warpspecialize() (in module tilelang.language.warpgroup)": [[102, "tilelang.language.warpgroup.WarpSpecialize"]], "warpspecializeframe (class in tilelang.language.warpgroup)": [[102, "tilelang.language.warpgroup.WarpSpecializeFrame"]], "tilelang.language.warpgroup": [[102, "module-tilelang.language.warpgroup"]], "ws() (in module tilelang.language.warpgroup)": [[102, "tilelang.language.warpgroup.ws"]], "tilelang.layout": [[103, "module-tilelang.layout"]], "fragment (class in tilelang.layout.fragment)": [[104, "tilelang.layout.fragment.Fragment"]], "condense_rep_var() (tilelang.layout.fragment.fragment method)": [[104, "tilelang.layout.fragment.Fragment.condense_rep_var"]], "get_thread_size() (tilelang.layout.fragment.fragment method)": [[104, "tilelang.layout.fragment.Fragment.get_thread_size"]], "make_swizzled_layout() (in module tilelang.layout.fragment)": [[104, "tilelang.layout.fragment.make_swizzled_layout"]], "map_forward_thread() (tilelang.layout.fragment.fragment method)": [[104, "tilelang.layout.fragment.Fragment.map_forward_thread"]], "repeat() (tilelang.layout.fragment.fragment method)": [[104, "tilelang.layout.fragment.Fragment.repeat"]], "replicate() (tilelang.layout.fragment.fragment method)": [[104, "tilelang.layout.fragment.Fragment.replicate"]], "thread (tilelang.layout.fragment.fragment property)": [[104, "tilelang.layout.fragment.Fragment.thread"]], "tilelang.layout.fragment": [[104, "module-tilelang.layout.fragment"]], "decompose_col_major() (in module tilelang.layout.gemm_sp)": [[105, "tilelang.layout.gemm_sp.decompose_col_major"]], "make_metadata_layout() (in module tilelang.layout.gemm_sp)": [[105, "tilelang.layout.gemm_sp.make_metadata_layout"]], "tilelang.layout.gemm_sp": [[105, "module-tilelang.layout.gemm_sp"]], "layout (class in tilelang.layout.layout)": [[106, "tilelang.layout.layout.Layout"]], "get_forward_vars() (tilelang.layout.layout.layout method)": [[106, "tilelang.layout.layout.Layout.get_forward_vars"]], "get_input_shape() (tilelang.layout.layout.layout method)": [[106, "tilelang.layout.layout.Layout.get_input_shape"]], "get_output_shape() (tilelang.layout.layout.layout method)": [[106, "tilelang.layout.layout.Layout.get_output_shape"]], "index (tilelang.layout.layout.layout property)": [[106, "tilelang.layout.layout.Layout.index"]], "inverse() (tilelang.layout.layout.layout method)": [[106, "tilelang.layout.layout.Layout.inverse"]], "map_forward_index() (tilelang.layout.layout.layout method)": [[106, "tilelang.layout.layout.Layout.map_forward_index"]], "tilelang.layout.layout": [[106, "module-tilelang.layout.layout"]], "make_swizzled_layout() (in module tilelang.layout.swizzle)": [[107, "tilelang.layout.swizzle.make_swizzled_layout"]], "tilelang.layout.swizzle": [[107, "module-tilelang.layout.swizzle"]], "cdiv() (in module tilelang.math)": [[108, "tilelang.math.cdiv"]], "next_power_of_2() (in module tilelang.math)": [[108, "tilelang.math.next_power_of_2"]], "tilelang.math": [[108, "module-tilelang.math"]], "tilelang.primitives": [[109, "module-tilelang.primitives"]], "gemm() (in module tilelang.primitives.gemm)": [[110, "tilelang.primitives.gemm.gemm"]], "tilelang.primitives.gemm": [[110, "module-tilelang.primitives.gemm"]], "a (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.A"]], "b (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.B"]], "c (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.C"]], "fullcol (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[111, "tilelang.primitives.gemm.base.GemmWarpPolicy.FullCol"]], "fullrow (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[111, "tilelang.primitives.gemm.base.GemmWarpPolicy.FullRow"]], "gemmbaseparams (class in tilelang.primitives.gemm.base)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams"]], "gemmwarppolicy (class in tilelang.primitives.gemm.base)": [[111, "tilelang.primitives.gemm.base.GemmWarpPolicy"]], "square (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[111, "tilelang.primitives.gemm.base.GemmWarpPolicy.Square"]], "block_col_warps (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.block_col_warps"]], "block_row_warps (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.block_row_warps"]], "chunk (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.chunk"]], "class_attributes (tilelang.primitives.gemm.base.gemmbaseparams property)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.class_attributes"]], "compute_warp_partition() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[111, "tilelang.primitives.gemm.base.GemmWarpPolicy.compute_warp_partition"]], "from_warp_partition() (tilelang.primitives.gemm.base.gemmwarppolicy class method)": [[111, "tilelang.primitives.gemm.base.GemmWarpPolicy.from_warp_partition"]], "get_warp_size() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.get_warp_size"]], "infer_block_partition() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.infer_block_partition"]], "is_full_col() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[111, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_full_col"]], "is_full_row() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[111, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_full_row"]], "is_square() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[111, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_square"]], "k_pack (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.k_pack"]], "params_as_dict() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.params_as_dict"]], "policy (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.policy"]], "tilelang.primitives.gemm.base": [[111, "module-tilelang.primitives.gemm.base"]], "to_prime_factors() (tilelang.primitives.gemm.base.gemmwarppolicy static method)": [[111, "tilelang.primitives.gemm.base.GemmWarpPolicy.to_prime_factors"]], "transpose_a (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.transpose_A"]], "transpose_b (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.transpose_B"]], "warp_col_tiles (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.warp_col_tiles"]], "warp_row_tiles (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[111, "tilelang.primitives.gemm.base.GemmBaseParams.warp_row_tiles"]], "gemmprimitivemma (class in tilelang.primitives.gemm.gemm_mma)": [[112, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA"]], "accum_dtype (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma property)": [[112, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.accum_dtype"]], "gemm_rrr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[112, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_rrr"]], "gemm_rsr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[112, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_rsr"]], "gemm_srr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[112, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_srr"]], "gemm_ssr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[112, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_ssr"]], "in_dtype (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma property)": [[112, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.in_dtype"]], "invoke() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[112, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.invoke"]], "tilelang.primitives.gemm.gemm_mma": [[112, "module-tilelang.primitives.gemm.gemm_mma"]], "profiler (class in tilelang.profiler)": [[113, "tilelang.profiler.Profiler"]], "adapter (tilelang.profiler.profiler attribute)": [[113, "id0"], [113, "tilelang.profiler.Profiler.adapter"]], "assert_allclose() (tilelang.profiler.profiler method)": [[113, "tilelang.profiler.Profiler.assert_allclose"]], "assert_consistent() (tilelang.profiler.profiler method)": [[113, "tilelang.profiler.Profiler.assert_consistent"]], "determine_profiler() (tilelang.profiler.profiler method)": [[113, "tilelang.profiler.Profiler.determine_profiler"]], "do_bench() (tilelang.profiler.profiler method)": [[113, "tilelang.profiler.Profiler.do_bench"]], "func (tilelang.profiler.profiler property)": [[113, "tilelang.profiler.Profiler.func"]], "manual_assert_close() (tilelang.profiler.profiler method)": [[113, "tilelang.profiler.Profiler.manual_assert_close"]], "params (tilelang.profiler.profiler attribute)": [[113, "id1"], [113, "tilelang.profiler.Profiler.params"]], "result_idx (tilelang.profiler.profiler attribute)": [[113, "id2"], [113, "tilelang.profiler.Profiler.result_idx"]], "run_once() (tilelang.profiler.profiler method)": [[113, "tilelang.profiler.Profiler.run_once"]], "supply_type (tilelang.profiler.profiler attribute)": [[113, "id3"], [113, "tilelang.profiler.Profiler.supply_type"]], "tilelang.profiler": [[113, "module-tilelang.profiler"]], "with_default_adapter() (tilelang.profiler.profiler method)": [[113, "tilelang.profiler.Profiler.with_default_adapter"]], "do_bench() (in module tilelang.profiler.bench)": [[114, "tilelang.profiler.bench.do_bench"]], "tilelang.profiler.bench": [[114, "module-tilelang.profiler.bench"]], "tilelang.quantize": [[115, "module-tilelang.quantize"]], "get_lop3_intrin_group() (in module tilelang.quantize.lop3)": [[116, "tilelang.quantize.lop3.get_lop3_intrin_group"]], "tilelang.quantize.lop3": [[116, "module-tilelang.quantize.lop3"]], "tilelang.quantize.quantization": [[117, "module-tilelang.quantize.quantization"]], "gen_quant4() (in module tilelang.quantize.utils)": [[118, "tilelang.quantize.utils.gen_quant4"]], "general_compress() (in module tilelang.quantize.utils)": [[118, "tilelang.quantize.utils.general_compress"]], "interleave_weight() (in module tilelang.quantize.utils)": [[118, "tilelang.quantize.utils.interleave_weight"]], "tilelang.quantize.utils": [[118, "module-tilelang.quantize.utils"]], "tilelang.tools": [[120, "module-tilelang.tools"]], "analysisresult (class in tilelang.tools.analyzer)": [[121, "tilelang.tools.Analyzer.AnalysisResult"]], "analyzer (class in tilelang.tools.analyzer)": [[121, "tilelang.tools.Analyzer.Analyzer"]], "analysis() (tilelang.tools.analyzer.analyzer class method)": [[121, "tilelang.tools.Analyzer.Analyzer.analysis"]], "bandwidth_gbps (tilelang.tools.analyzer.analysisresult attribute)": [[121, "tilelang.tools.Analyzer.AnalysisResult.bandwidth_GBps"]], "calculate() (tilelang.tools.analyzer.analyzer method)": [[121, "tilelang.tools.Analyzer.Analyzer.calculate"]], "estimated_time (tilelang.tools.analyzer.analysisresult attribute)": [[121, "id0"], [121, "tilelang.tools.Analyzer.AnalysisResult.estimated_time"]], "expected_bandwidth_gbps (tilelang.tools.analyzer.analysisresult attribute)": [[121, "tilelang.tools.Analyzer.AnalysisResult.expected_bandwidth_GBps"]], "expected_tflops (tilelang.tools.analyzer.analysisresult attribute)": [[121, "tilelang.tools.Analyzer.AnalysisResult.expected_tflops"]], "ir_pass() (tilelang.tools.analyzer.analyzer method)": [[121, "tilelang.tools.Analyzer.Analyzer.ir_pass"]], "tflops (tilelang.tools.analyzer.analysisresult attribute)": [[121, "tilelang.tools.Analyzer.AnalysisResult.tflops"]], "tilelang.tools.analyzer": [[121, "module-tilelang.tools.Analyzer"]], "total_flops (tilelang.tools.analyzer.analysisresult attribute)": [[121, "tilelang.tools.Analyzer.AnalysisResult.total_flops"]], "total_global_bytes (tilelang.tools.analyzer.analysisresult attribute)": [[121, "id1"], [121, "tilelang.tools.Analyzer.AnalysisResult.total_global_bytes"]], "plot_layout() (in module tilelang.tools.plot_layout)": [[122, "tilelang.tools.plot_layout.plot_layout"]], "tilelang.tools.plot_layout": [[122, "module-tilelang.tools.plot_layout"]], "aligndynamicsharedmemoryallocations() (in module tilelang.transform)": [[123, "tilelang.transform.AlignDynamicSharedMemoryAllocations"]], "annotatedeviceregions() (in module tilelang.transform)": [[123, "tilelang.transform.AnnotateDeviceRegions"]], "clusterplanning() (in module tilelang.transform)": [[123, "tilelang.transform.ClusterPlanning"]], "configindexbitwidth() (in module tilelang.transform)": [[123, "tilelang.transform.ConfigIndexBitwidth"]], "eliminatestoragesyncformbarrier() (in module tilelang.transform)": [[123, "tilelang.transform.EliminateStorageSyncForMBarrier"]], "flattenbuffer() (in module tilelang.transform)": [[123, "tilelang.transform.FlattenBuffer"]], "frontendlegalize() (in module tilelang.transform)": [[123, "tilelang.transform.FrontendLegalize"]], "ifstmtbinding() (in module tilelang.transform)": [[123, "tilelang.transform.IfStmtBinding"]], "injectfenceproxy() (in module tilelang.transform)": [[123, "tilelang.transform.InjectFenceProxy"]], "injectptxasynccopy() (in module tilelang.transform)": [[123, "tilelang.transform.InjectPTXAsyncCopy"]], "injectsoftwarepipeline() (in module tilelang.transform)": [[123, "tilelang.transform.InjectSoftwarePipeline"]], "injecttmabarrier() (in module tilelang.transform)": [[123, "tilelang.transform.InjectTmaBarrier"]], "layoutinference() (in module tilelang.transform)": [[123, "tilelang.transform.LayoutInference"]], "legalizesafememoryaccess() (in module tilelang.transform)": [[123, "tilelang.transform.LegalizeSafeMemoryAccess"]], "legalizevectorizedloop() (in module tilelang.transform)": [[123, "tilelang.transform.LegalizeVectorizedLoop"]], "loopvectorizedynamic() (in module tilelang.transform)": [[123, "tilelang.transform.LoopVectorizeDynamic"]], "lowerdevicestorageaccessinfo() (in module tilelang.transform)": [[123, "tilelang.transform.LowerDeviceStorageAccessInfo"]], "lowerhopperintrin() (in module tilelang.transform)": [[123, "tilelang.transform.LowerHopperIntrin"]], "lowerl2persistent() (in module tilelang.transform)": [[123, "tilelang.transform.LowerL2Persistent"]], "lowersharedbarrier() (in module tilelang.transform)": [[123, "tilelang.transform.LowerSharedBarrier"]], "lowertileop() (in module tilelang.transform)": [[123, "tilelang.transform.LowerTileOp"]], "makepackedapi() (in module tilelang.transform)": [[123, "tilelang.transform.MakePackedAPI"]], "mergeifstmt() (in module tilelang.transform)": [[123, "tilelang.transform.MergeIfStmt"]], "mergesharedmemoryallocations() (in module tilelang.transform)": [[123, "tilelang.transform.MergeSharedMemoryAllocations"]], "multiversionbuffer() (in module tilelang.transform)": [[123, "tilelang.transform.MultiVersionBuffer"]], "persistthreadblock() (in module tilelang.transform)": [[123, "tilelang.transform.PersistThreadblock"]], "pipelineplanning() (in module tilelang.transform)": [[123, "tilelang.transform.PipelinePlanning"]], "rewritewgmmasync() (in module tilelang.transform)": [[123, "tilelang.transform.RewriteWgmmaSync"]], "threadpartialsync() (in module tilelang.transform)": [[123, "tilelang.transform.ThreadPartialSync"]], "threadsync() (in module tilelang.transform)": [[123, "tilelang.transform.ThreadSync"]], "vectorizeloop() (in module tilelang.transform)": [[123, "tilelang.transform.VectorizeLoop"]], "warpspecialized() (in module tilelang.transform)": [[123, "tilelang.transform.WarpSpecialized"]], "warpspecializedpipeline() (in module tilelang.transform)": [[123, "tilelang.transform.WarpSpecializedPipeline"]], "get_pass_context() (in module tilelang.transform)": [[123, "tilelang.transform.get_pass_context"]], "tilelang.transform": [[123, "module-tilelang.transform"]], "cuda_kernels_output_dir (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.CUDA_KERNELS_OUTPUT_DIR"]], "passconfigkey (class in tilelang.transform.pass_config)": [[124, "tilelang.transform.pass_config.PassConfigKey"]], "tir_add_lower_pass (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TIR_ADD_LOWER_PASS"]], "tir_disable_cse (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TIR_DISABLE_CSE"]], "tir_disable_storage_rewrite (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TIR_DISABLE_STORAGE_REWRITE"]], "tir_disable_vectorize (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TIR_DISABLE_VECTORIZE"]], "tir_enable_debug (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TIR_ENABLE_DEBUG"]], "tir_enable_equiv_terms_in_cse (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TIR_ENABLE_EQUIV_TERMS_IN_CSE"]], "tir_merge_static_smem (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TIR_MERGE_STATIC_SMEM"]], "tir_noalias (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TIR_NOALIAS"]], "tir_simplify (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TIR_SIMPLIFY"]], "tir_use_async_copy (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TIR_USE_ASYNC_COPY"]], "tl_config_index_bitwidth (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TL_CONFIG_INDEX_BITWIDTH"]], "tl_debug_merge_shared_memory_allocations (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TL_DEBUG_MERGE_SHARED_MEMORY_ALLOCATIONS"]], "tl_disable_dynamic_tail_split (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TL_DISABLE_DYNAMIC_TAIL_SPLIT"]], "tl_disable_fast_math (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TL_DISABLE_FAST_MATH"]], "tl_disable_safe_memory_access (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TL_DISABLE_SAFE_MEMORY_ACCESS"]], "tl_disable_tma_lower (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TL_DISABLE_TMA_LOWER"]], "tl_disable_warp_specialized (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TL_DISABLE_WARP_SPECIALIZED"]], "tl_dynamic_alignment (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TL_DYNAMIC_ALIGNMENT"]], "tl_enable_aggressive_shared_memory_merge (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TL_ENABLE_AGGRESSIVE_SHARED_MEMORY_MERGE"]], "tl_enable_ptxas_verbose_output (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TL_ENABLE_PTXAS_VERBOSE_OUTPUT"]], "tl_simplify (tilelang.transform.pass_config.passconfigkey attribute)": [[124, "tilelang.transform.pass_config.PassConfigKey.TL_SIMPLIFY"]], "tilelang.transform.pass_config": [[124, "module-tilelang.transform.pass_config"]], "simplify() (in module tilelang.transform.simplify)": [[125, "tilelang.transform.simplify.Simplify"]], "apply_simplify() (in module tilelang.transform.simplify)": [[125, "tilelang.transform.simplify.apply_simplify"]], "simplify_prim_func() (in module tilelang.transform.simplify)": [[125, "tilelang.transform.simplify.simplify_prim_func"]], "tilelang.transform.simplify": [[125, "module-tilelang.transform.simplify"]], "tilelang.utils": [[126, "module-tilelang.utils"]], "deprecated() (in module tilelang.utils.deprecated)": [[127, "tilelang.utils.deprecated.deprecated"]], "tilelang.utils.deprecated": [[127, "module-tilelang.utils.deprecated"]], "array_reduce() (in module tilelang.utils.language)": [[128, "tilelang.utils.language.array_reduce"]], "get_buffer_elems() (in module tilelang.utils.language)": [[128, "tilelang.utils.language.get_buffer_elems"]], "is_fragment() (in module tilelang.utils.language)": [[128, "tilelang.utils.language.is_fragment"]], "is_global() (in module tilelang.utils.language)": [[128, "tilelang.utils.language.is_global"]], "is_local() (in module tilelang.utils.language)": [[128, "tilelang.utils.language.is_local"]], "is_shared() (in module tilelang.utils.language)": [[128, "tilelang.utils.language.is_shared"]], "is_shared_dynamic() (in module tilelang.utils.language)": [[128, "tilelang.utils.language.is_shared_dynamic"]], "retrieve_func_from_module() (in module tilelang.utils.language)": [[128, "tilelang.utils.language.retrieve_func_from_module"]], "tilelang.utils.language": [[128, "module-tilelang.utils.language"]], "compress_sm90() (in module tilelang.utils.sparse)": [[129, "tilelang.utils.sparse.compress_sm90"]], "tilelang.utils.sparse": [[129, "module-tilelang.utils.sparse"]], "check_cuda_availability() (in module tilelang.utils.target)": [[130, "tilelang.utils.target.check_cuda_availability"]], "check_hip_availability() (in module tilelang.utils.target)": [[130, "tilelang.utils.target.check_hip_availability"]], "determine_target() (in module tilelang.utils.target)": [[130, "tilelang.utils.target.determine_target"]], "tilelang.utils.target": [[130, "module-tilelang.utils.target"]], "auto (tilelang.utils.tensor.tensorsupplytype attribute)": [[131, "tilelang.utils.tensor.TensorSupplyType.Auto"]], "integer (tilelang.utils.tensor.tensorsupplytype attribute)": [[131, "tilelang.utils.tensor.TensorSupplyType.Integer"]], "normal (tilelang.utils.tensor.tensorsupplytype attribute)": [[131, "tilelang.utils.tensor.TensorSupplyType.Normal"]], "one (tilelang.utils.tensor.tensorsupplytype attribute)": [[131, "tilelang.utils.tensor.TensorSupplyType.One"]], "randn (tilelang.utils.tensor.tensorsupplytype attribute)": [[131, "tilelang.utils.tensor.TensorSupplyType.Randn"]], "tensorsupplytype (class in tilelang.utils.tensor)": [[131, "tilelang.utils.tensor.TensorSupplyType"]], "uniform (tilelang.utils.tensor.tensorsupplytype attribute)": [[131, "tilelang.utils.tensor.TensorSupplyType.Uniform"]], "zero (tilelang.utils.tensor.tensorsupplytype attribute)": [[131, "tilelang.utils.tensor.TensorSupplyType.Zero"]], "adapt_torch2tvm() (in module tilelang.utils.tensor)": [[131, "tilelang.utils.tensor.adapt_torch2tvm"]], "get_tensor_supply() (in module tilelang.utils.tensor)": [[131, "tilelang.utils.tensor.get_tensor_supply"]], "map_torch_type() (in module tilelang.utils.tensor)": [[131, "tilelang.utils.tensor.map_torch_type"]], "tilelang.utils.tensor": [[131, "module-tilelang.utils.tensor"]], "torch_assert_close() (in module tilelang.utils.tensor)": [[131, "tilelang.utils.tensor.torch_assert_close"]]}})