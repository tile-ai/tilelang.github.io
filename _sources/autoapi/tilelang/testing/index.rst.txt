tilelang.testing
================

.. py:module:: tilelang.testing


Functions
---------

.. autoapisummary::

   tilelang.testing.main
   tilelang.testing.set_random_seed
   tilelang.testing.requires_cuda_compute_version
   tilelang.testing.requires_cuda_compute_version_ge
   tilelang.testing.requires_cuda_compute_version_gt
   tilelang.testing.requires_cuda_compute_version_eq
   tilelang.testing.requires_cuda_compute_version_lt
   tilelang.testing.requires_cuda_compute_version_le


Package Contents
----------------

.. py:function:: main()

.. py:function:: set_random_seed(seed = 42)

.. py:function:: requires_cuda_compute_version(major_version, minor_version=0, mode='ge')

   Mark a test as requiring at least a compute architecture

   Unit test marked with this decorator will run only if the CUDA
   compute architecture of the GPU is at least `(major_version,
   minor_version)`.

   This also marks the test as requiring a cuda support.

   :param major_version: The major version of the (major,minor) version tuple.
   :type major_version: int
   :param minor_version: The minor version of the (major,minor) version tuple.
   :type minor_version: int
   :param mode: The mode of the comparison.
                - "ge": greater than or equal to
                - "gt": greater than
                - "le": less than or equal to
                - "lt": less than
   :type mode: str


.. py:function:: requires_cuda_compute_version_ge(major_version, minor_version=0)

.. py:function:: requires_cuda_compute_version_gt(major_version, minor_version=0)

.. py:function:: requires_cuda_compute_version_eq(major_version, minor_version=0)

.. py:function:: requires_cuda_compute_version_lt(major_version, minor_version=0)

.. py:function:: requires_cuda_compute_version_le(major_version, minor_version=0)

