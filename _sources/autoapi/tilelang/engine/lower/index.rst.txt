tilelang.engine.lower
=====================

.. py:module:: tilelang.engine.lower

.. autoapi-nested-parse::

   The compiler for TL programs.



Functions
---------

.. autoapisummary::

   tilelang.engine.lower.is_cpu_device_backend
   tilelang.engine.lower.has_device_kernel_launch
   tilelang.engine.lower.is_device_call_c_device
   tilelang.engine.lower.is_device_call
   tilelang.engine.lower.get_device_call
   tilelang.engine.lower.get_host_call
   tilelang.engine.lower.tilelang_callback_cuda_compile
   tilelang.engine.lower.tilelang_callback_hip_compile
   tilelang.engine.lower.extrac_params
   tilelang.engine.lower.canon_target_host
   tilelang.engine.lower.host_codegen
   tilelang.engine.lower.device_codegen
   tilelang.engine.lower.device_codegen_without_compile
   tilelang.engine.lower.lower


Module Contents
---------------

.. py:function:: is_cpu_device_backend(target)

.. py:function:: has_device_kernel_launch(attrs)

   Check if the attributes indicate a device kernel launch.


.. py:function:: is_device_call_c_device(func)

.. py:function:: is_device_call(func)

.. py:function:: get_device_call(is_device_c = False)

.. py:function:: get_host_call(is_device_c = False)

.. py:function:: tilelang_callback_cuda_compile(code, target)

.. py:function:: tilelang_callback_hip_compile(code, target)

.. py:function:: extrac_params(func)

.. py:function:: canon_target_host(target, target_host)

.. py:function:: host_codegen(host_mod, target_host)

.. py:function:: device_codegen(device_mod, target)

.. py:function:: device_codegen_without_compile(device_mod, target)

.. py:function:: lower(func_or_mod, target = 'auto', target_host = None, runtime_only=False, enable_host_codegen=False, enable_device_compile=False)

   enable_host_codegen: whether to enable host codegen, default is False, as we have our
   own host codegen implementation in jit.
   enable_device_compile: whether to enable device codegen, default is False, as we have our
   own device codegen implementation in jit.


