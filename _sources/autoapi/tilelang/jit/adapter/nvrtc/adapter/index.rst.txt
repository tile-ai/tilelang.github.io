tilelang.jit.adapter.nvrtc.adapter
==================================

.. py:module:: tilelang.jit.adapter.nvrtc.adapter


Attributes
----------

.. autoapisummary::

   tilelang.jit.adapter.nvrtc.adapter.logger


Classes
-------

.. autoapisummary::

   tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter


Module Contents
---------------

.. py:data:: logger

.. py:class:: NVRTCKernelAdapter(params, result_idx, target, func_or_mod, host_mod = None, device_mod = None, kernel_global_source = None, verbose = False, pass_configs = None, compile_flags = None)

   Bases: :py:obj:`tilelang.jit.adapter.base.BaseKernelAdapter`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:attribute:: pymodule
      :value: None



   .. py:attribute:: kernels


   .. py:attribute:: params


   .. py:attribute:: result_idx


   .. py:attribute:: kernel_global_source
      :value: None



   .. py:attribute:: param_dtypes


   .. py:attribute:: param_shapes
      :value: []



   .. py:attribute:: dynamic_symbolic_map


   .. py:attribute:: target


   .. py:attribute:: verbose
      :value: False



   .. py:attribute:: wrapper


   .. py:attribute:: lib_generator


   .. py:attribute:: libpath


   .. py:method:: from_database(params, result_idx, target, func_or_mod, kernel_global_source, kernel_lib_path, verbose = False, pass_configs = None, compile_flags = None)
      :classmethod:



   .. py:method:: get_kernel_source()

      Get the CUDA kernel source code.

      :returns: The kernel source code, or None if not available
      :rtype: Optional[str]



   .. py:property:: prim_func
      :type: tvm.tir.PrimFunc


      Returns the primary TIR function from the IR module.


