tilelang.carver.arch.driver.cuda_driver
=======================================

.. py:module:: tilelang.carver.arch.driver.cuda_driver


Classes
-------

.. autoapisummary::

   tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp


Functions
---------

.. autoapisummary::

   tilelang.carver.arch.driver.cuda_driver.get_cuda_device_properties
   tilelang.carver.arch.driver.cuda_driver.get_device_name
   tilelang.carver.arch.driver.cuda_driver.get_shared_memory_per_block
   tilelang.carver.arch.driver.cuda_driver.get_device_attribute
   tilelang.carver.arch.driver.cuda_driver.get_max_dynamic_shared_size_bytes
   tilelang.carver.arch.driver.cuda_driver.get_persisting_l2_cache_max_size
   tilelang.carver.arch.driver.cuda_driver.get_num_sms
   tilelang.carver.arch.driver.cuda_driver.get_registers_per_block


Module Contents
---------------

.. py:class:: cudaDeviceProp

   Bases: :py:obj:`ctypes.Structure`


.. py:function:: get_cuda_device_properties(device_id = 0)

.. py:function:: get_device_name(device_id = 0)

.. py:function:: get_shared_memory_per_block(device_id = 0, format = 'bytes')

.. py:function:: get_device_attribute(attr, device_id = 0)

.. py:function:: get_max_dynamic_shared_size_bytes(device_id = 0, format = 'bytes')

   Get the maximum dynamic shared memory size in bytes, kilobytes, or megabytes.


.. py:function:: get_persisting_l2_cache_max_size(device_id = 0)

.. py:function:: get_num_sms(device_id = 0)

   Get the number of streaming multiprocessors (SMs) on the CUDA device.

   :param device_id: The CUDA device ID. Defaults to 0.
   :type device_id: int, optional

   :returns: The number of SMs on the device.
   :rtype: int

   :raises RuntimeError: If unable to get the device properties.


.. py:function:: get_registers_per_block(device_id = 0)

